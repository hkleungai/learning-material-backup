%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: p235-fakcharoenphol.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica CMSY9 CMSY6 Times-Bold CMR9
%%+ CMMI9 CMBX9 CMTI9 Times-Roman Times-Italic CMMI6 CMR6 CMSY5 CMEX10
%%+ CMMI5 CMR5 CMCSC10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P cmz -t letter p235-fakcharoenphol -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.03.25:1512
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
dup 101 /e put
dup 104 /h put
dup 109 /m put
dup 111 /o put
dup 114 /r put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueXX 5000772 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3037a112066957
7889d67fff57549064b985d67ede2fb03272083723541051ebe936eff01a4ab3
cd845d565dfdf25d9ddd2792db17f52f894bea484480f06c832140fdd6c3af0e
fef0584c6b78b5e2bbb9a752f10581fd1c48cb498a822afb18cddebba34695b9
b418010368fdfb7bf758d50f3af03360b81c776325c33c9c81130b1e1be840cf
68c71ffd091dccc0df7b507fe8953dc3836af0da08ff9ff3e9cf7288d9eb8baf
ffac546a0fd987ae8e0bcf7b759f4408e13524f478de5896d816cb0ad2904271
cbec82a5ca50f0598502b434ecd94531b4a65181b5b3afcb650904b15157737a
a4386f1a7f1252caf2adbd5c8162bf3b065c01ca471d520c884ebbe1b29f9549
134e285dea2fe158c15a08a744cdda00bb6c62158262e24702803d9e1dc1d3a3
1383085631154b077fc20488ee3aa03f47ed2766644330b94133f2f9389b99b8
96d3707d1c5bb227fd3bbdf3a6ff572bf07164107c7a1c0710a5c7cfb67282f9
c238100fa138b75c553d7cbef17e2292a320d3d86a6210e6e3a1e590b10dac6e
177094d5dd163db623d7b344478752f6f3d7d5b3fa92e6bc72dc6fc343d2f946
9153e3d14c5a6d6b1d9ca52947b789cb4cf6196a02973aff0b097333f8d615c0
a1726ab7e31c378eab77150faa28cce535afe3ae5798402ca51cbd18dedc2c43
5281d0781351df30f4d11761579676449ae4a47a10f677cdd31ca9120fc2606a
9025d3cc09d58856a9bbfb17669f706ff8c7efe37a3656c9b20609cccb58b309
0595ca5666833f2bbf884aac1cd632fce69b4e0ea2e0a25b9c4d471f0e322e09
4cefda321359fdbe0a82656d3ecaeb68b7e0c7e733d85066ed7474c22b67169a
1bf1bdf7dfd0ce0aaeef78ee393ce6ea65edc1fdcdf3f744f714005d8221a156
4e7425237ee3e9601e855e767c5419476ec4879db4b6996f3a19db9ced9962bd
4c898c572b8bfeac450ca8dbad2df1bd3e77c7a2365c4f2db6f0efe2c8e80550
58f6de3a4d1c2419c8ed2d39a39f28eac01eaffc9e0c965503f1ae5cc46c3d5a
ed10bf947caa5e1d11cbf3b73a6cce0ee4c725cfa4a6cb97176fb0dbc6da27af
9a86b4495252f2f361877a4fe275a88be259becc7a369ab6d5a9f140abb7c700
1686a7cdd2520d5d4deda1c6fc982de1794e497e1d76ebeaf525833817209b92
a533ab0164068c58b36e87d06ff08d8d00dc5990ee808ff769de1649a5ed4f0d
22a6e42a8c02f7a74da5572a97b05424e615bb3786530fb19121dd45f777999c
8bb349fc63ac84287a4a4810fccf403ac122365efe2521d14f201b8a7401724f
6b5cd4531592380d5a4bedaa064d8203d0c7910038130aa7eb4d60a5ce189ce2
1a4e4ba1dd6de947e3f3f637b824ab40635dd0037162f1d7ef088eb10b656001
1b4bcacf1dfe3e09bcb1a5832ac46d5582917ac929b2a898b84e4ecf43a9a2f2
a96995937fd3bc985d2a0412de0a8ea15056c573836bbc9d75927237c0c77a80
5a703a42448246f4e635345f4c9074e03930ed4b4c1d0af0642885b5da6e2eb2
14eb44ba442af4384d5c33f847d87adb6581341dd62fa37396429deccf453ef0
da354179f36f657e32cacca3e9a29d63524e529bffba7a681538124418671cdf
3ab48b2163a0e98824666043ef19118166415b4cfecea3d324cf135c2c6b29f6
dedd5aa7e5e7d59087a139421e1097dcd6f676655e071a3f54aad06fb9f050ef
fb3e9bf1cbed1ba4845e3ae528fc92726c75cd7eb0e2d47693dbd4a7f6d8b16a
59d3ab3ef0299afa9e660824793ac2a1edd9971f8331a9aba5142de180536bc6
a3aceb60dd860b9f4101c48e5d722c1fd20324355fc5e7920e8752275215fd3e
7a4fa5b1637ee97f4b2b3e12da3c5e86310d5432c71373d10bcd21c5b991b667
11cdbf5994500f92632c3dbcda657a451c88170282356cc85405ec9e8f4f2935
f66c04dd921eb65e2855e91339bbbf00b1c1daf44ffbd74182080dba87f53be4
87b7b6b8e09fb10b59ee0bf47ab63a05fa499a01eb847c49d341291c56e15074
095cb9f2eb050eebfc53f224f3c6696c46ce953611750baee20b0d392a9ed185
1b3e48fe420bad836a9d25e37709485d1576fce6417be796de3f7fe1a8acc476
dd918eef3506d590dea2070fee806631f54f575c451727ae7f46bb4e0029480b
42eab0dce274fb9f91a4498718b8567abab16d5fd7f9142d07c86c0cb3a45c81
90ed7b6c3dcf4ee92658df589ade923c327e62ea924b83b301d30bbf1b3f4cb7
4780e187e3307a8c446d9833e3e027d9be1301b1a523dedaebe642da3553b56a
d34388adac586bde516476765d6e4b695b7160429fc282a25524c8bdcf57d1c8
63adc0298fc841c73578f943254a34601a4a5b5babf18c1edde1d8aa832cf346
7505422d0c54520f9b48bd11c00b1c3f5c134f0be3da36f20c47206b1781a07c
444bc4a0a9726c45c618bae5754b8765b211d85e6eeb4ef990431a1c71667996
5b34e36a3818a6e21ec17e6db4b84e68563aacc561d037783e7a8516692237df
eae7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
/UniqueXX 5000788 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4a71813d2ffb26
445026f89b4787516ecd1afc78f8bd19e91e9ccc9402e8c36d2449c1ff850a8a
f61165aac3fe931332dd28e261b91b05edd18f44ea7d58a8f35fe88493b64aad
6bfac3a0136215fc2f4ca8e91d70c5010e6f4013e6d63b44f6fb00afdbd7cdb4
5ec5b1d9736f45cefc8a0124b815987cebd81bbe0d44dedb2d5ef37923b3d551
abb6a1cefca7868fc7bf3814ef7d7b6b1ae6e869cb77aa29e3d90b12b0dc3ff6
ec945922b5899bbf2f12e92731486d2ef1230c528bf8d7e0ae09ad7632a38966
5963de49d1ef3d65bc483e4a577b927c940f5e121169ba52f6576c85793e5fd7
7f5863c488e55bdefd5d8b2514795533aabbc12e7f51816c7e1484f1c441aa9a
66a5dc77158e79cd6692d299b95e8058b35e771a6972d2b5eb1cd6d2bb8e835d
361a6eac0c90c906aea1cd75c4412a1339dc1439f93e59917311bf20af4f2bc8
bba5a4626f75f28a47d4595c37f4019df480d9385975159142618e22e964f019
d88125210e2ef21d65baf500adf802297b24eebbf4e93c617a613f856bd0d45f
e17a9480980ef83950bdb8ebf208c895ebc4a7132f0765b7c19a332ebbf8a3c9
ab65063a42e19ca9d43dec3de7aba46b9a5d24fb93d615c0a1726ab7e31c378e
ab77150858535b91362ab0e2b968dee1c539964126d937f9d4980ccefa92bc81
b054996a65a13995c9c9d819ff05511cfc89cbfe67447c940405001d61be633b
b771eff383fc6977ec06af30f981504260de7b9ec97359974734f495ac073935
fb30e3700679092ef5d971b6b2da0e15960f2391fa6b63c33e7f56b4a9b86951
1d3686a5e8e613a69a0add8b8c73b127ddcd397a48d785079e786d24b4295a50
5b3021b490724909c1f4a2cfe4ed60e0147e0a42a3658c17297aaa90ab0f3a21
3310f6bd9fe944b0531e340583e5fe7946540027b3963c177645f2fb78b0b1f6
d00162c42023229a9c5a61710e7374e27f764329033dea897b736c2f48f081c6
16488678254d0241db154bf9a991d8d0fa895a3d13424abcf03d9e2b4bfcb8bf
602fb625f20ef47e21fefde2236e0e5646d572afabf0647f167e08e9aa2a646f
b74b2ff2063f267457a5c81fec70b50dd02f960929bcb4e8f19bac76e66fbecd
bc7938dec857dc4c277bbbb1bd2bf39d9ea94ed89d5b5b307ac0d942e7af57b0
d9feede765b9276628e8aa80b83e610ea46a19e5b3e73831ac674c7b5708eccf
b6afe4825f9f751dc793e8678053f57c99451aa37a38ee2067b47669c75f4b45
32bcdd18aaa5f8e5b05b21eb07800b9921951031838c4b1fff46fcfa7eac1539
08ac008b7041fdb67a6a7e575d046b23e6e68ed7b18233cd1a3f95ba9f830c09
cfdd191216e28ceb654a8d6322a1ad29f8f9a53da742e0f77353b078af677b88
9bb2ce5b877ca878beea0086348c8d6c171e78f6bfe2b3cc2be58b7c4a370f89
5dd0fb939441ecb111ea00323fd2e9e89cf5d59860f2b62622c6003bfb5b4b83
5fa0688cfcd5e605f1b4ea70a079cb70baacee69dac003fe6a9a1825e26c08a7
ee5e17e264e59061a00b8af122b7172b47b79788c100b843259465bdf590ef1c
793c3dc822911e2790518324c26775bd0af399269ca66cc7d668f3476497b9c0
39b1f8f8cbb52523709ef058062bfcb0b1e033460750ed505cdde93ab4180196
d329b71f6dfffdcccd966d6b4617882390e18c9da23384c9a221c8eaa99ba243
bad35d4c33e1f8f9f4193ab8936ff11c7d91fe416e979b6349398f92b764b58e
18f7abf9b621f96188d4e988b0346abd5b6e2270ead3b33d830e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /delta put
dup 105 /i put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueXX 5087380 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311e252234d51741e18db3a68e8ad10242
29e5817a10e796a78d2c7f7c1f50961b9a57aa604c9f821dbf5a9295197bc666
31678d7d2c7e1f8f2151ce0c29efce46270570f4301c5dad1b38884732e53dad
05dfc36b020e726ca575f71f04abf2b49e1f1d6d2a08a477658ca9a48f1c8cce
14382f0a42201de56e2821ee2b0e91a818b1b753d810ec2428dae5153b66af66
9442192024becf743a8f6264a58a0b3aa823510a4957d1bab3e1b83135362888
3e392f49926471a8021fdb48637baf0abcf31204b1b214f48c99f44af7782323
69d772ae4f49be53a1bf584747bf29b94f530d59a5be5370b8dd0691e32a21ba
9d0d592cf3bb50a99a3ecd18d6c4114cb4cfecc49705da90d7edb10e3a28f9eb
a49347a09d31eec896f2a28e9607d99d42914aea16545c16e136bdd0b75fe486
61e24c7a9e9b233a76754c760822d0a88c575e08ae3e3f081d7bfb80ec4c03ac
a08b65fb6474f71fc95c7c2462f2eb3754e647c29498288f2ced0bd3a2bca5c3
2f80a61fa667802d376cacd34de1f9572d1b3ab09d6f352750db4a768f869638
a87457889aa502850427b40e1294c5ba33e6b17532b2d13b5f50e71582f93daa
231e86597872a2a968127afb0f36257a76ce1eb24e6c4f29fce2aaf6532fb5cf
df84da03f03a45b915209f67d398c7c4f7a3b0623750259087a478dca684b29e
a8b7f52060bae9394369ed1cecc645d113cca3772a8dc36c6d916b5c5e65454c
0a188a33395fd3da67ad0a31ddab6a8434dd80f0bd0ea1a2a62eecc331d88b3e
369552daa1c575a98fe84383548626b65be7c24ae7eb61159f149872cfd87cf7
6c1a7c155c7186c7600e58cb61b8cb0c5dea98268a39e928bf6fc53985eaa763
2b28c1eb3d82e4d3fe225223f4266d2b6147e344aad2d4884a9308aadc7801af
a606838925e3e50ee7aaf73f090baefcfd4e34b795cd92d83c944d91a4940f2f
c955d727ea5bd76f0c8057b12621eceb0947b0a5dd10dbcbc52957dd978d7db0
c794660afdd4e946b3d7fc1ba60907fb3f756aab0406c0e7bce5a2238fb3e12e
07e2c0a7f465e90057642d704434ae0b57bd46c8ea91ab2a386e24c6deaf9cb0
8cdaa8fc4ec3fadc06bf28659cb878453db16f4b03925b2127b83be8fc240f33
23ea950b51d70c8fe861e30c346efa0a0125137598caca5478991e35f5bbbc19
4c787488ba339830bca15f8333431902e82b66a514a41c0bff92719a6a0d9587
4cff62c622fc61a0308a69f9fb7ef51bb274ce9e059c04b64e817abdbc4210e7
1fd76df9b22c0cdb798fa20b593ff16ffc2327fa0baa2cf99bb90fd85adec369
6aaaeec0d8736df2c10357daf76a5e18f3073dc601d37183fcc190fc7c62dc41
4f2a9d97c7bc8708f0ebbef43c8dafe8583fe958c68aa3a12734a2ca25af8765
2d22218e6535516258e14c3179fec903eb485d7b0aa04e676085140565288583
8ef273a21d352aeaa05c47905e15d05b752f177f103fda69b9d4b1d82e3575d1
e2bc02a30e4b92f9fa0d79e78e95ac63632ba998f6705fb68ef737d973e52fb8
d2247a4cecf7d16d01cd30889f324168cdeeda44fb72ee020ef8ff7f3e142117
878cb517ccd8923015329d576d092859bb912da3f65885f8cf525f81ba2e242f
809f66f2a2896189b547e723cab5df44aaa13d01edc0ea88612373a87f7abf7c
52d0c70907c813f9c9febabb3c6e707f1b17b95f35b3808a5a9d651b2b242490
96cd97b43fa67b3be81acbab2460b6f8f95911eb034bbad69af8a74077cb8a31
cb478a1d31a301c4647cf4c51159fbe90467fd9f34bfa3236670f09874ca641b
5c3ac35bb39cf5144ae782ee51b3a5580232535d020a96023048ea80e18580fa
e76bab1efeb971e7f8ca969bb195e0a935ef542309e0207a9d0b6b276d477192
a489c4ef9c964b7971ccb53abfb35c25ab1736ce0a6dfd11c8c00584f68b3428
bd2f78d25542822488981649ffc9afd751d7102509a16765e4460535ab6dca17
76f2ad7a3a89e0887ef034584ba4c65bb832f2265d6de117b2e43cdd9c41aef5
95aee4d78ef43598b98ca268e2d3120f61cf41928ebc7306e6ba3141f3a1e6f3
fab17501c16151bfd193c8e851b7603952dd91a6c5dc3201c00302f3b36a5c4d
16f0446054cc72586a9e8ee07cc7e253d0f9d11899b5fe2301c72ceb163c0091
bd7671b2dc63de0512f576ff1b3540f7707545330d75c46e0586cad989e2fbda
2a0100a5535cc306ef4714f0b728925068a877370e451592b35c48be6d402922
c1edc85824d318d158aaacfbb2f11dfb3a5797d2dba1a17542b5802d5d09f6de
84e319c84a9d18b448609c3f3b8d57dbc85fe276d04b8d7824c6583c26c0c04e
251112a05d76f49e9d6f6f68fa134e55671089a818e5604e028a65d2438fe77c
4a40eeec0a3e758ed18ad20c502bd74588668d7a7ead2c34a85e3cecbb351b58
bf86ca2ee1cf730bae6c8f78feb922cf3e7b31909f33fb4332e6c4a95c05e2ed
ce20e52e4378268a9c4fd25f40ee6d413b4fcf2e771743c604e25896a700913c
e8ebfe1db5f1b63b4f3ad016a5b98ae75136cb53ce740103de7a0a
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /summationtext put
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueXX 5000774 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d7190fa2d133a583138f76695558e7a
e9348d37cac6651806d08527c1bb4a062a4835ac37784cc39ad8841404e438b4
d52d3901e47a1de4f7924e0fb3daf442499175bab1226edf692a4956739f8828
e80592f450c5d5c22ac88bcfbe9748f61d18243a16f4a4467f084e8e2be46ef4
7fc51c3a8199e3cda62ff9c4fb73956dab8b6683d2156377808cb35026073e80
523f59a30d195fcf9b9fce4ffafc6d5649664203ab24acb938d58d246707ffe7
d62f04bec4b70c21ef75beb2b812622b3c74e969d72d3cd11bd7106294a99caf
0b1629bc7d4de6b96ca82930831d64575f23f4ad06a0e45e315b1d392411be8d
6d73c998789ff258a07a3c8c2057325784514c845500bfd1a971310cfc11d41c
1a167dbd5ff012c60add4e87325f6e5299032a839de65fb1473a166aae1876a4
414a434f22c1d241591fb36f857df6fa930608750ffc0c54f44994662b1f00f1
400bf752ea8d83ffc4cb77a290bc2d99981ae59a191748ba5c7ba1a9d2583fd2
1398452b6ff5d83a059f7eadcd2ef744e9dd22bdf9c79d049bf06835e878c32b
7765c69bdd8ef4deb4ea7cfff4cf9354a4ddffa689de961d16772491c7afbd7f
ffde42400764c68e954ee5c455a5687959829bc3b319b2147deaab3628662c80
30c5e02fea09609abe4eaa12e217bc3af673f1bc36a7039eb13fcacb4218fe0f
c5a3f9452d4edf46cc91db67b624d4f2d37502fb9f11af4da18ca40b61097f95
d44329375467ed13c5cb585ec53f62b83ef9502cc755af44bf32b87b8ae9f3f2
f8dbf72dab90acafbacd280db6aaffaefdff6d5eff26669bac56280a950560e3
d01714ba38659b0e4e28bf8cdc1f15ff7e3ea9d95a6afbbe3d8e6905aa6d531d
6b6dcab89e2036cc492c65f76ddcc3cfcff33fde3d9ffd10f7a90530fd5c7683
4329baa902e701ca42717476298c9ff511b1941244bb1dfd0e5cab92a43970cd
1bdb292eadd055c97972844fdcdb0aa06401e7b2632b9d134f96bce0064860f3
9859da7a9a82be0a840672a1331212752ae1b521b693b384a72dba8d37a86eaf
a0341e7fc5f6ef7a8c566aacb91e8bf5005c18837894c4eacff41dba54e071ca
83fff360ef64ecd56cdc49c3503f58322f4ed4a2b681728084f8e391644fc443
27607890b840c788f104265f1458e71e70e38c04639e628728ad2e184cd5495d
7aaaa7b48243709c15c8b32f641bec8784211fcdbca1e27584a2fde4b3cc1389
10504246b9ca012ba07eaee67b6da194f1e1dd7196e45ab58460edfa07b7b229
179c5282d72fcbd1eb04066b89d51c9978fcce5fe9225154a22563ca82221ce9
7c9dadf11353a0958437afa1a4f64a0f913c04115a724dc448d81a01ae37b8e6
7bb0997d472518d35e9367a4a017de3a4b03753936ba3b7cb9c3892d19ef6da7
14b44e1a514590a5b7504f0d0f6838fc4fd84cf21c2cd605743bce3ec479c3a6
b3ab4e17762bd1d812948f581ee9d759566d0157b38a247811d651d1274a00f9
504d87429c190d529b0aa53165a36c85cdeef3031cc8d32953717e0c9153571e
e46bb4101f63bd9e3ba9ea3c47495cf24b2fab6bb0c0c791870a710da00ffa58
3bb1af263fed4dfe80ccdfb1859a7bde25679820a4cc511202b227262f779a80
fd1ac5191e68c80af4e45e93cd57a260ecf3d0bcb352ee43851d3016320f74a6
412e0c60537e5fed7b58cd5670b7e8d4bfbda7e5ed60d1a6628f14404aa8db2b
54b8d15502fd0e2051cdc755bd6f754b5736b330e83d31223d3be8ff8c210ebb
3a238e32bf291d9e5c

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.1: CMSY5 1.0
%%CreationDate: 1991 Aug 15 07:21:16

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 48 /prime put
readonly def
/FontBBox{21 -944 1448 791}readonly def
/UniqueXX 5000815 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b6784decd2fb36dec8f
7478da853762e00bc9c52ba86ef50d222ff142abc18e4fb95b86b3e57d9390ca
86e8de6347bf7f48f93322a372c5d7830521b14e8fa0771961b027c81365426d
d95d16b950e216a90f28ce806244ff28dd969cb512a23e05045e7b2bcaf7d6f0
ca8b51494f2ec0681bdfde60420628d9bce98a0ca1ecca9140f452a88db19a30
ed46ae881b098c843a51d06f9a153489357fd24de6a0c36cb5a9eb9b3b64dd75
18f83018ae7cefa1c12fd205df6880a705e28457af7b869a6dd28f6b37d82cc3
e51cba348dcdb34efb119b8ce5a996f15492b0f5d34538850a2c1b6a509fe5fa
015eceaf28b1f180a1f3bf1b8d488ac3150fc8c5a7cf9987b3d829d0de5efe4f
1c10570d63b8249375da09542b08bef2f71b347b8205709036a75c93c005ae59
00c917c7493923cc46a83273445c7577f4a80da26c5f135fac8bdaa53d0222be
0575762425ead055828c73d5b0f1d0c58319984d410eafcaa9b978171a2962dc
23d05028e7ad971dc76050cb6464972c5c85fbd448123ee5802b41494f5ed53e
22f271e084130bce9afb94685f1b895c8ce55c5d4bcef97edf30448261889113
97e9ee8a1dbb8dce20a9d582cb1bd7f6f10319cb4e49993ba72bf07d673a676b
22e0f82393f803fc0736fdbd5b6ab673bd05ace0bd4688bc8ed35838f0608edb
83b0afd9fc1e7b30011a84d2a77aef4ab9d440e06904a11531c4efdbf928652f
56a38cc6e5854cf831f9c956b9f1815f880164a9f7c71cf69e73e319a8b2bc72
58ac8ab5e48c58b6b767df48efc3acdad318a86fb6fab008354c900eaeec4d75
e5494bbbd0221c9faa6bc8531dc37dfa4578a8852c85bc239189cb9d603cb913
d4547ee580befee4b96934010aa3ca67bc47a40ecced36e31e05abffee0b63b3
c4a2f4826d279a827629bd9d848ef811856d4e721d22485d7f96d54697c375d0
422e27d121899462d8998b3624e203ee5d0ab08e0af286d5f1352f0e4d5b5877
4f0324b5479621488faf503415333c9b232119542a2454a72918bcbae3628177
414ce76975f786c68ab4fbe47b150539d9bd711c510a7bb87523437fcb82
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 61 /equal put
dup 103 /g put
dup 108 /l put
dup 110 /n put
dup 111 /o put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueXX 5000789 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b031f3fc6c13d7da7277a94ba
018e9998b3dd888011a5d7c4204989f30f908b95533bda845746b673ab71ea57
65a0d14f4350707e47c8276305b28513cbe1bb0dbd269a53719bda46e536685d
df78ca0146b6b93e760256b74d939d4e35b5e77238f04c92298dfdd188feea30
e053eefbcbb52f2011772b3aae39f5805597bbc1e8bb75a446ce014030f4f2f0
f49f9e962ee4a1024a746fa92a3628db5270732b54e43fe5ecfa524f127e5fcc
788e77e66098336ad67fe4cccaf0253272d5df79864bf4b734cb9a5859d557d8
bc11b8e00221ebc12e97de4b1f466ead83a4c894709363bca9040410a52d592e
34ee40cc7e5efa920546b981aa659513a24b1b85c221a1875b62d0b89e57a368
321b8043a5b094e0379760a443d632892b14ad6d19dacc8c78093243ad67e6a3
08e56e6b68412ee690b10dac6e17708754a00d51fc957b500eb80175716eef4b
2ca1ef867614659bee3f2b7319e97b6fdf1efc847bf3cee3156f72f21751da8e
5fb6898919e6799820d3de0642d756e09d6fae4ff08dd3deda3173bff4bb11f7
9109c97ddc05897af709ea199a90fcee8ce4c7a3c15b18170c41c04de2d3fba8
f34296a95b8e1e8de3739b17273f8f2c85e914615e8eac5e8bd2387ba3b1edf4
7968f06e2067d836d0f9f3e085cdfd2de06a62c81d786b304326f7002e83160a
36598589228b4dddddc43c85e1d126f8fe81b828028e26317af5894aaccf4f69
6301e1a9fc45935d8a414957f08febebbc3a72ada80f101e47447d019ade56e9
f4fab969bba2b44e47399fedf5caa1bcea216d7ba713d523dc2e86aef195ab23
9219b07306974ad878ced91b82d4b8342458352b2840a1af07a0788b19701268
2bbad2825caeea0c26a88c8069361f278115e9ebe8ca6983b8fcbccf1dc9de68
1b7850e6d0caa64e5f114d7903c7974ad242044aeff6b774f00324ebc3e0ca86
ab64ed836fdf0729a81057a81ce4f672b25666ddb6769e2d0da15f4dbce8a1e8
9ec149aacf67e561a5f7708149e579714941c6ad4d76735b3b789bb430e0172b
4856082d0dbf6bbf463fe47f628139542ec50c5e0eef09e6b50dc00697266bbd
d535f173378082ae442ddf00805e8e9ef8ed4da8c6b08cc97e0f466ef8b4c9d1
2f9af1c678ff2554592ff95a4298e0289174f08a793d22221fdcf6e144bfd563
3a9ad2c394286b596d76b78c73b745f265abdefa0dc28c0ab53d97fc604d617c
c60dae5813963cb51120c4f5a77a936775cc67abcf6008e9de52ae0517eeeee7
015eb51129e3fbce491340cbe0ba14121da444044f42af4004bd04adfc1f8314
ea87fc11ece41d489cf5155dff6ba51279a21efb31cda26f85c69b6ebde5e6d0
a47486ff24039ace4c6bbea2b0ba5165c4eb31c78abf38e99864ef90f8f41ab1
d2ef23c61891bb06235a606b2717840d2a5c869527192ce7e867f90147ce59fc
80882960cc5a9150b8bcf3ef8a89a94e39bf640961ceb0333a42836b0c3f02e9
e5f704aea7f88d05ba24f2cd9a3a69be2a9b45dcb77e97fa9a202cd86a13d002
ec248366ecfa9e8b6df03c4b1d25f31c6639fdb414f29bd4940eb8cd8d16b047
390b4f494221d49880d7d1156c360e5329228b5512083a676b91724d1d5da3ed
0e21aeb99a6e9d3a9f117c0de9751400629dd3d5bdbe9ad3889284e7984c886f
9c256c6433253d43e09525aa4517fa38a9801335054f549599de44f56704edb5
31fb573ae3648ad518c5227fc096749e81b362d4e35e84c524612b418ce1cc20
2b3af89c0e4ac06ea827b2a89983aeae399aa5efab7fab2d3e90fb66440e1c37
941f7b7cfae6876590d45dee2b4a80d9fdfb009950a34a5221c36e60161a899c
edd03c5a65f5d9305e30e828e1bcab09d6d3b2dd6f5951f3fa59718ed60b5e4f
dd938af9d4b8fed1136d4a53324b4feceaab2b9875327d538783edc407854e6a
85a326643bbfe046e32926f3067ee623c47f5af817f3e1e336793202a68d9cdd
ea592eb8866758cfd4ba637a76e98120585f0f4dcdc738cccc534de3ce6ad15e
961db1948e954ea9f400af8bf1a2a697d72c7f051864da082ca2423da41b2bff
6b5ffa77e29ccd37225859f17d194135d96057b0353d2bbeb2821f61a3a63336
1bf7f88530e557ce4bd915a7913a7b08f57fe9d2264f2b9dbad2224d062b01e8
f3cbb59fecd7d914a588d00a9a56180aab708e2d8c2cd32fcab0d3aff7d95bf4
ec75f0342035b1cbebb6d3d871cc976384e64cdfa361ac065f3de15d1a564f59
d6dff492668c5322cfe032432e4e041317ada9a6d98579dbda774b6171b4578a
30158e8b830c6a9dd619328f6370846a3c10d1a227be014a3851f2f6bd4f6682
cb82f39b8efa4b35d481b3445b028d09919545a8838011eb97b96255f6f329ff
7690855c8996ed0870f38e85802152d702a84cada5b483732a827f0e086b58a3
49f622df6623bf67cf60d29cf043bac2c2fedf75d8f1bfac1f825c4db9ff12dd
e03943573e4e4917ddd7d6a014d0f46fdc4cf9f0795eb7c962fd0c48a17a49da
f1c621d07590dd1979e229a909a026de3de993f69c3592f9570cf71410374c45
e4f11195b8ffc5e2a7a459e87c38fdf5d7a322cb52648873c62b271c5029ab55
e9377080e555b4cd346d9e3b9b7f2fa99826468c0a05679602409452f5ac3580
8b390a973ac199da11d82b2e67d8941708216b35bca4eefc0fc42f2baa554af0
51bb88d8dbaed40a0f3b76154a08f586f17bd0c81f7dc20e9346e677487d2cde
80ff9a1fc73328a91587c6c2d1558e0a34c39ac0e2074c2cfcec3d80dad5ad56
1ced802388ee8324bd9aa5ebd695da72ce4af5050b2f54a5e9ca8c5795fa4c9d
f4608ce47f54bf4a9ee8eef93f4e6242fc0d155c7ba93cb8e63e2c929bca113c
41db38990279c7712c6c6e3fdbbcd8e2a7256578176059dddeeb80bd28467ddd
279eada406924b816d8f1d67cce951cdb754d12b187242e3022d994e6f3d7949
693b5cc11f5f3c2fa1d88a1cb22a041f69f7f2be173b8717ef3d512240f2ee82
064f8d55dc6a5e410f776ca61028217ebd667fba7b4ad667fcbcf7a0836c62c2
32365fb54b9924ca3f9e1d72b003270612a14e5aea0b23f7699957106e2e08c8
bfb500fb3cc1a63cea50d567754a20a04c61b0f8bc856c3c3101819f74013f5d
75a42171f2954232b58f17c2c9214f188622e9ba7ac5da3814d5c2d2279683ba
62cb450c5c75eca6a2ef09dcbb11882920468af1e8891b01936e3fe0adde24a8
1cb53970499e6a8809afe38f2d78f8115fc678c33441754abe1216816a5e8ff6
65d9bd3c1746a51ccdea6bc007c1fce32dce1ed17fd32a29091dcf5c6232afb4
3e474a78604a83c606bf73e10c308c554cbd4d1f1651ae7596cb2457d8499051
401bb087ebdb545806826b929567c0b517a6f6ffdf2913e066d7287579572419
add8cc3dd48fc02cc5f4443b572fd7bbe1c58889df2cf2beb9f626fa0b1011d9
4f83af4a238d5b5409b595da23b77e38b1147fd0fb3a2b63c45714d812139490
bc1965bc1f736e2ad8b67e1607424f1d273ecf250a7c7a13078709a6592420
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /delta put
dup 59 /comma put
dup 79 /O put
dup 84 /T put
dup 86 /V put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 110 /n put
dup 115 /s put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueXX 5087381 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a1e67ed7e41cc25acc04702f6
8ef703e3d45722c1a91fdef7100a48631a02a6f02a08c6b1f9b4df8310385b86
8632718fd87119a233f219d9411383b7fa9f3e4780d8c27e2e89e0cae883d664
c3eac57a3aef8988a2e9f0f8c7f53e0a80bdfc4620e21287d0390e1975398544
7f3ea66401024bea75e1b4c4437b7bb188f76f96b918ac7c6ad7e8ae7f21d8c2
790f08cccec904fe48ef39e597ed4d4237c1d1f596f5906b19ea308020f7a35c
168e327ec3246b1dfabe912f6b6daac09974876d3996e57d180261110db05f15
e3e8eebba3d90b5764c03df3033a1ed678ebc679569a2fb297378b25434c0f20
5313ecb8a952f07242d3ee731b0cdc086a4481178a3d65129c47c09b22e9c431
e11b3747b94c26a757c38d06001798c6a568303d541385244b967d3b1786edea
f65bb53c4c2fe75e4b1b15c2c78d930b4296c80f08bad86012451edc8e9f0854
c3b390a16e27b11b3d45a9f72eff8baded2242dc928a61685d79e09681c97425
5b90a498614cf560fa5b1718981388268ba206a96989e6d0b5d485d9aca5594a
e67dd7b34d8a369adb06647f8aff8814d6d9cdc04a4835918e557174c5bc0f3f
bcea9907a04cf93c12727ec40db3f2f77596dca477862747435bdedacd9b2311
6cc97fa47ffdd7d897fb6bdd5572e35d34e7e1cb5e7273a4ffd86525323ace4a
84e1297028c2bd5469baa2e75d19360c2c9042139d5e7dd4390a6a3935424711
de21910126d750ae279916ceb71da3591d60dc62db333c5021e2c1cd61ade51e
93920226e36b53979925e896e01c383750d79e3ecb415297d35a3575cc1da732
f468a3dc21e73e41caa772de20c206d005731087864b9d4b22ad75d8620c952e
3b09d8b492852e6f47c14f9affecc99195d9c5acb6cf1800be8f63d4400f029c
14011e83dca220ddf445ce17b3e5cb631f22fc7f25838831b63f405b904575f4
2bbb31377885552f8039f6ab9cc4683c84cdacc98f0e73fbb7b105d8c98a4256
c6db0d20e95276d56dbd5036ca91bc96684a5b0fcdfad0365c0bac0a5afa7d64
ac3d3f1ef7d34a04a52f2e755babd8ae83af1b493de467db021926dd36267d77
661b879481d60f6343d1aea7e109be67410325f9d05b2e64846ad423999dc435
b7036484b70b960ac484ba986e0726621282c2f7a94fe83ffdf32025e3d12089
a5f65867ef0f569e28de4748c0d2e9101f111143542a5ef35e534912d0059504
426450a9b4c5d3c9ecde7638453f764046d4dbd3a10535952caa85cd87daaa13
b61f2bd65f85f33c9ac670fd023202871ce91118437db0706b817266bd3ca3aa
271b16928e0a5c46e0db8bcc6b428e0fc9e3b07ce00559086319db37c1dc7760
a3d958cc6dde09b8b842ba9c41296ca8e7223d2188f9bbdc1567e630c3f7301b
0f3b85cf866fd9b989eb913a787558fb8a83af15adddc74025f13478b41790af
2c6ab8d6a51f39bc1dada2330bdc4fe107678f2e12a3573be61037c1f7a4495e
4eaa526c20cb09f9a89d08c64b8edeb884851ca711b3723ece21af9f822ff65c
7b8dd93b646d1a3ed054a70b542d5bdf7796717963786aeb3e2685433a980c82
b5dab1b9c8dcfcd9487b73147a6103daa1880e55a03f81f5517496cbdec89f27
6c1866f632131f4c2f133fc5394b6e15a8aa278f2edd7340b737dafed4418ae1
1c3f8089a6da091a229dfd7e1b9cd0350fd79ddb8301e266e1a915c40252127f
a2df6087f223b0c52389329c1e2ea475bb1c61aa61b7ac6162040c31c74a31e9
6c0a7065d8065f00f3f08bc4fc8cf366fd04ad50129409d1486038fe0264ac50
47e17f4d8a9f35a1f1a0ccdff9b3c5956fa6b2d17ca42e9dfae78162e58934a5
e2a0641809b9b925d415c9480e0c876116f94eb8c735d8a3d1ca1a748f3abab4
67cb95bef302693ff3a0e5688e8ca27c349f9a9b223cea48c4a9b7db4907234f
483c0601d5ad34057dfa76e46848cf3929ddc92387ffeed00a2a6465a04202a5
2149f8cea7959bf633d335385aed7e50341e70c7ed0eb89206b130cdc9daedab
2170a669a2b4d75de31c421c93c3f674db0ed7ddbb190e79c489bb46a71a23e1
5bbf54846f9bb81b381868367f0d10321dab5cc9d1858f02517355526c818b81
99a069be99149dce1c8b55451038a8b4b864fba82b8b03a475494b8d46616935
7fcab5db18d9afcd21fc402fb15acced7b99a693e357e9bdac1422b926db6f3c
6f4e2eb47f6fc30d6029322a03f52abba6c195b00dab5305fd76d4e8aafb35dd
08d20f4826e206375012124b0f19c4ba782d55300e71a8f2bf14e7c089f087c6
241c7660b398ec6ee98666847fee98877b857dd0b10baca845bf8176ecf34d23
2c6aaffeef502431f9b61ddc466093fb7f985174acd43c4715b813e479cd563b
cf117e0fa5b7d22c478c52cf95a10d217355c386f2d9235f1ba732da3cc1686d
6e4ac9dc4b53ba265012a64c8a58fc649a62a0eb12386b227e4ae9ba593204cd
fb1cd8b685504a75a00033e1f594e821ed18bf0c167624368b48b24f9db7bfc3
c8f23c0161b9bc5391adfcb704fc0afe024a9ad62f736d5a199c50b26c3a933a
7ccdaa0066f50d8cf6301324a42381965ba60992f473822729ef18c4d07f4430
8ef79b742f5094a1f0de7e75b4f17ba4317621b7cab130c2fd37a3aa81bbe45b
39cb2e525d0ff3672a9c993b1b44d347e2441d100cd93fefe12c0be385765285
0bc19d3480ee3a1ccad571c352996d103964df83cb7eb63abd4960c0cdf010d3
cf4d78d2b3de2858e0841072f74259fafb28dcc110a4e3ee2d3517c1f101cdae
189f4563a9a773a54d362412e296a6d7bb095ceea4283a9185dc853a8f35d5f7
f01902e134bfa9941c124db2b53cd4a1c3f78c80113fe852dd896c844c9c16aa
5d590f6b6a35b7cbe2d15c858029ab6db03cfbf749d456babfb8bc0a4e7c22a6
a23b897749c37f1265c0fb38ebe12c2e08837fd81fb702f92d1b7dcb5025fbf6
5da1ef84e0d156cb6cec73cf0f16df1fa3406991643dedc0fd49b1bf9b307196
7d2089b494d390ea4a49beae232e0280c0e8a0221747a4351a1a4b45c8be7956
c20901f8e6ff3e4a09e293d0f95399b0f5e54cbdf5ccc941212449d2180d98c5
e8f774b259e14ac82eaeb0b01ac47cc0983493c233417c01d4775b8f766abbb4
e8624965e1902427725fc41247942b2cf47d859c9fa3c14d67aa1e88180fac9d
1d2630a00cc6b0ce1370639e05e95a3b07a7ae918459f7b22ecbb51033aa8ed4
0f2358226607add35184bbbb6ebf4426a3031f58c4f499d6cdd6f752020983e1
24fb2c7a85d659028b179a71cf9152eb174499e37078af26445ee27b79b0d974
6c79686c795bb538c86501a50499795292cd1bd6524c419401147484e87d623a
89a5c0a0205177851c29e4eeb72d35c8db1609e76da5edb8ec4f0943d21d373f
398bd6d67f852c4b6b9f4cb13629a1dc62985280847a0b956da9adc8574e2354
4ac5df3b6828309ccd2da878aab9b5e0131303d38ef3e239f305de6b70771070
236d41f772c63cdbb176261d69237ae545322b9990b559b273b16175d5f2bb93
14d366bd8b5df4222bb3137f61a9e544d90d00db588224530e02e7d1f6088885
dc8aec2fbd8d730edef7cd6ce016cbae38bed8d4064c6c1a1c3fb11fb9e47dad
48d4ad268abe2679e27b6d8c052a3b6fe0f463903701a179ef650bbb22fd7839
a4e317b378169eec5f0c5503aa8f816dc157d53824651ff450284b97b21e8618
1364fa88b8db5199568cdebb9314d0e2f320908eb717c6dc16535691e6e4aaed
984b22e86c72a3aca750e65fba4297a5677b348fbb24fbb1c8fa9cc9630a4907
86ff155fef9e5e72f0d4a092fd5229fcaf72bf72191207aadf1eeb911906fbe7
39ef8bd41130e01ab6f7996a64388235771ad95e4e73b7a51c58ae1843800174
8b861bc6d59aeda45317a6a8215e3592d52f8b07ef79a98b5d0eac42c67c19b1
2b02d470eac2ca0f14ca4d719c0448d08c8d0aa73f7d3dc7052fea5bcc0cb489
8d23f510bb0381f9191f8fec1888a97f62b2214f45406603d2a2d646078c68a2
560dbbe1f100beb18e3a3e67e460793100aa727f6e9c811f50107cb9837d195a
62ebd9d32165d653fb83d33ef1cb2367a300000d54076a5b2c5ba80b1d01412c
a7345cd6aa5752ded3a85925ba5d8179c5f65923d9f7276410414691ac92afaa
c7fbe61883e948f95157e90dafc203eddefb361e1ec866607b7b5e757f74aef5
90fed2b4901ccf7a266dba4695d297152573ccf58356ab8fad4674a80bb5720a
bdc669f6ef27536040095c8d6eb9dfc1a922cca94ff9cdade20c1f5641ef1757
687fd8a790e52e53d2afde622acc748b56e062de0c0b2a0ecf3e44e1de1562e2
5f3134b92f1747c803e77f7769f0c1ad4d00e1e0042064e816be7415d3683c88
54dacbf7e72d6b16c5c64bbec59eab24e21a1e4f285a90c4113fb6e6ace4cc91
370b7563fd4e79f03d24abd263d7183bb084698eba607fadc31da91ff49f637f
0757f0e3fca807818924f3960bbb27853320850b8f97bbf866bb9295f564dac2
b6a77bb33dd32d996b00f0745933f6b86fec3b447aab5af7dfdaf9ebab90cb25
8d16db14bc3948f568f9083c7bfefb7d37edc45aab7316f4f785e3a7c09fcd5d
c1f2ecc2353ad91b6fd574bb84c197cfda37cb26ba0291692009a8a7f3884566
01dabd4608215bd2d68062f0ffd20c4592b73031b2fdcbcaf39aac637c7e1c51
3a3c1a98d76abfed69d67144d15433466ef91857a0708418fa598d0930208dcb
fdad7f81c411faf7d283f5a34d8bbb19041c2e4c5e2ecc90cbe6da129a6508a0
ca4cb6a982be4ce2ce4a0fb755596134b807c34ec97e80d05fc9c9a37628d00d
918806f7964559fda2e700d185394b2df33957bc62507b28385339280887cba4
660755922436d307a3ca590acb6f4a1c99de73e3a0456b7e6b7b04276c61960c
8d2757a1efa61e934598e91ea62a8b7442ac74a7da2fcb76090d793c6b3fbe5f
719471c223f91cb46a8596c4caaf009e4468833f6f8af9449e4865e7d469c1c4
870e63420b519a3b45bc3d33b7d247fa8b6ca25eb95bffe68698432d4e0ae3af
37fe66b52a8e5f243dcf6ac3b5806d57005cfa3ecb77478eac9580874d0865a0
77d6c6fa5670d8b834bd5e3e146272dfd9aa97dcdfe2b2fa96926a6cba1c9ec7
0a1b6fb9c6e22d65a17274bb02682501a121cea5585fb344f82ec48143be98b8
87932c04bf3cfb49e13bbd91bd39b245016ff63b105cb7adee3b2abef3b6af1f
867899efb0e2d7b29d722f7f70294c6035d54d1cdd7ce1a0f671986651b46535
534b4690ac06a6887db30f529315cc74380a4675577de9601dbd57727cf82554
590fe49c7f38ff3b20234e0ca694dd407ffa2ce62b7aebd424dff733dcb704cf
176958dac600f666ef64ae695139037a54aa70e3e5a3ea325b65167561821239
d68fae3351ede3bda8e9ff4aa952f7a9820be3abc3300d7037
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueXX 5000827 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
cc883aff8d6350d6e8af1a9c1d2d7fcddc4c554c7e350f2420586f43e2124611
487cdb176d453854b51cb8f9100bf241899bbef87d57f1135e589813995c4d86
ce91db2b3757948f365186c2a4f32d845f659a8e95028f9c0168851997135c67
ce7654f2de4f22f51311aa78f440e5fc2c58f6df901fd071b2d53b2697bfcebc
43fe4508828b4756ebbe1f3e8512514162b3bb44493a65f11ab56deaf152fd01
bc8b642e6021af01998edc76b6a1929fbb9fa4fd1a430bfd4464b53f75075f66
c726fc037fc23cf09a178ffc60908f77d8ea9dea79c1e21fcb5a6a994e5a8e5c
c6d6291891df7695db58a2dfcf3bc9a17888c29559ce8f37dd35c0ae35def3e8
daa6d8d574f457b0385efd1611c048b9ce76393fbfa006fd23d742cfe7016035
5fe95302b129a824c7794a9de47e463a7fdc42fd72b9da3fabc3e65d90258ac9
c1ecbd3654b103a488715f9e0e649b57146b786aa399c6ff39f362816306a1e0
ac83a4c83410030d740e15165683e843f69579ec1824c36935ed4705962f494c
401400303b590614e5daa8dc53fdda083fc854e535fcd575b38aa43d3d5c4a38
d56bafa926fb9e7fd69be1af2b502849500693dadd5f00b3185a8b18a0b64f28
9f33f5f1eceb14d6945a22d0def259076cb9b11d899318852053d98c36ce0a0b
e347edaf1e4e777c303b4a051e3da7ae5140ce9dfa018a8669b0b551696e194d
d54ca062ea1ff406ca877790dfd1dc18ac62288cfff849d4a142cb1c1ac5faa0
ae05f039e3cdec6ede558fa3faebb0d3eeb981e561fde8899d5d4effd8610a21
b1ee990d09836d75ca7f8adf56ce3802bb45fa9a0e9449fb97ed1933f3686923
7d6f9b8ba6e7ddd9b21bc2e53af56e28c2dc8ae41f3869a71f23667ab4871f21
2c30e988148144d93a3e12c9d0e3c1a34aeeb46e922d29b76be36d538c00cebf
27577a0607cb8e3403a49b3120347133f3d9bdab4f615e5e0067899a77a28cbb
aacc1b2373c3eea790ae1fe6cbc9f1a15aab0993c9a016a9ccbd5d679ff37412
0e4e8e4f7cef027fcd863ab3f95ba8e229bf45349f624fcbcb14208c8cfa9bac
02992cb2d52873c8d1f00b2ad9b3b4be956ecdadc971ba127061c143d7cd37d5
5c52cc658561853490ac059e9315624850d93d4fb524062dbc15d897b345e6b0
fe3768b6bc5927a90f3a7c0964bfc45c91447d9d941891bbb404c3d9c66dd306
c4db6de1d06b1d36207278c5eb9913279492730bc037c72e472ce2ca5f632df6
db9baa649cbf2976a41183ea0b5ce236254b903da9374f4fc840421e0d553ffc
bea7a9992e6e5be391ac38e39396b8d04fa71ef6f4d44378c99591cc93ae904f
cdee99b969c5a2aab64b565ef90eff91a96b297b8333a70fc5c3c530b81953da
ddff36abbeb1a59fb6e9939d6100ad704bbfadf873cda8a28301b518d08a47b2
a6f7ddc08d4add7847a6e03fded1d810af82559579ba05b8fcdd052be7140f7e
621a8f475645ed408d3196a3f2e24c7a01d0589f6621a8323e05d3d422fe2f9b
f35db262084da562fb69b0a8589e796d0f85f8c55ced5bffda3bc593110bc95a
7e2379ab6659bcfc7f3833b1d46976b0931734f862cbdae37ab24f29b514d718
0d35e79b9b6c6255bebe8ef80eb9e948f0969ae963a2787a6a164560464378c0
031f03a6e8a047157bfde2b0847d434e4f3d1be7481e4cf3cca58e6ede460bd3
6edbdccac35fcbcaa44744eb7202ed0c0280e3d53433d9d76250b59c8c82cc88
9fd3181b29dbc891a0cec5d3e55e636fa04652af09d13ac26842f509227adc46
f1adeba19d3927e4fe9948134e94debab1a9e3792b38c1405b589ce9d3f33d52
17daffc9913caf97cbf8df50bc1388916a1025a70a5fad9a2510902ce7576189
a400fc955c315c363d629b6f22292cba3749520f48ca86f55448ad750cd045ed
72de2f20113493b46000d5cb54563cbb4350e103a6b9ae7b1346acbc61e1e3e1
bd6e56345e73dd8f6a76331b4fce127fee6f33a055baa0876f73a8b26ec2bc61
22741443eec754b9804b7818a8f01cf95726fac0b7e7ccd1336576044784e6fe
11693b66749553df4777fe91232aa2992c8194ac4095def5083c8fe20ed4154a
f60f7b58c5c1303fb6c33bd9fb67a706741834ef62f5d548d5454ab5af29b02c
ff64bdb9fb9b978ccb0fdb1052af7fcd06eea23f3fd78227123031f77adf863c
848941011d0fd8a8b36c66e38e1c2c0cedf606e8e5870a5f61bd042188183581
9aca5f6cb7dcdd210326215375d9ecd2a8c268bd782383696e7f7affc9af4679
7c3b02b710ca7aa8532457c4b327ae3742713d61e03b7322219a67dd7ade5016
3a5ed8eff2bf61a951b9c51d95d93eacbb876e3360bee690714ca44b8c1ed5cf
f6c88cf2520a8c0a838b0a7e8b31c729144cd7fa0390fde31f21e2e02312fde9
a159cb8a3e4c8151c86af269b915622f1cdeaa84b78bac17d4ecfb3c200038c8
bb6f60c1ff2ce3d96fbbde9dfc09cd5951b202f6365ded53c62978e2ea9b5061
77299a304a1ad7e537739b1166eb842217b201ac973beb16ff6bff2f409b3eee
e9d5bf8956149cfcc24d7b234cd5f093e2611cd2b5e207e5a83bf039c3ba9ccf
65c588e1b88d077e9d0b45c270ae38cbac67c36507f40b9b1a6a9abd8a78fdac
6121c733ad847d685d4faa63175bd55b008366a48f84adab6b090826d30b6085
4d9d1d76278e40e87efbff78442cdfaca279fe190429aeb089aab292e5ca59b3
6f6ba2576b8bfd68747f6646a49847a88cfbe131f7466b614af86d363b5a98c7
cd248b4ded76e55568992c443471aafdd6394c3c0e7ef04a99da0b2ed3d9bfeb
c747870d06f12cc05cb46c96c07bdf6c2a241f23c6d7dd86972471c9b7fda6da
e94ca50aaed41d6c6a3eb49cd5a67399f83d59f359e4d4805d30487900c9279b
6b927cc3e44ac4cdb73e96693b7d1154e4b6eb872548725a1e1c6c79b8f39462
75f7adec5338cd828eba7f3daefef566cac64655e174e3713efed17123a9bee4
fe1b79649c3a0a22d302c88bef947a216abd222287906d4921ce7b15595a5ee1
0fb05740ae4303659491e4561fa362f5fbf4afbf0e2e95f56db83c2abe5b2bb7
133894590603a55487cb5921db699afa9e0d732a5bdb15b398d8c7999cbd01ce
c6573e8738ef354bd4aaaf022dd6f810fe8cd1d259b997d3bed3549855d998ce
09bfdef558b2f276feccd84a6f6bd84ae482aa6056ff5078937d6492dd688a4e
7bc5757e3a0f867730ddaec4e543c8da2cc442a208c7b234a30abb0c39bd3cbb
bed9b79b94ea2202ef6daeca42d1f6c0a3092d8f5674a33797933a4696badf48
44856d612534b7f4b1b12c94ff398f151ab8a9265bb5410893c8cd8b989882ce
5e9e78889301e5ab3dd923b5ee8a82f84723386e66ad10dc0cdd1f2c4c980183
8363b08144d70a9b15b8585bf69b70b9ed5e35d61a92e9b71a05aa3a156c6bd7
7db148caf6bfcfdb292c0fb6fac03cd0c3fb63909432c1f8363675d83cc5268d
3d3f12fc75b25fca80fa54c075cdebf306d19fef376cdd588fb238223c075481
390211354c819869b4adf9125f8221b123e4534a32d31b43220e99d4e42d99b5
efd60c8fe861c9669818164a7c4a66ef73aa87652a8405b35b0fd3dbfaa9ddff
37c843b5117f0374b04b85eaf4e7682ec58876dfd15ae45ec6c784204c61e1be
6db82c8751ea7fcb101449271e0d0367178083beb6756e7172ef31ce9de0eb8e
11e72ddf22cb487c7a7b6a0e373fa1907b314db5be7a29eca06adf7be8eeec7b
a66566c624e01e5e7d374a3a738d0bca61f07666603519b918503d4734595e3a
fa2caaf03018f99203fa5a238383ef1416d6929b47131c7505237d076e94bc7e
d10ffe0c3c1f5ec6842540b75a148231a5f4a4918449923371dbbcf41b71ccfc
f38a9085551509b1aeea8ed848f5c5cff4adac244917d724a5a45bb15cb7c1e7
784ec4e13b0514bb27bbffe54a856dc22710bea70b1062d50a47f5b961306151
8daac7fc52e665de5780262bebc60dd976790394a166484881dd07fa440e47ed
a39d4f86006a713d293f851f4c5cc85707ca36563ae2161bc0c9a2cded514eb8
b3030fbc323bb86ef166406e44083ec810092e22b0a678c4a3b429b05e8cbc71
ef5eca92d89655d5d1b9b4a26befc456519d3c469049d6f8f9ff2154d9e12270
5ab4112407a807193388808c4f7c3de9a7a96be763db025ec3e8e195ce0135de
df8f0c9175e5d7aca4c1141ac1f35021450bdd056866aef9bf4bca9627c9737c
ad335bf374a6155bf2e11e1625758048f8046f18ac41c234ec65baddbdd54284
45b98eeaf2a99c39883f2c44f459ead294501919f1b5b766ee3c3651feb5b698
c52b4202bc12ad6b219d623825606e101fcf6582928fe6af38927d1be2f704c5
1009d818417479d17f23c149c8e1a31112d3151a6cf40f02e1c9822a760c29a7
ca0a44a4a4004ae8daab7b65b467d3f04688ebc732a466568c76d1241dddc63f
7cef99fa727e4787b918186fdcedcb3045b4b69825051b8c08cbb997035ecb87
7722c887dd1052fc18ea87b9147b4eda24c31023013f18be8ad73fb064ff4363
74097b3c041a003dcde0e860888745a8a0a53199635d40cbf0fdff087304ffda
3d49496b06bf39751bd0cb9dec967d0e7dca089cba4d4a7cb385284a62f124e7
2c75b286858d2ec99c7ac01147d6c95192065d0f2b613565700ba09653f7cfb7
2d127486f47eecb3c7ed6ce7c7d8df63ae4fa5e557f85295b60505898d01a0e4
004b63bcfd9d6baf80f619baba9aa1931af76c71edfac090fba5614b856e1cab
51cf76cf1b1b6dfef6ddef9e255253f14dddb538aba81f60741859b9d8a30dd9
74f271bb2073655b9a56fbaef281b92c0ba278d66d181948cd936621361102bf
f8ab384b35f3ef1fe715e7145ae56e970d5c8540f817d7d58d670fb8a70813d2
47301099a40df9148df89d66657c37abf2dfa24a7db335ac559ba182ed38fe9c
689b74f37fe02f05fa07a9ba60873b986028899cbcf1aa8cff879875a0948e5b
1994ce9bbb7357585202a2037581fc185c055ded2d163902fbf866ea50a1566b
b8c3d485a901766fcd8376b6df98b1da166eebc97a2d1d3df6ab2fdf59a4e2de
03ba3730a32edd0ff44b8a48624e8ea1851fcfd2911abf42daae9ae7e2b32279
a465930bf149c2ea991fc2138e7c6aab9f84a5839fe4cddf63eec78a256992d0
322726125febba653f25784aa5a8398c64ce3a26173f1a2d0ffdc938bd9f7ddb
2569215d6e6ed617ad548f7aa0e7abfe200585aee4c7fb1958488d90e1117fe2
75c924197eea28b8d44c821881ea2c572891e3d66f9d7e0b0b709c3786466d45
5997acd0e8bb646f880035e26b2966afc530cf898f2cf673624caba792f3ddb9
3529ad9700dfba008ad74d98bce4601f1fc26ed50fa4ba16f63f327b456d765c
3f4f7e43f8228a75a342f51869e242978dac910b387885310d9dab85f46e9c7e
8d8dd55eb5619a331ef00c690b7493c8d7d8a951aa15253ebe6a7d3c5d6ede3d
faa7e20569eb458d7f6ad5a790a8c7fb987a18b6f98e1b81c1c529f181d06340
07668f5779eb3bf4a253057d63620293ab884372edcec514279e15456c1dc52f
6cd8c1814de0c4bb3dc2a5ef10a974438929e4f6017a3de93650cb8d03f36244
e70b10a28952654120e79aa0cd0ff2205bdd0395006e31618f82f68220beb8c0
f0d6a273f11556602e22dc4f5f614e603695253dc25e9e347dc01072c1dc6b78
a31fd85bc53e66cbcfcb460e15a2653e010cc10557b273a6680a2c4c17158cef
a4301fa2d270fb427342fa27d75f9b85a9c921c2029ff88e7b01b04c08b91ed5
d2bd7c56c849e3ad115e62572a02b48a7d94bd21767d820e2f1335f23f014dda
6c995cd0ae4a7cd7df2378f5af320e283b78d9b0a7088b08aa507df9bb132dac
fab287130b4d25452395c7316283c5a96560971ce93b5509bb0fe556696b273e
6074a21c3f905f873003031372298ef3d4a03d96f4746db77df90e4a99fdb381
7a35d7e9ca0bad4c2db90422a08f8753803941fbb892aeada99f02d7304d0232
10e357ac6f0d64284884272822de1f4055a15ac697ef7041eb2d0ad7df04c7ef
fbff3ebe2d4d17f4b7b2ba01cf86bb284ecf8bfd80ebda8e134192b78f0bb6af
2c7b6cb73b3c17bfa18c340a3f516f1349c394888c78ce48fa6da7d6c9ba1610
3063d64beb198ec05329cdc1bb3ba73d6038d58a7d65abbe21a37239f3ad6193
99198dd26f5aa36b2f3f6ea2fc2c5ffd30672be15207b575f994d38e83f10ac7
0a3ddedde76fab9cecbb5fe2020ad318af55952c062a43073712b4b07c81864a
0a81c4e7c130dd136c16c262fda7cd0d3bdc08cc62a5ece83c4e7dc2ce19a802
dbbd1b70b6c6c3bfbc594386cf312d07a64975022fa7069a872b387cf4fc0b11
93e0be38082d04bdbaab602d969a6b548b4c1006f7f526562504672a4018357c
1ad4619407e8eb04b77e173e6e74ce6e385b30be64505c6f26c2fa976835aa11
8faf9482e30d8de88454bd38a0a0cffc77d793ec25bc107cb114e28e9eb04633
0c508c39b5f467db1b1d445e45b3b409f04f613064230e0f16b5c6f5e96208ad
85b3a242b2e57183f70c1b5b051a6767b9b07caccfe15b931d9aa4019c5c12d7
f4c55ba7c1d5b4e31b8dc33db8d3c07c6e98fcfaab6c6fba32247b70d41ad722
309bac81d0e49cb07441ca929f8cd8a8aa21e1d82edff60fc1e6de001acf0d83
add1c9d04cc00a440ba57aaf31a27fa64e9b616879c212fda66b24583ba8b6d5
e9908754efd25412555eac2eaebedbc86e2f2ca9de8c25fcf0116356a7e6dd8a
ccee5afc3c4865329c1c539da00d3d3a8785176b8827a6332f6ecc2f47ff462a
42b2bde4b4a3b8603733cbeb5106de458cfd79f789d869f931df5940ca322727
c105c13f4fbf768bda1cddb103e6969be6b9f2b10101d21d6110c299516cbf02
bb36589dba3320f1742008f3e31d6cf84c93a01e1ad0ed54c12380e90d86da42
4a283c8c1d48ab4953c799696fc131a4f17c042f7f922c0eb05f7e8bfdcdcd52
c41cf9d1bc9d8ce2506f9634811ddcdd59e33861536112dee37d2c9afc8d395d
ed62599b552e7f3e45a50b1ceab5378d17c4cea5cb4520cab13a2c70fe2a76d0
8b6345d9354f351a492a3f1e0436195a668e372f155d3ab8ec37c12c55913f5b
9949eca0f8748c527eb9460c3b9009431f57ea7c72a6fa95c1f0e602233df01c
d3df212cd03af686a048b596a2f1c825aa921fd60e9f39a9532df0faff95205f
6fb52cbd640793c2cc6d39340f25830c93a90236a8cdfa39bd2a0af8cf65ff8c
c42c891cbc3c033a0ef495ec972fc36091799e5cc45dcb16e9f23a4566de8c5e
e021283534bb3f3e19862be2515a4c8799f3e1fc8cced3310cf155c88539dc7b
c38917e8111220eb83dfd834ff68981bdb6ef7bf6b92b7bc4c2a354ea395d622
093e5f38871f0c97a5681c74bd8cce2f8a2c2eae5673c8394522b9e8bbf35aed
566aac7a5b6fe8ce32421f096e1ce585996b110870d45e33238fcf5919fc5162
c1c794a0f79405311dd56309de44c7132f045b192ab6e4396ccc6b5ada14853e
049f2b301879148a4088115da933f126bfe39e45fdf5ffbe7df276f428f80330
a035e369dbcdf431cb836361766d1b19eff30419fc34c9fcf978bfad18bcec8f
a1bb7d10a6bac649023262a2d2f273dcd95d5cc6edacc44218a2311a9df0077b
936a18262645530ad762be9bc2701deaf706e5aed559f26daee119b4b88be357
4a3c2cb54a241d93a37afa3f65aed0c3ebdffd830324bef897807c75643bb957
d1f26222865f51103e3c9a8837508e25500daf9a714edb9e62522002393237b3
37d5cd594de235f3847271006da0b9263d1a66b3511d1a34c47b26153332a193
5915d5b1413bc47ca3dacdb74205c69a792c7b31fdd0e30b85ad9f898296b074
d46dd50b8ee1008ae00bf26cd0f50d05280446f7268cd57eb448624f811acc38
ef27923e05125a022071e20e306229271607c0104ee55cd30317280cf85b3d94
e500ad5e9c65393b8ef2f5bf353616792bf07701b7107503a5b019ffa94e88b9
0469b6b591f5e80e9c8ba2404194d514d445a6e85252f1ff5e2da67c48b72141
bfbac16d64e3b43d305421c578f41bea13f6820039891e9450bb9dbce59ad47a
c64c9cc77720e6fd92490fceffe38070d7d340132006518306da177e5ba098ae
c1e7d53ae3d050be0b2551029fd2f302fa365ad051053cdded0e76c9533bdb0c
1439fedc2f3a24d4d269491a2b7a771ac3f4e5cfe0bd2ce912806ff56555c2eb
e750022402b11a1881f2447b1bfca4d7c42b4e1e7e071cef3e1ade32ebc7a468
cbcfa3aacd438edd2eca2cc0cb474287f21699812515091f455032b9940c6000
ef06aed0387040d9afd6125b96a7a3e281615908bd4746923e4b54908b62109e
a89a8e8dd5ef6d7cfcd0e24f916da50a701339960cdc404ef0d52f2ec24ebe72
8aab09d681aebf77218397f4c79c0a397af781906d2aab436709678fa9a1bb18
28b16b54782ed4b8e259a36a1115ae3513a36ddfd64273049307089170d11e05
21d6a5fcee2c61a8c34d9701bdc95e4fb347fadd5dfd2a208aead546e95609b6
01d97b670e416d2ca84398fdf45e98a60473769b519b14c3937da7787d5eb35a
5dbcdf80776d7c64e83eee6503b152739adcb423cace50e6140e9df88f00ffc8
a92036701653cfbc11f9bbab200c48a37fddd16a0bd6ea93bc4e3fefcd6ab83e
9844e747080dcf2250c30be781563d3e24e0bff28b976c8688e0f2818e837a27
712e9a4390ff6970ae042e79369c2e6e375c347e00ad26fedf52e14188bf77fa
4eef833daddcd2e66c7533676dbe00360af10df91263bfb2cbc945d072b96bc2
c4335a34a97fd8317e60aa329ba7ee1c1d9a9428ec2025b55bcde55e06fe53cc
8aa8c92c2ed13b2dbdb4f71b1077bc045c16fb282e819e516fb413b0c499ff56
2d70492698c4fd15306ca17e7f19c35be679425f042a693378b42ba13d31d115
52dce8baa50a8ca5f181e5f2794c636534211db4e0003686caa24202fd0ad7bc
a911b5afe693414479672bb6f94a36cdf76483544a622d902b04c3eaf2bbb1d6
dbc572534d3d1974765145df3a26d5cd3d98e3eb56031f384dd51ab4a12a54a3
e85c5606ec6af39becbf13ac0166ffdcf5d07aa516ed42cfd9bc91270863cb33
6deaf11daf2365da3c9b63e250d5d89d59489804fe0e98df25e56de4d1fc97b8
1629b72e7cff59ecb4bb52258ad8a5f883984aec9d2558562d43f849026ed6d8
71179f06c092b4289078ae0d330f9fac97aa16abe41f7f0e23e1c3f560996a99
9f3ae71bea26736b70285a81470b8ffdf3ea96166a3433fcdb0052fad21890b1
13a6c6c347eeacd116f9d98318a5500d066f15d487e592594c5483ef4878a7b5
4f52673ab0c93841116d87c42e209061f68ddffaa53efa56bf3bec3b15534c8e
8af133fe9e15a0f68222097ba3263433dde4c295306a98b50308dc446544ae67
bacbfca1dd6238da9580c0364741887710fe2a916ccc24579fa5da23473542f9
55736db8f44ba7c4ceb41decfbab8cbad438c844834ea8e7a37656292331573d
c3a3b1bbc2dae147f9a2a12fed25f17bdb8c11c77e3e209da29ae3031f8f5add
5f6e3e8f2ab4c6a9a9e4bdf2a9dc5ee76ac14b4d5ffbcac5cad9681f2be2ab70
8d155f39c71d9234678d7a77fbbe1d773613e2a680b23e0623e11b82b401f1b6
b9a5f5b6674400efca100751aebfb48a570ba86b5bd82c22810d8686ffc74cb4
71d1420d30659ec41d98313e6d731f616862b3a1efa3131368194425c0b9f613
1a39488bfa2d566d956d9fc7f924d8275b15a28e9def69db6a215cd3c0d631b3
7f7fbb247edc10a6c5beb1e019fe01979766737c4d3994bb1d1c6ef00a805795
1bcaffcd8576413e94b388520338fd9c8c41c66ad3bfbd05fdd6b55c6bd04b7e
ef6ce92634b648a52de5d9abeaf2be05fa0582551d8e0128e661d23207a74f55
40c1477fac441378f591058205a76e1f28a58a615a17312ba082d5ee79be7541
e1b8a30db7ad254cbfe43facda673f65ba3ede660eaf276d316fddbcd4254639
5225fe63fb9b3d2cae1c80b30d49fca0a9d1d05167d67a91679f7e798aba0426
2073cad2d0c242ead401880b4fe074e66df39bd27d2ec463529f19902738af5c
c51682a542acb54bd5b86e8b7480fe8da6c70a25364671f62716e701d89da272
a0fd7f123dc4a03bba0f723ef28369d78699360c64d2a4252727919421a9dc66
093621e00530b9aafb00f641e2aecd8cd82e83c89945a2ce4b96e3f625d65f64
0efaefb3e44ce326d1378aa236e5bf23df2f217955d4a6e33b2ec23fb79fc5f8
7b40f3930991567152c438eae9ac2caa3d521c466b1f206c8389d32d604f78a2
e2d19cbf5b647ee196ab38d13b20458f64e2f781a23fd8faa0abac4ff82a6c7d
4ed903e63c82c9acc22b6491cedc15837330b8e54fc90c8a555d5c255df2e0f2
19cdb2c58e3319f9399ca31d6dd6ccad68d038b4376f29a1cca824d0333ee168
db2ab66dc6c3db390542292ef16c496422d7df08fbffded5d643ae879c8190a7
04008d422436a0999a0a25f012309c0ca6450f08273b16620300e4336d2edbbb
43087f0cec976e95417460dbba5052be30ccbde1be37c13006a3659fd97ac4d3
9607cdc2025244e5f3677751385273080ccada3647cb71cc186a28f9a8965b28
653631f728c4b5d2803808b5459809486b04f702b7f8eac5bbbaf94b0a90c4f3
195fc248b82353e6e2a458bd64d081b8edf94ca851e8436a3f2166a42b4db80e
9fd6ca10d5b1f6a0278dcfb2b070939d58373e1e20e5e99f781a7b5b440fddec
1aa669ad545e99c8f11e5d76024fe65aaf7491585c3d5a027c960148fbfcf3d1
02fac592216689fd385a513a5e8b417785c439d4bd8fbc66a3a684f0f116dcfc
c23e2376eac6b21583f4d04cd7a3571fc0af7532ca4256d6a8ba8dc8e0f5eb94
465f1e071a4041bfdd7a6b0e504b42827c754026797c93e7de4b87bf7ae65266
f1ba8a458048ef4424a1f75115b856d01a05a077b769fbea8832b6690dd3a216
293be8ccb9e19240084685a0621786f0de290c114db57929f7d56cec49c05c6c
9a3dca130d44080107d0ac9ed69d35cb0ccfad2a6274c287ad0d1f23e98afb92
48eccb3a7f96024ab10ed50c9fe4d22fa1696c2cd6165ba466d3f711394d3107
47d6f069b6f994be7cb2b71082ae9db3099bc6f30edfe5c54e4a5d417358d7e3
81232f6e0ac46dbd347fa517269eb003cbfe6d22a217d7776462146f8c11bcc8
1a1af8fedbbaf6719751cfeab3353da00d0c660fa9db571f5f42e1cb9bcc0327
6e2803ba8cd4263567deb81418f4432054aabac92efb6a5c002e91310cbce246
e71a00002a1ff539b9c0f68d45a1225b9f91dbd75dda6c310a3b6b1be17c0278
4133c1ff63f8137f51df01ae3cd88cc8201f53a37af4db12d77d767788a4db3c
21efd2ddde931aa2dbf88f9bb818acb4896ce3147f65bef2d557cad2502664a6
099a5a0be93e1d2a49948b033bf2dc3504bc1b598b5e2c6b65411448ad5dcaed
e47fec3c0de17b778bc8d462fe96a13f45690128568a9aac0afd310ecaff87ac
88cc8d673a71fe88ea6e51c6582ceed685da43f4e160700fe1ce4034908ef127
d4a5466037f6471b18e920cb5dbc2f314d2ef0f2333972fe12e3e41bf98a30d5
281963d7f1a283346435e2c7c0dd94aa2573080f8d3e1ff0df54247f26bdc598
275fec2bce793b59bc1fc1f802378bc10c11647cb65224af5ec9cadf4134eaf2
56722d0d6bb1245fe9b4be407daaffd1c85a83b1b3ad9dc1cb832b6e6e78581e
7cb43d0478411f70c6e434df14c09a889e6749dfaf57ec83bab82b682da8d6be
3526983d1adfa59fd89cedc67e0ff677d0a580eee892058e32731941261707d2
c9c693bb0009af5631383df345bc7016acefc6f5a94dd3aff48cebd8dda7abb5
b137bfa3b6a155d6c330ec03f6ba09ebe64c33a9edc4f0f6f0594d27e958286a
615f8936995cc3c322551540b957f98f7f4e9e0525e46593cb04772e81779521
7ef21ef0eb65d46cf5895f8a9804b4a4a9fa3d7a35d532f7b5ee062d32eb99d6
8b8c977a3e2e8eaa7d78a40be9613d2713605bbec152ee4bb092f6f1199e7c6d
b476823f6877593cbd7f6bae359cf32f0e0f8de1ef6f88904843c133f81c1697
3dd40cdfb6c46db716da027dd98e1cea167afb970b68a45fa2ff3086aa38c040
554233a9ef8f43fc2837415cbb9cfb5ac5d4bd758fa841267d11d6f707754cff
284400596981c4914a40d18f37a1b853c94cc67d8f2f4e94918f09916d86aaf1
58244e1abc3d4463158c3acc0ba5ad35f5b28f901ba9397975c8bcb81656b6c2
5901cc34d7a69a5df8b110b4d7679c9cdf6725619ac0831ec9c68fb9b1d6718e
26f4afff204688f20318c136937b63563c231fd1de768ab64e280c069f59c746
08af6fa2f2666f7998022995256ab49f7d791b7660095e1b29f2e9f46fdf09dc
61903f7bff64b1d42aba65019a0d12bf67f739401883a6d0f0e7b9eed6965c1a
ca35147bb6f2abfa6416af4bc61f9800511124ff18486422c1fcf0012f20cfb9
7c034dd26d04c75a8bff0812f14f79f0519d8310337c4e3cc8eb4fbb023ca726
effce0f011f9b2a7651e022e393ecf456334983e227691a549167dea7527db75
1766a28efe45370ee6117bd447fe9d28b15fe9a72fa28afceb16f9884de2e793
9d54d71df7b9ed54494982ffaa78c107048f627162b02eb58bd957d7727e8097
d21d8acd24450d9338159b34bdd1e10ba1f3cd85e45da99054b4594748fa755d
ca1e15e2c2b5f3526bd0b7f691cfee5dd2b4d3d7c21c12d45f03e936baf814a1
78d6645df8d13be3c6ce22d812034c96073e7859d6e94dfd6f3be93e46d2bcd0
de969013dac809ac15d36b8a5004ffa08bb56fd82ac84365d25240786217c804
bc1d7d18f9aeb167cd3a839c0f2685af6d1a528c8bbf8a5de97e2e4800bdc1e4
952fa2708f39d7b26d2388d4041f76fd945d506ac58b0b71a03f23f4195573b1
c3afb4b78337cfd29337f10dc4cfde11dc88aca2931e5a7be6feff5249520a29
e435f8fb22e3f2ef93967fce351217a112a06dc2c4db311ecc94b0d96052b581
8a8c93365713ecabc2d6d141cc194919e77ec56f3fe83920f285376083c57946
1136b116cb96e7ec8bc5f612899a7ff805dfb08cda7a1f5ca44b7099688396ad
89652ab1acf72c78191e4e85d44308091900b8aabb4223c0f2a7b7b23d27df4f
8c791e3a9d1c7fa2743101c4a9bdc37dae496273d7d3364fc7e1f8b3f549ec62
3069f103f902febc2190f3827f7aafd91ca34e9588e5096c1d8f65141ed89df9
2841e331548938c1bfc3f768238b2e68390f0700dbea3a27a2ab78f568c0be41
3a239982db8485999c8dac17c5b1835d07715351772da6b62cb48a68dfdfd20b
8fd339386d4ec8774cf0eb0f6221a88c250dfefba31584ba90fa922381f0d075
f3b73e84a66cb5196be116ebaf18441bf089f435e041f6cd764a5b94d4d7f715
ca73fb2353a0613ed46005f4fd192d08a479ee237837a0e6b10badc1cc91252e
9a35c58dd18e08b0e28500f373779c72ddb8a2e207466fb0427f16604bab98d9
2053158069d371b774d860252ae121edcc27444dc5f957b02252ae1358dfff08
22b30a41cee18da4d609bd6907b9b5e0a6d77d9226c3d4e054b5bae4f07056ae
0996ae4c3fd057ead70371c966ca23435e112e037f8262ffbc7eed01079cc87b
d1263ae541373065e42dad57e92984cdc1b8f144cf600141daab08b73ac3f8bc
fb859518bc7801e7fb1a2dce312958247767471c0315c7a4c466968d001f17fe
4cfe88c5b6837415250ab5369f3ed38fac82ae546eeaf29dac706a153b69ef02
596cf538ab30c4e2286b3f3d5c3bf1050d55f457ba6c21793293133c96c4ff25
f994ac079d139aa43096c8712601a9e8447dac06fb750103fad1dc0ad065e464
f8cf7e3d795535aa89d0503c2dbfe49a654660abd00d5c49c34e9d408b15c43a
80501ac43ae4cfa09e820b67ecb31938862d511f3c66940a9a04af092dae1faf
ff8b2759682c024da148e216ad800bc64266989eecdc18269e6d3a7221e68211
1c7c86d14ef571c8a2d02aa589f32305a7d6d56778106f398b9fbcd322b3a0ae
0ec673eee8cf865294174bcba6e0c748ee3e019aa5738c207a4c3f6688d30cd5
af1fb4673f8e156393dff9e90d03b57b4e7ded05264c63c30fb4a04a65e3b0dd
14f7155d033840e4be86a4a22114b46b37624803c2ebec8b0fe3f124c36abafa
69e85689715b2a100d4b53b3430dd49c772e856981a5b4ca7a2d81ad77b5378a
094b4aa27d0dcb39a2ffa744760ef6f7b623c2048f0aca6ccbaa4ca77aab12d5
692fc419462654b811ed227c52750a8ce433d734c5a30df23f651740956b9576
8e54e2f436f6ef065b1c61eb3d5ceea3062e0fb1c6b1bb5cff2d38e0c591ab35
467659bc337669614e244adf4881656fb385db6139d89fddbd08bc009d731a53
83e5496fb65c87ee3795eb09d7ea92efb05ab7b454dfff952d4e26678f15d96e
d42ae73f39c6b122e12cbc1b273a21b92956d57009fce1c557cd0e0558b85aec
f879c1195945044746b3b7d99a7ddc658f28b1410e14a90269e579d56c98d3a5
f1bbbb340a093401f5b0037cbf1ce0c5e70a5ac7ec301633f78bdd634c69169a
c1bafe5774762d3090aae4e73031fed04114e4994ffe7ea7e1c999afb857a5c6
e6853a2fa0bb49c2947ae1c8647745fa3da6413520fb7fc6d50a27bc8a41d296
879260226b30794067a7bf8ee443e9c5726ac99e009616734b18d35933f444db
6e1ceeb018c426bbcb6f7810793a01923fc1593a543b426b036cb104d3ccffd7
31fbe43668a6312eeb0d0e6a820053d0a01ff809d3d6882ca81cec9530dee20e
030de5182e99a865117457c043329c95638e604ecbcb712d5a7a9bc75e1f57f1
33a345000c1eb735bb86a90cbcef350809536e970176f2a951d3faa757591667
a5500f1f2b0a49cbacc297692656fc72bc08f62050fc78154b6b5972e7ee9616
69ccc8426d9e745de3de862e2b8a9d1f2a45ea6522ce1f46e31e274aac86c083
811f15e6a2d45bb2f1bca319522b993ec845b323e1058ce6036ddc7393bfdb15
1c2d9540aec4b7359caa0da8fa2bca3bbaebcc608a211d64e28f2d2a8bbd7aab
7d3a3a100765f4923ce9ca966596c8a116c7cca97f8c611ab56ad99991e2cea2
f36db585166f87850d855c57729d6e6a5963d622a0925981711bf947d6f0528a
de76c2dcd81dd6a67ad988fc7b8ef417bdc0db3a452399375906b13c1e8acf1b
99c6418e4e64f8913ffd4387c9bdb7746bdcf026fdcfc02f655f2957747fa082
0983f4e945ebbf28e969381252091b5e5d1334cae0de4571faca812e6c7b1191
468703fd4c6a336421e8b99c603d4982b3f2ff1bc123567399783502c3f410ca
ba5411e27ca5ebac9d83f08ca8748d1038e170412b8bfb8b1d078ebc665ee56d
cf97bca68941cba717b728b7747d5e3f760c57f84c620da75e3e0a89fdba7d59
0e4befbda9f8d4ec9dece33b1e88af299f7e0d44d3ff5636a08b21de0aa38196
9a7ae7c8fb97a97dd96aadc1ec51bc6377d0846bed15718306be7c5f82aac06b
61a9857e260dccb1239ac03aa6d82e5775dc4fd3652a27659b07a13c5565aed3
44c9bd8105ec5b2d6e6f3b0dee0792c8258a00ef66bc5e64ec0efe44389aa523
a5d19be52cd288514746069a9d1a2f067c391572b003e85ef0afa9515bc764b8
f0225a873821fbda59695d769e13514d72b5790e0c3ea95264932e5e40ce0946
b4131462a4c944170027db3e605e72d64fc7bcc5e51c39e4de10a4004f11d7c5
90eb310b09a03abf6cb9896686c7d92a6a9e0f6b1b20db359e418222aac91f61
25c2ed263517d22ab2cac07840f9820739b45852b435544355e81f0a64460490
6796c904ea2f052f011acd383ce07a1b320558a17ea19804673cb38d66405c8f
a38abe8da082cbbfd2d0c5de4c4d7aa2c9a32ee5e9332d3a52d1224619106e49
784aa06d3045ccc38ec5c0f7e5feddbff7f6f0e557e32446a6f6b53c34be054f
51a918821190ace1dd5f20c0dc88f2870ed368241e5f013dafde7d60753a8387
dd3ee24a3dd1311d3d50c2b5d889efefe9fcb31f43b6428f661f297b7c4121f8
c2cbf524510c81ef217ce7665896d8508377b0c536e7ad9086dc79a69e150f41
9a861b719317ee67415e947f38d25e4bf52b3ac6e9faa21739603d5eb24b1b43
1f1245fda7500c3195eabb1aaf30f1a40032efc65e27c29e7175d9fcd2bf6a5e
a602f6eadf12b917e803fb27ee36eb001c4ddc83a1c94de23cd42331f29277fe
5b67594fac52d276c8195232bdb018ee206ec0633af68a6751bcebe796c38dc7
098a50038fb5c16abba18fbb2c37c064692dbda33797ff0b86d0308f037f6baa
5a7a981c934f90fa98e1ffdb2595f59c485bce79ea5b767eca0bb08d03038862
8be1726d61248463b30ef147772490c326ee6a6339632cb5d649f4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 77 /M put
dup 78 /N put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueXX 5000767 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d55fd4dda249cff0b56b9f3aff
e9d0de215c02a52a6bc77155ff6b8cba5cd6646ba331254ac58ace650a967d3b
272331b87b6df06d5ab9d80fabe9f9ceac10139b61244814dd9fc295ed42d1b5
cd11c2e4beab318b20f51ca2c2930657e5343ab7bcf0e8870a0d12de4ffacb6c
b3fdbdda481c2fcb84408d3d902e9a32070b2af6cd9317a33a42a43857c114b3
f4c3005cef9401f1c2bad3e69150d7145b79f95c9cfaf7a335b277e6435ab374
f6a3e78e124ac1e4615511f743ad65c5d778403a840310ac4902985f107fd33c
0049623e4c496cd353d2ae2a4804110c6a420a38ece5d5b235c5e35886a0987d
284e6110527b653b1b2c68c636ef423536180acadb954843eff4d9a82568a713
b682c574e30f793f093aef755c650e0e7175c2e3138695212d9fea7bd4b5805c
a90985b134c6bc15a19afae0bfb3066363ca3e2568c2ac4559a69fc32feb443b
61243b4508b7524d974636855c83c8149d489b68fe18bd497116a953431251df
bd09fa1d2ef66c85b997ab2f6b7c6d9d096cb43931379ff9782fa00c5f3cbd06
04265d16891ffc4f66e4a0307765d384c32aa83a4e4f89ac79ef8e76eed08450
e3466fbaf54f85324f0a4f04bd00ccc22d32e4132c51749bea28f112c2051857
423ea203df902ae80224d75efeb59094bdc5f4b6784ebeb01c38c34b695e681e
57a93ae18b657d13770300bde28833c732010ded4c8e79078d17acc3d4b521b1
6f2cac338c4f72e2e07c667227ef142d0273e5b501f24b02e9cad75fe9d18741
b36bbb29c9cd3d46964e00d8ba318912e69a6aa7ccf823c12a93cd6a0ee306c0
9795c5ccb48c6893edcedb5d3282583c63c4413ec4c62d42d31f06fe6b3b29c9
0150afc1db6830566e6da09336174b5fb2ef1798b6f1005ca5f5f4f6399d6553
2ec0cb6c6fdb37354a9d5fceb9f05cac04d8d649555294c90eeca7f722ce05ff
01e1ae9009a3298749f8f8c9a04110504b85f521c587cefe4677a50656b82489
f541b5c4e1204a4a6f604b8df3f239dc823ea29be26c857c76da2963c0040164
0bc663dc278204d9d9e2f2100244e869aa4c2b7c7588ce064153ea0bed5f1672
4b79e0092fcb869e47ea237e9a3488dff6b4a7adeb8f13972ee88aead7bb973a
212f273efbc838ad9941a622ecd55ed441beae310c77bcdeb8e0ef0e80f51a6e
9e80cfea599c5b5cd3b396afe76e597c266fccf3abb1261f3fe0c338ee177cb1
b91f2c3384c6c7f7ab04aad5e24a2fc538305779d3c950bcda207f646162e76d
53d76cfd236a61226f71b0b987a8419127e3f4a8fc0765661bd4fd8672e53c4b
7a95da28cf8edc4488adaa45de3dc88f6c1571cf891a9e95d2ca26c9b3aba223
5f25f417cf09b124b343f1bc3a980ec25074c5543738fb85356a2872d57f710e
20aee6582b55c1d157ea9e2d77782ed0e717a18969cfaf548f6921e200b6fd7a
3e67e5406338f287d371d61e35e3629ed6f9faa642f2f39cabbc9acce39caff9
5a0dd156a873bdb1d747d25a9e553b15df84f6370fbb3601d87446439c50f712
4f9df6518bc5ef3b41d1545a538851b4b4b671cbd8797c80a319e194c014b3b6
7528b2f7eb7843958ecd1fc40125b6aa9622d91216c44dd9f358616b823f6af4
dd7a205a122f050a70c7a82714a53ee80765497fd5cbb034fb292fda95df3e0f
cd0d1a78a0714c75bf69bc9c5bbfdc837b7c9e6074893c4f2cc8415871abcc69
7485c29547dfb33d46dc191310930f920b5ebe364ddc1865b86aac0862e208a4
166e340013b732f9a248ea324e6d7cec271ad87702d10ee62fe39159af830a84
b0c79ca74be8765ee25ccad19724ae2a7082873eb592d755a11aced1d6e2def3
d52b6897974f2064ee333c617265adb393f0d40788865c8be2aa2b64a2e67916
556602ec31cf11115bd4d77178b018cfb6c0bdb05166467f47b280ec44bbb452
2253fbbf658907cdd8a152cbdc55a62cee440d1b0b3453cb181bae41aab3c745
6f0bb28b6414812aed1ac6f9b2cfd550f2a9f7551130b82a890cdd772adf3d7b
573a6ab6df6f76ea7facd6d0d7bf89c60bd2dbf9467baa2209a0386585142479
2c5d1a0769a27462f95a6198124ee73e260a2df347959d0e999d8fde55aa5cce
2480504ce0072f4d5d299f4c725303bcf812066a05341a1c53da4c9ffdb31d06
2f9df2a8841d08f146c14189371ef8016691e005c853192d14c4e94a0f7c5e87
5390069c00e7f9a3ee668cb02726536667e0753fcf6320c2b872f11b40dc879b
6d2896116a10eac65dfdbc45807fab6eabce1f7b021675067e76868ec001330c
26326f866b037efc74e465e10f6da6ec6585a3949957a79ec5fa45362c609db5
df03bbdbd332d6667ba68b8d43fd0621786546ad98bb3c4bf871f0b36e01d5df
da2e25077db6b53a194e01258769698d394e6882a3a797e4a31ebb8b22d9a2d3
b46d5fe93b703dd5cfccfeb0623ffc5bc9628708fbb92accd9a23265bab5bb38
167adf5b6810fec7d8529d9d62c97a9d6e9244479b1fe736c1d29b19287d2317
dfc20fdbc0ac4235b60d4fac9dda40ab3e0a643ce32565974b0278d30b297265
7977fea6b50e9441c517e6e2d81abdf8c123a2275b1fd2525323f7db41c86141
05f7159e9ff7bfaa92ca4fbe2d0a37c3cf3d7e9a4378a4c0baccd21c7538fb02
810feeadbe46e9a0366b1b1c796f0b85bef432627c369d9e73aec179fb8a9e7b
57f29109fe3fca32137f9b0c38b47378af6a7e5b1150660c3e4d7345494ddbc7
e4d14235a8597a8369efab954b72ffd72157d31bd975015cd0036d3e84791130
e90b9fd7fc399d19ae071b11c1ae47fafb3f1494d165a4541ff96423c43feb10
c3ee8be947c2fef572073db863431f43864833d7faef38585ec240405705083c
a40e2e83d1570257d87dcfc0e9c2a8c39e0f6f8db5ced52fe77f4657e79faad6
ccdd4b660b022ec78a05e9861481fc0b0420d17aaa62a8b65f19a101d41fc621
6a0595ee4225a94dfa28ecc867f883ba815cc37bd4bf2aa36dd13a9b19e9281d
db9fad094496a052fb2a393b0fb2bfc1b81e3ab1c29f4adf4630ba83bca812e4
8d153b0de5e7540745035dd12cd4ec8bb3d978e13c14eb6536df8127f1f638c4
d4d99bc2a4d703dc7d17ace07441b6700f118f8ecd005af944bf10f1029d0d19
3d29d12440e162b63a2d129b91f3c95d48cab7565b95ef757a91ed6cbe217d09
2801bd2bd93cf3a726de24ef1becbbcbcee24a819acbb2b9a62e95ef3fe3c4f4
6545a49df9bd1ccc6c4584fee3f027b7ddb44a7baafeff2db5deaa1e197ae078
bd2664106a2e9402a70748344bc0059a25a929f36ca05f53c1b7b969ab70855d
fbe0da96c9daf5037be5fd4361bd1db4f0b0d804d5d26c8811f5a5d1de0fd0bc
3cb288060c93112a619444557dc750b2c1a3b2659fb2c814a39e046806ab0e84
1b045e4e849e0d66cde4ff23a2fc55478c7d3f50028c2ea89f949b98d7dc9cc3
72db2c7d7ac9c529abc1dc4f1ea7cc116e6e18d1cc4b6355c741edad89aa31fd
315d590559a1a8c435580322f15202632d55f2dfbb8a11f14d7f18efc2fe1ec3
89d84ffaa67c9e11fa957a1f261feb1705f5d28775fddc6f1887624173d65bc3
f8e0b4710be7d091e0e09bd0ef74b95b0faf31f19d6924ec71b98d06c35a8693
1155eeec44d9c70a5b446a23cef4b8e45913596697bfb7672f9ce50f7d269d09
31323fce13c16e0521140cf4553a9cb8bd6faa9788f3c7fdecc50e5b73f5881a
beae381df783c9721a95886d36ea6eac17e37c420b375606c2296f8dd530ad8b
15d419749864a766291caed7271328d86079fa02fe52694f9300837876317857
3fddb033c1ce5407621b6a03da968ddad215cb1e7e948a00a1daac40127b79b5
f9058259eefa8edfd89bcca26217b488cdc35301f69d330ee7b0e8872883dbca
2a0f2803a52624edc714d277a54c22bc2af3f82c242c3813142127544269e95f
d2505e88532e60e850352cf634631e3ec8288ed3f72b77d694ec7c5db11e5536
242088b901769f975bd51d0412b5d9484bffd3e25ffe2a04bf1d1af7dadf5940
82694c1535567ac76e3b86010bba36d1e0c556d9f6728de8f4f003a44eec84e7
c785b5f216316fc620124951826fee066ab91c1e21bc56e39946d6b02f41acd0
f672871d61dd3408cbf6a2c9f1d5702657f569abb81cd439d1bd1c30e18527ee
fae933029c100fa7ffb7a37729ac9b19261c142ed7ce9f4ecd349d5b98f53446
27051374f58491ad0c51d5d0a7467264ac992e7378c81c7d6ad82ec73eab638f
f9595bc89d089767a507bdc5ed9a994a74085d49baa3aedb9f254f469e5a1676
44950915f7b3e62eadb78e82835ae19b383a84dbc3e711a62908feb70d3ed4c8
7ad8d173766ac480c84bb041ab8988f4ddb3f96a1a48e674b9353dc06bdd1233
0c56ce5fc0537ecf9f38fae50e620949b06894c1ae2c512d5e5be4a540432be5
f0fe84e825af61302b55af34fe709361543bf6883fcb8f236a5338d8e2afcb2b
07becf126207223b0fa2a333fe7d68bb65f1e792ee35650138ae5333336da4d5
27619ed235d08f88fbc311e7ad12540fbcc63cd002f6225494cb3957cf532292
20d49e0d07d5e0964cb500536b4d6445c24f390ac1840293121635954daafd84
6016cdc20df511cf71910ccf158d6df68b1456a4afd4992ac5f830a58f86bc8b
cbb54136429659fb9f96d2448d03b5de2238bff6eb30a315a516ebdcf611857a
adb691b43856a959caafd5de5e6b3ebe22057c2f9a3ce7f8326e99ff92b2c7cd
6f7d39680f82428a33a56ea495da459bcf644f6e61f99f9123d15e234947bc86
938998f0ae19215abd3f5863f3978d93ddd7184a45f458c10b2698338c4ab776
5bdb489a7b0af953ba7091d3709fa5a1cdd6a5d5ae25dc7797de50b8227114c4
8b9b4f6f19f7c1697d863329b7fde63997c9c0d2851f4d5702f1cd346f3c2e49
e29b564bd82671249da3cf43b495845e9a4924027828c21204d07a941913d22f
401134cceb08073251eed6698cc34f4316e05d0beb489c714a29d3b7b9c7d621
9b5969e301ad6bb3b4623373bec7527a767c5220752efc9e119cb55f5bf2d9b7
ea192998f52548381da93289a889ee04a85071a5effe70420e3a26f549e09c6f
7a381f55e30bfa97cf1c79e3750a6489a398f98080025e168cf2e0cc33194d51
d05b6ae3492c4d64a3081daa2a3c7b169acdb14276272b4f401294f4b50c3538
c9c3cc77c58618c5770ec48db2a7422d29bd142efae0845557c0b72c86b07878
cf518080aab069ee81c2145654dc1bae3f96efd2cbf9dca349cb1ff9b539495e
4d4bcd7da85cb5bd9affff808ee704a985c1f539470f5164692fd5db0c161364
4c8991ac3d610d865bf14b579ed313c2647ab9a4021d214143568bbcfe9f5557
48f824e297fa60ca3503be9e03876345b92a0faed3fadbfe5fe99b53733ca1d4
99e752c201ef340b3008742eedae282b65a40aef2fb1015b4668beadd0e823eb
70a8c8540085968c304311d99a68c282649a7e075f0d389febfc95702835f60c
d3c5c3ab35fcae4f4ddf78a6477232631f24caa7c1ece803754eeceb53b50c8c
3b576d5234e7786a36d210e738b624b56c8b56a8697c6b0eed44304d8672c3bb
aea0c0a4989a1c00f849aedb3e99ed23c94183d590eba5f6d98f716c54f26291
3dc29b0933f4cfaa303f2c00b6ad6884c0baad825de986ed65d476800e6b0c3c
8ada9c18c8939ed4b6454e8edb01728ec1971b2008407fb5022afe5e7ac813f3
8b75fda081c2ce3815773a7f7010efff723e5468c0870b11c28312f3c7a2a91b
bda691adf8ea58ac839e2000ecb6807c376894bd61f1b8d1abbd1b8dafdb49ba
f07e7d4a2bb16de88f8e8a14d4c81ba1d66ceb659f7e0956c44ca7e5e8025bff
fa6f8f3149a8a77df0b304229acc43b77bf9302a59aeb00006465a2256ad8b9d
21df425850b45d587419d1ad34530a2e879394bd86ff6b87102d8d10c0d1a3bc
988f624275e9db26ee90e4da4870411704a9ceed7be501e7c8140e34a3d8e286
e3030b17e1c1fda97e5faf40ec47e19c644c00b28ea864385d5d911f6f1a2900
61a4bdf50155e447e1148d87a2beed1403c3e292a7ff5ffefc179b647b7650b7
1a7c463687e16b6d3ee77252484437a590b48afe9a663af49661bdb99658c82c
3a8dec8a471a36414552c1e661aa3e2b426d15a67bc32cb8ad688e10969f64c0
e5551b429bf52c17238306a6b4643d8b68b61a6fef7106ae14b5e04b41316996
719b4cd4c61ccc5a7ebe413c7119d60335bd230d117804e8fa6e7fe8ca631da3
ce992e8b6b5579519d80449b8affecee0c528136d82ef535c6d48c3bab390c7a
71db20c573689af736c919121cee8465b5931dc67961efeaf3b23c9a268af0b8
402cec91713b76ea3d1d23d41a9880ac086c33ce33ce0105368f968b1424a723
e24a22372bced5c3349c03d5192f34d82116f321675b2a79513ad79ccea9fb39
83770f56a0bbac63fa5cedada9dc2c514ca9e12a9e516a89a0a70b60d48d226a
a6ab84faa90c234c88c284f4de5f8a5451d6ab3234ebcf8f91e8bf82c952414b
117cf21e68b512d620055e0369f33825ce146f224a18f48f2864f9d051dcaa20
2b54d2d400e2b40a5bce02ff2729496fad79ce9ae04697fbf2f8aa376b0ba53b
2d4be81cc5a0b9b11e2d11395a92f10136eb21cf23c4948928ebce18c6239834
799007503e9a6cede8102ff6a7b3a5dd3e05766b7e5d4c8070b2af31fb88a36a
cc7f8e770194e8d7e4b9324f08d33e422b5078d72dc6882a30e3270d2000615f
ca9d58461dd50a665616f5cfbfac530cdbfe9d95fac3b327e25de11e1cddfdbc
0f5278b2abaffb998f8e3db9978a62336b8291ef6d9b32e0a0821132ec772d53
e05002029c6668f63cfe68a4cdbd8b255ac60412a5a48e5d1e8053e9b0a7ab19
39f8b86094a4340cb1f0e79102b873587810600026afce7995f5f5bd9e463ddc
721494eda87b7e4c17c964d8f72b28ef0e8af097ac57dcca5090b0000d84c8fe
8be19dd67e4a9d5f373bca2671bbb9c5025fdc849dc6b185a02b38ef34dd25ba
7ddbbd3c45cca6e866e5097b3c6f8b0aa3e938dc6e62decdd26d525224335755
1c4a79cb462edf00aa73288e4c8e6141c2679f8a0148b23e4e55489a8e1e754a
5669b6abf334a13fb8329fd0f7d33bc8aa244948bf5e4f6115cd6ee692dbd2a6
69429b0aabf53c1613fb14f0d8bdd80e84c24ce3f9998f8f65b0267532e630fb
ff7ad6c9a746420417a7421f2ef6e1590ac052e74425c27577cabb72291a4a37
9548b414ba4d026db06b2a115c3699a218eb54cf8a1d95c19db0f875e4a4c3ec
c22626b7390ce50ff07efefb1beb1c8542f86ef7880a60c69bb17b10c3c12804
3ccc200e86206bd346e9df6e65a7c27cd1da36f9aaeeff759a1c69965330a73d
8f1ca1b990bb069cfa2cf0d080d0918c4f0e167ed8afc31cca350a59e1bdd9ba
1ca85a347d17d37a8db1713aec47ba9f21a0424b93453804db67ee115e291b66
1d67e0371bce9a67dca9a914b06cc3111c1ec8210453cbfeb9be598d739c4785
8199c434109d8bd92ae60f43e03071699b6af72ba8ace4b607ccf8b7f5f4ef73
8ce7c9fd2a5280117415d4b905c30e853e89401e682b5e0403c48a9612e31b05
3c1a4300db08e524cfb180005df7beb9d44c133828ac2fdb5f8a1c6ec8b6a228
2bc44e17894caaa8830489c1136ba651f9f76579fc600aad42ea19b3f6d6627d
b926926291dea53c141442599971a347b182f3d41d9e1abd3c61ef8de15d9758
709bcd3c48781d209ba0cc8cb8a5e9d15184581099d9743dcabbd03024128934
5f786825a56ba6c82c906e74249c12b0a38c49889bd70849c553eee38a172bed
f478afa70660dbeac00e416d51387e71389f0505e1a81ff66ccf279a1288d4b5
5bfbca7f0c01923e84b96bb76f015864b0791458675130ef45d00e1e7789e83f
5fbe3606a4a47e78c59681b1f2a956939420686b974a802ed4a8cef3623f30cf
8e4ee397ff5c933f58b9969a429d4e6c7410739271229879fa10da0a8a337739
442369331912520d7b95b8ed17b6e93d7a9af5f43b42d79ae85dd0dec672d429
b6b9327d3669b0ef387b588cf14cdf1a21c930e440e26dc638e69e3504e67b38
a999820527f5c6670ecec708c7aec2bfa9cd5fb66c4d2d23d9fa115d74f5d0c9
831e9e2aae4c54fe23b8ca6d0edfc6c3f5ea0f061c7ba0711fe10c8771714dd4
c1efdf10a255f33ec31d120356e62fb4411ee07d5efcdad839592be0ce371e23
001f62549ef24897479288878ad6948211380e7f181161cf8180ccf69b63c190
a37cd9d2be83a002043fab3144ef9e52b7026b95af746b5e7bf7aea4a9cf6517
b7fa56b4c116dd6705a4f50d16e8296715f141ec4bd362887599b3fccb4c58f0
c1948da36263983eb8e67bb0d3aa8c3c25f8d4797d2d5f04098e8782a970ffbf
88f778bc7f3a7c749273a6d6a1ee315a2118fb0922b2e96eb4845adceeecb17c
e2e6044423bdec30355452d8e719798d16def81b13043398a0f67da917fce4fb
5e14006532ba590ddfd9a81fd12a285a9a38c80bc051b459c65e0b0d772ed0b5
13182bc6e1640958ec634ce17e769413518fa3f3cdd56ebf6f3117e71805ca19
ebd36de8319f3b0b2b8749942c20d481eb6f490c344f291fa4757800c33c7a4e
c1df78a79dae213a07dbd729afe008ca1f78a0d576db9503124d55d75fa7ee8d
bf74f973bb0129d52c766df7b49bcde76c8a4809ecd6260dd0d2e86ee9a04f61
1935fe7ba23a80ab910b7ed67bf7a27c33a8e0ca96cfde5d153777b8d9ba4d67
9655ad746076f716ff9b13165a4a3c59578d37e771fe15740090198818caa707
45b59da7848d66547f37edefbbf0effc3dcdd5a416bad5794aa6f254aa28bee4
733ba8b7a21d2361f8473b88dcedc29732d23bd2487b45bb5c175e23b5843432
f485c05a26c47b850b280abd76371e6ab9c745e035a248d5a9766fba1fb5ff00
2f29beb564d6dcea2d39f5b87558f17a849d6aa697a9099eb44fd78d42b25116
f2a71aabde6688c5af30cb6056ae37613c84a6c508939c8ec06eb6f51737fdbb
0ddd238cd812394684fbd805cb341b446cb48690073f037f0da250c85efb9952
ce330713b0ca8557d493115cd1e78917a15c88616bde74fed61a341cc805be12
98e327da2165c34115f7d95c52d40aea28fd43e3deb4c4476d2d12e952995431
489b68001c0c96b1f768224eb61d3270042b576e7545180874125489514f6151
29c521c155cac3ee079dad932c250438a81a5b172090e72e316ce313aac3d7ed
aba5620821d6c60aa40aceccae87f4a1730c989c3fb8503d8564cf2598d363ba
42d67d68a8f8e2aefc42b2c46d061d56ce72a44802635ecaeeaeba10f31ca0c9
76252944ed082375cced5a6a3827cf53ca5c154567364b23cb89c12713e58e38
ecdf49e272797edcc03b7799c96d2cae80732c8cf2bb0086200021becd33eb85
c2f15501fe2504bcf9f29cb239435aeff6911f3a5044d705c0ee192d4c2966c3
6a07d347116dfb2d
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 14 /delta put
dup 21 /lambda put
dup 25 /pi put
dup 30 /phi put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 75 /K put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 96 /lscript put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueXX 5087384 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b33ae3d31bfe98efe259f07f7950237bbaee4f7b64ffea83a
757fa717d50c3298392891bfd60e34a056b0d6021da3fd9b8b01bf78b0b23dc4
ea3b0605150d20b27ff9ea5f2524661019d982a2e47cd7c21ee5ca9ed9227821
f8d07119397de26838c11d7b35bcedc43e011626e300f8249ed846d7b5ccbd89
02550cda17ddf113df658fb13f8162681013766863784efac128e01ef997e1a4
30312afac8f3d948edecd7d5090ab5c864b91d7f6e80256f0e1fc99f1102b74c
61cc456e2e1bedf0e627d5f70f738f963a13666405c51ebf23ca077e97570a2f
1118536b92e585cf1dbd5fbf36a0a5d197538c05304e93a15f3c931168d91d42
483ef428b1a3f1b7e548fd1d23b80f5523c8b8bf450b02804fb689f915c86693
f7dfb1c43f681627c7f027021aa3a8179148f1819cd94b8890a9ac63dc1e8a68
f254b64f6f173c3d02e3ebc037da05074017c8b113e94f4e2d26b467ef9da07e
afd7ea7c86e025af52c5ceeb835951e67e02a38daf1e9e698bd21996c1071e84
ff7fbe77f6ddf9d06fa92b16ecebcbe0370b5cd9d450d0f2906a105cadf93ed0
0abc7fcf2c996e7c15e452006e35390d99b9cfc59925f1444c20d9c3e1fc2910
32cf9fa9d580eac1bc956334da391b870a757c3bee6aa3e005b20988d8587876
3ced20c6edf2ac2b22890e37ff7aedeb0986d85ae05bc84339bf2116df48c5d1
cc888bb33d409b06dd70ffd0618b2080442aac439aeb39c20a87ad74ef10629c
f1604db8611e8e4224c5b21ab0c7ebddc77fe9a283b3a8c6a2a9508f6836e3fc
3eae1366b4da4f44cb7a77fd81d278c17775d56cb28b70f18d894bfd1ec1827f
fb1768a0e20f76cff0fdb094035bca083c838ae5a354a280375a8e8db2650f1c
c9b84c81baed1a2b7816e824878de4d20b46bd0c41db03346b100cd26826a2ee
9a12be15f50edb8be46ecfe881b43ce7b941d60afb9ca9e72546e16c67dcaaeb
b32fe7de6c11b44f1616053214c9b0b1b1ac134edd0db2d80c986708ffef90f5
0bb035b002cc90d0fcba5c82f707a040929d5cd25744987e1541c66c00004b35
5e43fd7840e96d6c6fcd8b29067162a38742c090cba59679739d502617fc0c7c
23f17c21de023f9b2bbea469b8aa0551aa71ecdff520c2ee5e484a7b52702d8b
0850259b9c5c682aca3616066dea38968f8dfc11154f19c700324d19c2d78f45
128af746b7fc9578b36cf790d96c34d5b92d96349e751cc3fa6983e867759f7c
8b2f65a7ee4f474a3c924fd3db023b39f8276b2168cb5d9f4cb0974836b8de09
f1e3ed203ad9c4eb969944b601399b0ae282d266af96fcc51f32c4529c88c133
990a2ab04f717a12b7ff2032593fcb4445f2c574a39b9675d6eaa60a602a9472
5115668d3bd03853559b5fe315aa6eee1fe3a99e943329c513c56d44021e2942
22f4310e6f14aee293a173e28981a169711343f731e59b546fd6fa1966c36e8f
ef0b2871b98d7f0c862d805134035b5526b34d224206d2bcc549db91d191fe92
f71b6b8fb0b49b57d5b8ab152a80e283c35a6edef36997c7af5ff33e259211d4
7e8bdbc3cffd7b96a5af248fc15d4e94f2faf25bbf7e06312f77053cd2d6c595
73fe941ba62a884d8ff435c3aa264e7e9aaa5d8efe599c764b33d85811bb6fc8
2e1b6159d7639f93a9f0a20f9cff41226f2e84e017584ff54efe3aab027e70b0
855df99c319447ab6c7165e2b3d7c602abf5d937f055a3967ae16a916fb38a8a
e6eef3bd32fa3449f472ce69ae58f6893783ae400199719092d3e483d77e31b5
acfe65e3778368c3fb6398f2fbcdaa2b93947b8455e58d2194bdcabbc705838c
63d10ef4b01b55b1ec5f424ab79ebee043d85408d674d5027b5a8f063c8000e6
3ce78760ebee2f7878168889011029f25f6465edd62b172520c4beb90bd510da
959e3dcdad389d9397b8c1574f63da54d1a0a3bcbc24f17ff154e3eb147637ac
f26777d69fba4891ad79f9ac4376f21c2c3f29d1182360b831e35d63d61b14b8
8a13fe1c07e53a1524cfbeaa38cff0eae0188d99766a8b94abe443ae14c55d9f
5c820cc23de9c580c11a6d888aef2979e9e5befbccfda11daca9fc3c525037fb
331ab6f8cdb454757900940c1e5002a9cc4448974ca7ca6ac271f6ee2d3a3624
60a62ed937142d89b05562cb050eabe4cdcbb36d2e733a076ef7bdfd445b48cc
938c668be78f57eb64c4fe7fa825172767f8831902eccc69a0fd08e896cc19bd
bda7945a25878d75f904fa7e21472235299a687c16f15975aab3671edc5ceb5d
02a400fb6b2b077b70ee097c0ff7f27f0d6a6bc3fd30fb37431b045ee8c5b2a8
121454eda9cf5c087a7d12c5409f4bdf09e32291585531d19110d8e193395a0e
cc9fa9188a8cba049b84e5e55818f7c26d2529493c00ab0e5db911f3671e0b44
5bfae2c992231cdf12c947403f3b2afce8a26a52e8fa7b138369528ae25cea1c
65c7ebbfa0ab71b168297f80c64747c62d24387d803553c0c86f87d9e22569aa
c38ab958f27145a42e25e258c31ad5e7325e897d9fc98d54599d43052be6e2cf
87704f3b5d60a7ab056446ad6fcf44c01ab056ef8eb9666f7f1fa8b07237a15b
dca22247deb00a75d811c75b408e3c108efa453d66e07bd086129e989889b595
61ca0089e259a5d14f15088a74e70cb9d058af331d2731262948cfc3df9c0e00
259e15ab24a66ab714cae0ea3b5bcf11dbdc018bb3f51b92aa0c68679a9b7d92
4dafecdd0c8cebdd5b750045e56b32f1e6574d62cbb61c819f49fbbfd0e219a0
723ed8211e75685a44fcaf2429c2ee92ac660dc49e16c114d6ebe2d2068c6a00
bcd251fba6a1c56af70286e7be6de16ffd90aa294a3271117bfdf39cdca69697
af612cc3c57350871253cc3d26f0473324e1777837876ed3d8a7a73f07505508
0f66aa3da38576ddd99f453b27f8f0bf9625daf52be73d7da81508361d248f41
2599b1030df6493d4c9b03effb159589d4f6678329742561993a7589e21de469
3e3aba9ff4e2fa5de4cff8d90a1d6930e041abb8655108e501b981e860bcf503
b69ef6600fe31423d60dbf291046f88c9eb5b658c4c04984dea558eb85c686ee
657639707ec9c6902c85104070c2255cde0efb230f2674640cc5901960cdb63e
d66167e0cb6c366f7548f672547f90fd04130ccd93c026172079c7009ba34719
ec84d31502a206fd1a8c360071c495d55ba98b67d8957631193b198672e305b2
5d868a9b781e1d7167ba390fd319e3d816aa1b1ef6ee34fa004979dbb3a7eb56
37e06eb4f90b6b5df6de5b54fd5b2ed0faea26f75bc15b91ba1f1c392910c110
0908562e8b6edbbc5533f340b514d565232024fe1b45f3882669f55b7d2b07b4
a0d4c4465fca3b7c17f9e014ba5bca66a473493fc809ecd4ccfb00649c291028
16051fd5d478553073914d7b47df6889a23422e95648e387709e7d2a87e55578
21737eaaa6ee83c0f16e596cf2ba667ed5e4069b18a6ee6b4e203346cd7f7a17
5ca9d7183a16b0d0b15661dba0ec515a364d1a3553b8a2c6f42eb7a633d5bbdf
2867aa38564deb72792d4b17074caf0f62734488deba0e8e0d762d3d7a4799f5
35c4b4449d328b2f39e69fad2bf76eb77c3c94bfccbfb6a2e8b8b6de1a37845d
e45f28e8b2bb4299c2b03bfcc8c4a107e81cc1c67dbd21c67e78cb17c123c8e4
5930b93589a77d0780e4417f506eff7d8036a008d11cdb3a8f123b3099e34b17
27707892a99fdae6b6cadbe3ff4a97e67f3181154da340baf47a75a2adc4c1c1
6341401d09d627aa898fc05e645f08ce796384cb0bd007ca4b6280e1e995e499
7c0ea16ec7eee3c50a07768ac099d57a39c3c615f09c032d8e91d21b98cfa900
d486e988e1a4b8c321292df251d67bf9e728f6c4f6c58eced2c791efdbc898ae
56d01812af3f63773a176ac4ea3dd28bd2df2f35170116b3bf81ca07525ded40
2b48abd841f39d337f262215549a9188f422ef7ffaadc68e0a6a8c2e94575971
3b955949b789ce9c7dadc54762e230179f5fdf5aca9b52733d4a57fd65754940
ce5e66304cb90e2313a0a2c6cc5245526e65314b2862be5a20c5011cbc469e2c
39bf7bf1965455645034512630ae2948db86ba677570823150b58f07d08d3b50
bf65c3dbc9254d02d2c585082368979df325e7288ee87b408fc0a5d212aeb7e0
6767b4e2ed15771010e95086f620d0f40a66b060e43419a0685ee513c2900234
72cf89f18e53fc6953dc89c8395b7ad3b0494d2be191d332034af456035adc9f
24b7a04f6b2ff6b4407171a81801dd8049959fe6053840632951131005f994d9
cdbdcf5a40f42b0a419a150e565023039151d75b05cec91829d9d87659e4ec37
4fcc5d93001db613dc08db24d2e05fb2434545fbc8737d9149b63521f5d5b56f
07dc8ef507306b4a2443c3df9c6e12bb8683cb4916a10a8c0a838b327c4f0b0d
572d861c1f77f3733226a1443ada53e3cafc01def707cc1549c51019dda7d42a
50a87b9d54001fcb8aa5292dd9ebcb474c3b52587c3fcadc1a25c9f9665045d2
d41042762808959d8cbefaf5ed2ccdbffcd4a14e1ce43546441fef533b0cb5a5
14ce749cccfddba0b81144a8bca45fe9b5b4828fc7af5648fd7a39a4032d8385
0d9689e99610613b6166a0ab5d62b6762349422190be10c07d6a38b26aaca515
3ccef024e686f0750fd808b64f60ab52d6531dff826cf030b5ad6952afac8649
358d4646474c4a7b15ae60485131c3a6901a9a160a681274fa30dae08fd9c369
7adf23c1f6fd2573508109638af20353c37be0e5199bef6efacb065603f7e859
3e28b0b579f43ca1fc5428107dc02b418a32e8342d4f979238db9e5899411134
bfc5a1ed9b0c3c0370cca771149c9ce4573ca674c67a1f139321c8f14c6988c0
8aef9e002f0266a0c03edd1ad88eef84489de6b618c8a367a05008b68c129cc7
78fa701af6d5119b216271af8f7be4b7c463368c782e173bdd2a29f2e78b6227
9bfee8728bf75017fb331c823f92079dc5df3792955e1a96af0ae11f4fb5dd66
2353f425fd99413b57a059a1df025aa15aa4ee4bd087996f81a8006b8bd45f64
6d11bac20ceef2f3994fccb0fd5edef710b9d37299fcaad64d8ad3f0e989e438
a2a7e85375c6d8a6e46f84a75e5d81995b3a3bb1291568f221b291d01f8db476
88795fed0868df6608a321a93d5d990d8fd082faff6adabdab4ab898898d313c
6d78b02add0d14812dd27c20f0665ca4cee1a42f3c78561612d7b4e608102556
0df6aec23ff314dd889ec3c5ba503ec4e97ef1d8d79dfd417b21a54a5a711818
0b7f0a66e3d5a73c7979913821cd334830fb9867604aa9c1921c78ebef2c6654
b16b5c329889eb6576ffadeb3496369f24c5a92e422a96dd79cc173d9149f9e3
7f9e7eed43ac8475e2a81350998a2485d7733ae21d241046ed7dffb1d6da2342
8486a3c9536ed155f5e9c0b5e6edf3d74b12565e273db32ce5acd6288a806721
bf8ca6a07c0caacaba586fe1589b26918dcba06b33bc5e21e92a8c917fbcd9b5
f9f0aa9edfd8a2c0facc17902ed35f8f3bb5783bf338dc2c1ba8008a36962619
7c2bd55164d9b38d9cbb5a5556cf3552858423ff811aee405f3c4bb238881225
5f8808a3fd098672eb2a8b0e3ee9b1a574eefa354d04752556e0d22da800615c
3be70d5de74ab0dfd593d3e2145d0b5c29a2c2cabd83a31cacc6319235cfa157
55d773eb8941e8269e116f15ec8eda707a52fc018bc924f49e8f0ff4c7a9ad78
28466fee26587e0e9689d25ae02dd54f09baa6c8a4e26f6b030e490bae41ee54
7e84cfcfa276d03c9b1895631b597dbccd61dfb4d89b1fe8056a84f13624fc0c
a12c0fc31e1ef4380cc051ed47814584083a6a5db886b185f2b2d8618e2b8736
1aa4d202800f4a6d688f99111d78411f43cb0b05ae2fe9b993c8caca5a0b05b1
ef8b2c41d203a5f36f05e7a3677281ab76c0ee178c308340980a35077c993223
5fbb5c0c9ac97e2ba326f03e5593e26ee71880fd7acbef3be58a5cc2fba6876b
40a378326df48e8925e65eb796fab34348ef2a972df54d01495c73d82d836cfe
17961d483b3f45cffdc186fde4c2966ed318f6bc10fddac6134c2f3e2aabd327
c56cb3b8a356c8c396349e11ff744c40723d95f2684724364bc224d51fe1f29f
4cd8462791a347704736ea91148d2349e06702d1babe64a3078a8f79f616e389
7056e3426c122a75bb75e12506dd842f4035668ed3b466bbc449a11abe3edfb4
7dad2491a1556649ca58f9f0a5dfadf5aec0af94298383d8d7f1427799217cc6
cbce285c34b09741e077b7362e8f88c672edf66e76c7c6fb05734c27528cf070
13de71f5c1708ab643044ad203156cffc05d7c21ccbab4b782be6334576da635
ef8e56684b4009e7622a024e23bb0177f6b94a214a6aaeedc82a586b8772b9da
ab1d83863bf73679651f6223d8f2526e03ab9a1078aa0d57075f9d3e2eeba4cb
eb05f8947dc2f4077818ce5bb4c9b65675af281de3a93e593112a0b43ad433b5
fda05ca4f5d2076bc4526bb535a34f609d82984104c85ff2e6fb30f7b5cef4ca
6d2aa9b7d9e517d191fb5785d859b3777e72820fcedaadd72287290962625060
8991dac222ca03b4e4a76ac2d35c28757c106660b4cdd6dac55355f5cf83d4e8
2f4e488bc839d9a622d228d6db081d0172c687e407b4b820628858b34fecbdd0
85c8523ad06c67ccd44a8a2d83d556fd5713c46767268695d9cb8d7edb1bbe77
4d7bdc13d28bda89d21bdce3f91e7fc36da0c8145b9e0f9e8a7fdd19ca547afc
1f7066d13da524a749d3efcbec0db905437ec01bcd1a9c6ed10ea35f4c769cd4
e39bcf30c8ceaf98432197429570e7e95108b8aa32d76a5e76b001a27abbbe90
b524404d3d0ae34404ec0f123701f80cd2fd0e53829b0dfebd001fadb9e3f1b5
baf5287ce47ade59d66bc238245de950a99c5062e6786811a2767a73ba389e9a
f0650b6a38ea48accd21ae63a61d6fef2f915d6e19a117e7ecd5cfda67258165
f9d1a81fd8509238f6da58083712152c36f4a3a60b00e8435952cd90b6152a7c
5f2e3b11a9e8304e93377e62e8f92c62679c09a1874cc5f5bd4eaa7bf1579145
002f47cba0b32b686de03f1f5173cbcb0b8c603ae396b6b74bc7ae4dfcbf5308
107951ec6e5b64b8d3e15e81719e574fbab35d8b44723013b993bc29fb26ccef
7cd6d7b5ecde9e2c6b209336ef9290852149f41bcdc2cde17ee79360c7939093
70c9192c8c82debed89f87cfc705f03b1ef78aa967458d9b5e3e3785d768ce80
e5c7b846faf204059492155d647dc39a8d41e5322feca102bbecd0a1388bb99c
9b8afac3b6bfa9e5442f183de25b66c5755933bffec75baf84928b002313ff42
d4478c8dccc9829e8c57a86b2799b212e3f1b8939cc5ed4fc129257cc645b88d
c6553ffc1dd3a4dbcce7c1944538de9e9abfa1db006effcc25fa66def2b612f3
6b876aeea56353cc3d3a1f3d727f4b871be96e14a39c8d5d4eaf2866b12f228c
6174b452e7d9855e64473e20532c69d2efe14e524240c60ec4910e90dd306c51
a8b38cbb042f7bae5c21a50c645597e2492adc12464964d904b7daf497af5294
f4ec71a910836f7d23d4ca62d3fd267e5ded89bafdb4030590855e3354532133
913b75ed96e4a9f7c3c400ce2a88b53b860ecaca3f5e87e3cc0e8e9b0bed6012
05f37116d8df85b56f0bf5e250c3fefcc1e65c09f59484a309681782954f4fc4
ed582c2acb77cc02cf534b5b066c4575875118afc021d214fc8adde53398d518
d31c4f2376268b23de620c4c921f890b067052bc8fda655a38c0b339700d626c
de20e62dd4ef331130a5d02936999c47dd9f45d22a911ad82e42e9ce5b2669f7
ffc98734c0b8bf8d63a5a3d62d70d8f025e32780c95df82ba94eee01a8cdfd64
ba58f8514b59b554f20b71eef0f83f3ca6b73f0d1741454f719bc61c46d45995
9e84a0b8758cea600d43207ed0f2e41c96590e70a37986db9a3eab4c86d910ec
65ec199b589118b30e47918e015debc0c7f4d06ea57b5ae0298d7c2844817919
0d0e6cd7b9b312707ffaaf9f5c049220f15af7674089179115e73a5cdfaa7160
5b25a852885e5d10a760684104ab6ecd8435a466b64f51e2c0290b10e3683e6e
cfd12429c3005c0fb3a6494c667dd60448c28b6d69a6bf1813341860d4c3d55e
f2f307349a1e0217caa157e42b97d4eb980954e80795ff79a2a4c8631f162be1
fbd5cc635a2f55cb773a7d3ce57b2e9300f2382a3ee74d411740a1cc6ae3c815
9ee6f0255a0522a09a5fd052d7a538b84463adadd8d8a1a7e97fb13743b88cc4
c1daf1d79d78511d52ebf84475af159dbf8dfa453ef1ed4aacc0f16c1907e01f
23c06fef5314e5c841c0d985b2eb33c050d4e95fe89247d0c5b5c7dc6c32c97a
88f45b88ddab4b86cf43358b11c7deac291b0c3fbdc29760e37ea0d919b81737
b591cb73d154f5477134e214108a418959c9759ad5b4d1c44c010f94d2eac329
013cd0ba6cee4efbc4729c4a5120a040a663a2d0687dd00b71bc0b3b4690fb36
8e311932e7acd3ec755cd9dd051fb6dd8f6b212adfee352a4b9de3e57cc2c7a0
6d4a7e3a678e7bc5d153419d97b2a03270beb48d465a1c63dbbb24df3ed52554
f76996dea3cdd1b8d4d32db8f8b413e1f94b212adc0126622564d97ce7e7f72d
21a6a95c4deaa744d3b6b366ea310068845a332339c36edb9951e99fdf81441f
ab8d58d721efe0550ad479ad225bc63475e23e0990dc687b2fc4d585aa72c484
cc6409007f38bda9a3b67e46efddcfba0eac61b70794f61336c4060a1f6adc1e
39a053b4905e116cf8fbf04fa8fd83ff1115b3c6f231f7d5587e83885b623af7
196cc25c7fb9c8852eda8e41bc6c1db1d075861b2ec4b33c18edd69d4f9c572e
b0bcf263a74b7e4cabcf7e93ed7388ce06090053d3bb9296cebe60e76cae1052
18d09bcfabf551b87557bbe225691c7e45b00e4d4afd3832f84421c7e25fdb46
50f194ef694c6d0aaa179fb6f482ba08ee52e61351cdd887b0e3860c07dbbb4c
8523e57430766fd8823b3a421b2189ccb5ec965c5a7143af02a20e55119a490e
33f5bada7e2c3b41480cac53e0ee09a3b9e3a066aaee04442cce9f6b35e86ae4
ce078f85f51f38b336d240f91288b23146a3cef0270cc2834de354ac65d8837d
53f7fc280b71f950956e447a49e1903100c6bd16a8eb091e3ad723eab346b8c9
b71a3e6f87a59d1f62b272a2bf4b0b8699ba09747ca8bf5180f4dbad326daae0
3424f5f51bbad05cc34e60ccf99a41ab6ea6763d09d8e13aaf7fbaebf3acc023
8c65c302de182ac2226f67e7445856f9ddae3401878f4889346db1abd8a2a14b
cd7c8cede8bd27027b27f16dd9ade639aa4b2b81b96f5c6978ae0d65e5aa409c
fc112f19c5907fee1257a8c068a33078a1f359675973138c14e9b1b3956dbeee
4ca67b8e50a3a355ae6f04ed948e1f6feedebe7f6b30c616a6e464eb605b9a03
5fae427873c968d2ad5c068fd9e68c65a73d4e3e64bd4e4a3a6973f0d609dbe8
423b09ed98c953625a54bda3d312849471aa73b1bb228af0391adf3e495457e3
e5c51185175b9968cd8c17292970179bfdb3fc3efa3a511243a189f495c56dac
a1734068c4a056037e48ade12fc0bba6e8ae675cf5e0a90c391d3646a2c03156
f6e986d567b5bdd03f2e979c22ce23b1aed7253abc1fbb8def571f68c54e6f51
54031fa6f98f66a0a0ed5b1a529c3e52fc524551ba3a1857b2647a424b0b8f73
bca6bc55ab9f49162a400cc4f763ec7642f8176e38474a7567bfc9ebc4996497
ad8e130bc9342860b839cb89e3dd080ec6908f9de621ef5f9654b72c37b16910
590848ddbc2ca662ae360f718138a7ca2788898ebd58ce864970e063e8ba73a0
0d308d81922075b507454b938735467be49df74885cf3a8dc66d5f728e06c662
44125e1d6e175d5ab66c701915f553cc9e41af0b46da00dde109bccbc8f2f069
423344fff49ac03f77f4de1a045fa9198b294a0eec5d062456e8b647393986f4
b65119c6399ab3793dc0c1e73260b4386954d8907509a0284ad52ed525460619
2ede3b442f8eefaea08953f6fe9287b6b8983a08c6611e5045e67efa771a6d82
dfc1906f42dc03ddc78f259c15c424e06664fc2f436c5d87d59cf40e2e70789d
035aa7ef92d9b083745b3f9509742ee86fe8a3dc7787bf772aaac655de03d93c
ecfb0c8d76c6278ec783f24a01a7520146a67c392bcbf18063094b10ba21605e
fa02b3b1f42ab5f7ab77b623ab6fc61202cefc07b78f9fae1251a4e9c7ea29fe
5ebb1a0c84529ea7dc77dddbeda257620cc2c6a7e1849d86fe714668e5064cf9
3b1ef70ac10c0c9ff42a652b383c7f789835e2dbcc6b3c39fe6d0779bab33e18
081f7b4e6061ba0df4b55785d4d01c9ea57dbc99f44bac5cd45a506610f58cd4
058aa56e5ddd6eb126ad1e834660ff869addfc409e4e44f3645afa637745a493
dbb5a5eb481fe5f934952389c2c630176528591e7fc18599b628d5c1ebf9e6c5
daa4ae152e79861819648d7c4c21d928c8c5aab56a330604370099d68fef52e6
3f65cb256550a1e5e86bf1b99a2f18192d4c0c17591440447656024b000598bd
b8c57c65185962750a7331c21a77dfc16e7f8c6d75519949525f4cab5c1c1397
186bb3efd84ed9d44dc0cb05ea9e9c299153a00bc85bc1bf52ebd5ab40e8f50c
1e20d18e3d9ebfcb227dcd193235380e138861d27fc642dd515bac23ae5952fd
546d6418ce51bd763741de70d748e51051b749ca2e8be4df18d7e69546a5031b
7eb6674643514bacef124514806a1f6ad9b79d140279f93cbbf89f301650951d
c2ced4020792b9224c2c2643dab08d2bcea2269195c66d0d59852949158e016d
1634501df2bcc8cab399279e88f3bbeac93b712f5cdc5097955744c33b0c9553
90ba9704ac4b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueXX 5000792 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685bdd20eb05d5e7c2126132e33a59a7170609
dcf4871a5d023c9ef57d3362d9f2d7a440bb69bf653364105f16f4d0f03582f9
aced3d05cc76489b16e3fa8a446094d30038b06ecceda269f2eab9d19a99c7f9
39f9548f206c5a457a19270b2b82c43b091dfc5573468eaa3e7a4a32f8042891
d85e4b180fcbcb3091d2800e54c87d84ce9cad6869b5aabbbe47f40c68799893
d22b765295e1e69e33aa048b7ed98ba480ceca91f3ebf8ef85fe9a3976909626
b95ac5940d53f9b02215d84a44837ba25ed15cce0d504f1d335065594f3bc824
5405407591cccb11cfd4645da60d960c0b93f187b0cf7b105543c0b70f89af5d
264b6c026e3ae646acf145950202ec73282111e3e601cf2bcde22ce3edf6db23
516481420f26552ff4472d749811f27768150450d0d0ebe3c79f999e99b5c0f2
2eaebb12d97782b1bd91b2a1f62a76412548ad53c0dd411d4a08c0f071c2c218
63d9adb75a4621803ecb84c2bb235b620b658984b2d8e0c4637e2811bc8f0d04
6c8935afc70141e1b2d9c23bdb251d304b3378faf8928bd09686aa0340fb0cb1
dc48c996ef91530ff078666fad227a3589f50b605267212d3a65ebc1019a8eec
9a0739a00279471a01e1505c17658c10030fae32f274fdc8c8774b0d5406c384
a1d17068dcb0c2575c562fdc5a2176609bad9a2c255e426a4325a4fc3053c7b3
2f35f7bbc9aa50135f30223360fa2fbf019294b2e1d1405e078341097090ddba
1561f22f8738fe105c0e3b84532bed145d51428c9cb1807e655408807dc69161
1109a98af82680d6dccc987cb312835dec4ea0645f47a15b6707d654ae54846b
3d3301d61150fdea8ae2da33e79976812c7764050a3e86a2a819ffd3c64c38ec
16b2d0bec3922847fde375ffdd82f8f8bcdfa39c53068da393b35277ba7af682
9e48b1607f22eeefd7d0eea93ba1e2fb9b5ecc6c6fe1075db980999f0be7add6
e026230f4416b47adb6a6c0865e63407f8c5080ccc8e86d859d5c757a5a7dc9f
7b9fb7f0106e7d3ffccd0d589933c1fffa0054b2dbdd07609a5b48c8a730735c
a40ce869befe65bfdf048f408c4df602562477ad0d9275de292f1c9c23301863
0de89349c70d10b210e193940fbe71f14372ab7428c2769268b89068b0fd94c7
b35d77b20d8a9043c5a9648863204505dbb2e0e54b546c2d1843415be3216867
64e0bebcbdcdce08160f8882683940e296e72409e0bc7f973d753e33eab7b60d
ce8260286680542bc056ae7928f3cfe48ff08eab96b431b0ff92da2df4b78aea
6292c9c67515fdc656f85f91b02af58e80a0bd98a8bfd267dc91f6b73723d004
04daa703d289f37762775c8a946d3e6e6a4d6622570fdc88545d7d9652ec783f
bebbc47bcaa35ae408b686ba9362453d7ea8dfeeb0339e5385a857c4faa82c19
40c3359d20bdbb6e6bddeb5e25ab0aa75959a5972d03b88f7474aabf06ced78f
31a54a4e717e530f6cd91e53b00620e8894fbdcc680df9cd75f5f7f65076bc5b
694059227bf6fdc52ef0eca6f73310be88bf9945acbfd738ede8bcf957d55555
8cb15bf6e169ad01bb163afb8cb47ebaab151302cf63d5656599207db36ed97b
ddb5a30b9dfdbb3debccceab80caebc373ed6d864308abf5c6e04266cc59c77d
8d6d52db3278a9de2a2edb010a6b037fc94b9379737194e6940ce65a200c2614
defb83a1678ff3b45c40b8c4e765ee9e1e8abff8589374dcc874e611fd29c195
fc0bdd84445bee2f4d8e3437a9fb815c8790cb16f6cd013e76b97aad7cd13f4f
12001aaa1fb061b57b63006458195936d8c176052c561b194bb46778f44f0976
10934c0249421935119a905f8bde10d46b48877b29c04e3ddbc5f42aeb8590d5
6a3014b848bef3fcc574a843e003730ee0abdf1977da829ddf755dcfa9820a09
3c7b3959444ac2abd688febb7a6f354a776eaeecdc04e65386d5cf03cb2c7622
a404e2be0d002242b367139ee9797f97cf99c622d869f88f4a3f1b2ae3fe8e7e
86a5465dc175916cedeb7f96fa586a018975d2d19d427080d3262c331c20c6a3
6c28ff1f9a0653e1a5054f31539611d9b3934ecc82308dae2db113e2c9a0ca7e
90d1942df238d4425af3c56a0d0118d9440d4fa70b61a795fb062b8cfe7113dc
29ccd1d7bc3b62a7ecff6ff60187696e5b3850b8a965181179122028c410d0ec
814378e218fb2f52faaba656a7815c040070b3b5e6c144341053c4d990bdf295
349ac8da639c9984bfa004b6d16ceb7356a02633d693abe7190199f518c12ff5
cb416611db1bd71aea88c718f7830ee376974bdf7a3b52463b9596c49daf2127
f777b8e7ae4f5b99bbfeda34a991118d3300b4744351566f8cf6af57f49aed46
9012c6068737d9776aab716eb76310c503b36ef7f9185365cfa6313e61aab73e
8a517b692d17a304e90c18313b9481fa8e3384c2f1e20c2e2d34ca6e0a6c2cf1
91e9cdb348f603328216236ad10811e2df110e3b23e7642a49c3f1c3f76d7f71
e56894aa4856c56a8b297cd1d333a7d70fe7b18e8b1a70bb6d88778689b4cdef
3626e18cd42da46c349face964bebff136b17245cb390008490739dd9aa104d9
4794321feefc2c82a5dc020c3a9f1ac23ae70320d34f2b41a323d75781288f0a
e1cec0f11e5e580d68f4211d297af6198ea75dbed30ee6f031465db4c884aaee
1b235ce1c9817d875494dd34feae47d1d0f0d4cc4411d84204a503064540bb28
f50a78002430eb0e67eb1db4f64e3314f011495b4a3fea57e540a467383562d8
8ecbc442d8d205276fd1a14c22c7a5fa1c09fd2b7f3e6320c360f2e9dba4db3a
c75b78f8587bd94abaa29dd6a28676f75c79f5387c1777371cbd41aa1a27bae9
a4ea30ab51d4d841f8b8718df5e2af0390c7fe33a03f2e5ffc75607430519092
3c2de85dfbb0933ddb0c4a19c1dd37f027cf676abdfe7498ee7a0879d2579788
c7a7ed3dfc895d9159e3c089c3b1e44ce34fbe64c9164c8d23542ada84735144
2bd6d61770bd0d40e0fc52fd0e6ffea65b6e4a4206d5ba184487d555ab1605b8
bc860fd19453aa986eb2d3697e1fb2de2579f20d5d3f5c2431e53fa0f2ceef5e
6da22b92cf8ddb9821e38f8f00e82e3a7fca3d505216817c1d757534a16f2d5a
fb50bbd9976868935c66edab4597ac91bd10a35b931a916a8bd816542e3bd918
2a6c17704446aae0b0e31d01a625849a2e5e49ebc6712c8370f6099c8640a393
77e983a5b897ead84682beb4db2016b080d903365a8f46daafde71f871bea576
66986adadfa7b494daf02871af16bea8449dec197c11ef34dbeb7335a4832d72
7cbeec196dc1f803a9a13f022b8fb46626b0e25ca8f0b57f84ee532d85b5e797
4290b773251901f7dcefb8a67d08f4e134052e2d5715df3de7c2ee4a4f22106e
8ca0f9c6b8f5092d0bd50416b1d862cf3f7675b1bf555857d7416df964f267eb
7aa0f9d66afa6491a0b0252d040ec2d5fb5039c017d33762e68c1d05968efd47
cea0a903e1b16bef6b59e80344837d8cac8729456fd3795640246180ebcdc618
21999e7ff8a0c6ebda7d7683527f268d9436789ce3fa340aa2204f5fedcc5cc5
e73f21a2503031514c79fc6ebe9778cbfd982e259d1e87b1eab49d7f11653610
d18b24dc5c13fd4dd53c8dd8716e10a7e8f38f75395a5d34f7cd2df6abbedfdf
5ad0d9eec03aa34c0ffe1f03b31f46e25c9815a85e26dd04b1a2fecc33fa7f19
158240e57499682ca07a80537d29b8d35bbc1c7bb9adb966a225356157e45cf6
aec8d97037d298a66ad2f6b02dfa3cee9e78a41c2c9ec71ee95c5ec8c64f8910
620b8a4f0d576fd4f0b39bb67f692253ffff1348eb8ad0ad7b0a5db154f12683
3290c4de956f07d677dd92858341f7005fcd5cdfa6824921a4d1251dec26e8ab
01ba4671a176b667d63f0842f76e060a220811b76fa73a3fe456e8327f5c3216
6adeeaad01966975a7e592373ed30e813d56cee116570d48829cac6748c177ba
e8dd8e4f793e059e38ea9096fe01be2dc2bef11d5461256e5b90843b545b598a
5eb9dec5f7c2113c5fe9abac60a624157981d04ceb90adfd97c9f992d5fc2d10
4f4a6a1248a7b363ba4d27ac2b17a672807e62c887265a1946f0560380824e1a
002120d0f21a07956db3d5e16fb548deac98c0400f20a708f156fbb60d229f6f
5bfa582a00f50a31d99f3c452bdcf2d7d1204af26687d494a7d867e7e4596df8
7efdf369955c6c2fc18aef59abfbbb37e051227a9c78c00dbc5d983797a94350
fae9e31ae17d0b37f5b25002261fa016bb75fb0189792afc3d2f3f27b62df678
fd28b9007a9e624804f9103962023afeef7f80bc0e3b26be2e8c74ff280ed162
20d721fb064a9acb039f44c7353962cc18d24965d878086c95f1cbaa8b47ddea
50a3c03be1dc637a464187d207c23c5e1817bf8c01e639f5cd7a4d3bdab794ab
e973fb9c4b09181b28ac38a47312e577fe08d49b36a94f2f2edf2899c5e62d22
78cf3192d3f95ff1047151b6e0735689404e8798c5ba58c3abec39b80968977e
51b1ba568d8b47bac3e9e18270d1470927dad68dc23d2b9d875c1935e5966924
dc5e13b53eb03f07d9258c66f7f44a513efdc52227dfa5348b9444243320ed04
145e92c5d29739464d69c81169355d35a33f2d5bc7c681b74b2270160cc4f536
11eb6296586c8cdc3947b9372a17d381ffef42eef31a880e1d57e722cf00b866
49485d094f7c3583099209e6406a94257c468ce3378b729a7020bc82aae85280
4807dc25b399ae67cc8039f5baa3869c808a89745496d2c96df128c5143d102f
06947e5dad1c87b91b86989a344799c83945c2d2b9817d32b2271093e50b7eff
939cababe82c3190c7b71e8fcc79c7a17f835e51ee68b143650c217036c4708c
d44425a1fa8e4941eb37aca46d1f5fc6466b86abd2a38cc58ef962b4ef229a35
bfbf7d2fbc33317fca7cc2474ed7c5eaba08913fd9c4ca170037b747e401c6b6
ec844c79c731a2658e09880358873190c83e0649c50a381352acc3af813a206d
a9391536a3e6f61144ec368497d981d9655221a68dfc06523fe7b760832767f5
8d46e4f64cfc3ce2f3f5192a246ebe017f0fc7da9a9eaf1c7e7f53af30e12b98
6d010e50db0720b1011286a90dc311dfa828ad2f75380062972d1b975ebd98a5
9300afbedc43759ea44a43b630e93ec645459a5549e6600b37012978804b400c
5b7b3700b14b7acbdd44986846b4084b3e60bf7b537cbe81f6d11bfd1c59b869
2ab2d022b9c4a979dc26b8de2e352cea9d7435fd6dc136b3928dfb3a00386956
1a31a054b0035d807604a174ecdc73d234610118bc16545d92f32e7879eb4ec1
c5e6b5057225bb64231380415be81c32540ef93b780e571f7a2a12c590ce8905
716fb405234366f054347973b85e06fdbd17245715173f69af21e9ddad6206c7
91c9dba2745e659bb643aeb3157ef5d851484d6cc717ee75f17ec911c631f9b2
a8867793f7546c325ac0bc1ff96c1b68aaeaaee13a00258f4d68c28a4d3e2f10
e47094ab34c5501ca4ca32852d23e7dacd906c6516c5e052c9ecc1cbec5b34d2
3464638d3423bb0a6158d1841a0b5b85b73a4dc8035eb26c3a2212d859da9c82
c44646b4a3e4078fb7d4389dc5488ba3a307f8f03f131eaf4496291ccadc7433
dbf91e74b255c497824872b19d89266076d068c18f7541158ad1ab5fad5c6768
22899749d465387e9bcdd68d4c91549d87b680c5d707274366cdd71e6d7ce7ce
289d5eafff692670c08209a46cbb8236f5eb85e7414142156cebaf31f54e6740
b79f8bd520d8c8d938a480c897d76bc87855259a8b9bc77965d67f30f94d9f8c
5445f8db389eeebe8361111ebaf95f9d834c68358f6af2da80bfe949a89a68f9
7076bc99624c21b6fe693619f5c3a596e189895c855523be247af13fc6cd1061
0852bc236c4e3eb2ee31449b008e8ccf5a8d4e546b7854e7e6a83e6cd9f47b76
5bfaa1cb461d31335e3bb42719edf46b13708b119d283bb9eb3f9a4644ce91db
096e72725197e491bbc7cf1360f7ab84750498785c72b4b6452fcccd0a129797
735d824fdaec874b9f56b66e855ad250346d95dd35b4fd23845c5916e513ec18
331e3a48bb22418cd79b5024d3e10691784716c88c8317c2301d394d2592734e
67677763fe6aad406119f6b3709727415856260415d91bc1e8800bdd741971ae
45944b740cae1930b4359394bf17cbbcad37681afae49c5a8d10972be6cc0671
b591ebc07a59256dc58387015c2968a3607dca39b7d65c1b385652d3dc287a01
5351ade05f103df6b807633c461a46e8c8cd6da8ee20d9a74aaf0e56c68f1eb2
ab620b7bd887513ccaae5a226a961feb044016923c1054eb8a2a0b53119dd7d1
58ef93b11b4106aa01d57841e0c7c1a297cccf6f91dc03f06437a1e454dad1c8
8032ea2d8b3ac7b46182c584cff8e20db351a62e71a9027bf259357852f0eae8
cfab5265f436d24d1c5f2b08e8142c7194a138749259a9776846c946284d1749
f6986942598165c3d51b8661b6b67737d272f0887cb28c25fc03f0b376bafddc
7f8779436dca88d5e9a41c0511f9a540c6dc196e2da4b6b6a6f274f35586803b
341763f2f8a60ec9c764f6fe4b27ac2b96494ae02a6084838bad77df439caebd
67d395b63293d17a322d44123d91b899ff10ec815f8eec3a75364435aed2fdb1
76b9c44c1d173a563b5d322f5a6403b986f98199d47a07661d834ce5355e5b78
dc11f966267f54baef6531a9d9e24e6fbf2a582afc669e16adb1b867bff640c0
223baad3b6389a1dd36c5ab9534bab49b1f4685b3bb55b9e1355cfed99a1a1af
8f4f9957904754aa05c1d3410ce5073362bbaa6432d58fe8135dca01104bd7dc
f81c12e91b9c7ff499c062d682b404919ec4838cb36a44a48118ac4e7fe1a6f6
ce19aa6b44f9d02a60ee271a5098a7918cb2fdebf9b393a5fedb3032a3351ed9
4cb83dd3ae506570193ef705d1a5e4feb313ec130f308868974928f4ae529a41
8af86e0435068d8d64d2a015abe5bc920a060497e6ebc0b451678d7e036441ec
333d6aac9d170c16b10beb948dddab1790e35c5deb2a1519d3fcd031e8360e2d
78030d06d17bc7c1d38c21f45973145cf300e2b64e54bd8883cf25be538333e8
bf86f583f7a38a5d7d3e764fce4a219f44b5101fbea62d3241d9de8076fc415a
eb9c92bbb6815bba743345292fbdec39dd2067e88e8540a99af59a99cd414a62
2e98f8dc8706d8a26ef995bf91d8e10e47d2f17545a10084afdb15c86da3f7f6
9eb2bd61d09b285bbc4a035c2d9015d22643ff6ea2f1cf8d134a9dc0d47cf0e7
26af9a57c137754447a94d051abbd765e2f673029e74465710b5fa6922ce638e
2305592ae5e63796101a5c87597ced29da2e563f50c43e5f70b70f1811720cca
29371118824c0e634768136be8cf93682300f53a579f58c1fb3fc9229194d430
afd466e9913d369cdbb481d9491bfbec923f303318c4473e146d16bd3d10db73
44f8f746cf8f54dc46057e88474d3233969d0376a6e6c4572662555b561cd6d2
c01ecf7b000f7d13773b7c45895be192a17fa69693d6b7e4d5d6245b150ca34a
26117c0e154ee1183da63a4a0e4d63bf1877d2606709a597e4ae9e99d6ca624e
c6c58463d656d4b5e3c032ca0cdab4745ad84861ea0a8b16d8cf64cf519fc89b
b0a8e7a6b863822eac83e298e4d66c1b2e613b222fc4b6e3bcdd3e4b6402035c
b7045fbb8b08cf2b18dd9d4b39b3040bd557c59c4d1580d321e44161e1e5f932
fa62bd3b59976f47a6a6acf12b26fcd4791ee934b0223214b5159ee5cf865787
e4ad0c951a08c28f2e5b6da4f904f2ce3c05f926ad0a31dbd58bbfde61007b8a
d4158fc8d0d535879308cbb2cf4d2a6b06546a55f0d77902580a3ee50fe48beb
80ce492150abaaeeaf50083ffe24e2995ce43686690a943e9da6ed3f5d8acbd8
5b8bf2ba7dca63686e628805eda276d52bc0d76100c4b98e0133cc8a5f564b26
6bb2e46cba959d7c2752f818a5442af0720db098dc40c53bd56702e6464860cd
a4e4a95652d6dfcfe7d907dc850285bba78392e976c38ec675f0d9d4578f8cb0
9a5c0572b6c5527c2d09d43b232b346f12dded3c4a575c9a9dc142f1853f4049
13ea26d18b5ea47ce9d93463f8d3f554e0adf9bcc6599077adcf572562ba9d9e
3a48a3eee28898f2703440cd37668e598a0942f702774ee17b924440788e5c88
f4cf777f8d0b7883bfe34430f149a9db9a574043428c0eb71bf2699243611453
9c63496d1c0878f1d9bd3bbfde9f398556bb81182a61fb43d97d1514dc955e31
e5e2b1b509ea13b72782dbc31e2d6abfa232baf9d130fc2176c401b87db9887a
63039f87d6c70e3ec61ebbe7309cca8decd1b9d5cf343ed50b835a16c49fe250
af8137572be1c3a45e65de18ea87b4bfd7a7f8db6332f4b682bf48b26a6363bf
e2a4a553379fdbe4b6fc897bd12711adfeecd089d0a3b585a5da65dfa6d55ce0
8a1ffa742146c9fef0745f7f9172d63ae2fc379a11e6658406f38f9ce623a1f4
b26fa1d573d5b972fd3bd2e860b02d7c8d2596d9d8f2e78b6ef51819c400e1b2
e7fa5dff9c25896d6e8f1c68b4ba5ee0046d4d68f51294c6377e1c0530d89a86
52ecf0a0568f84a484322fe44939ae4374265a4354a8d33bbbd9e7862af2f0e1
bb98d2b417de6f8ca67d235cd4e78f2cb842ea68b4d8503bb59340cb5895b7b1
bca88e6b2dd44f3ad5014b39446e763cbe669b06a804f0af5bafd1c42a73f9f6
8f2e99e56d71221106212b37a95f9e5b957aae63caaec65f9d0e6a41d32d573a
971a587be9a2c665d714938a4571e30c67932acdb5f775ffb1de35cad9d9a466
9985410cff4fbbb62356131d14cf88b48bc6097397afac9bb5c8cc1bbfe4135e
820f7baaca97ccd5078a63b1886e7551b1997d3a2dcec4bf11d1bf4528c415a0
b87c13c9932d9c8787aae6030cfcae842b6feb0c86143560abfbc8cf3961d479
880489c48daed50c40f4ecd050ef305ff87c656cb068adc88c998b69c7324e88
dd0e46f110a994325eb2f5a4db3a191975df37e3ed8ce87c9afb8a6966d7adb0
8139964d4eeb863fdf5204e756b485406f0860ab518e890924697800567743d0
dc26d374ab87dfd7f49e054408c9a397bc7a6263db28745bc53149e4bcc1c18f
89e075d637017b753d997639c65572694c817ada50ac98e8feced55cb33f9a48
94582af09d98d5ee9a3f941ac36df117c3dd50e9f84388bb07acf594fef787f1
7344ade6329daf46dc882ddace54283699437f1d69976db494e300791f4fa313
7d484ab6f694ac7eb0b164deffacd3c11a6af7280708895b10f88362891ddcce
07c66122328c6b228d17a190a3519a7037ced4069927941aee6dce3739e86987
1a52b4768cb340466a8226e6001b502ce1141aad21b6d97a9cafccc824bb2e88
b42416893cbb4bfe05441c2c1f90001c8017c696bd57f20e9dfe931a66414633
043a6920cd3be1dce03dc4f7f96c2c401218b147010a8ab6a2995693d102a039
2e99574eb63683aa0ceb7e29eab5ddd12a954d9797493af19cad4a0286363cd6
8421cbc0fd4012a65df4a553c56ed53f739f130bc4899d21bf121aa4005ce11d
7c8d44bc56910b2ef486b26669ea14daebc2e43dc8c7f7e5b64df5d82cb1529c
cf06366f7da4a45d85f0cc13c9e5c970ded92243a20a15cd04dbb7ed2b8e0d4a
8f2f87f0450f475cd3b301532da8c80346db951a7c0445a9391d2af88aec76f9
35c7ad3f70ee3f7240d7331ddbf308f7103f9313e912811c9d7e8b1e46da4ea9
9dc1e2a74613d0ab85b66052ac95fbcef190f630f3051d8bb78ca69a4b226905
9673fffda606841ec45599fd5fffc3ded18868376373612797d10049071ecd49
45688fac86579ec3ca2fc155ab36b39a7bda97738fd0e1b3c138813c7b812cb7
89b196310cd248c1368054ff9a8a90e21a3b4013aab2bc25899e9affa51b99c6
fef0ae10a31f4e7654bf488d9903e4625d4d8da4c7eb73cbfeec36a270a1e0ce
fb5d3fae78863514cd6ac7807a0c932dcb8661831837bf72c3e4f1391ad727f7
0a87041ac715a5f9cae558e4171c8def914624cc1b5f463f48e3e8d06854d90a
8f4a351c87b59c9ad66d9f0d38d9d74e234bdb440fee8631395b7a85a1f4287c
4cd35c998083b8844e7e5b6ece2ddaa650d12c7b226e7a550cb6e08f9fca15dd
9e4abb230b320e5a7616083b5929fbb5c232f68cabd5c92ea3fa04e335f3b9af
798b0297f71d7f480fdd5bec8c34f92e9ccd46193955ed04a8cba8211dc7c988
7f76de915788d1c2d8c574155a45003a7192de4e13db916961c7a146776120f8
f9ec8a20789793acd4ff83e8b62ded37e7f799fa9e420b05c782d87b0be2cb9f
17da263c8d4cfde9b4a2e579fb625ce643aaba60a30ffa95bb3edaf3cc8ed11c
91340c28df3f9fbb2ddcf022f18d8a917d18c0131d90078dd3c16eecddb1197c
3b3f6e48065e3badbda90b7c9666e1e904ab4d9210d5c964ba3bc686ecf278e6
b78fb60a3787925d2e198a8d6cb61ea8f598a68367f1d89d014a0ed299875c8a
63bcc102de3ed640ae1d4f3d6dd56b10246a2f17c34e3655b9ae9ad77b7f23bd
08fc24fb79cf3e1eac41020d2d392d1b8a1139b90bdd3740d8e40281392f10d1
7f73916ca9de25d56d46382bfb3a76dc7a938bd7df9eda5f2de5462b4f57aa94
9322473b8a4a3e9fc5cab48aeae2db23d9939389b5549610bcf1b1d72dc21617
064388696f2702477484e702ef2878823948911a71f0a4bd5ea18f0e21e0ed33
c7d893e26f89b8dcb2a786d55b3a1b920d80dcfec8ee0aaf5bbacc46269a47ae
27b55da0faa67b568d236a8e612553b03c690ca58b92de791b1d0301002bb234
da03128c71b739babb03bc63499587366692d13ab7d68b5cdfa4eff05df13b08
8ad882a3cb8812fbc3c12242e492956ac8b739ed50f0a93990a1a687259fab52
34e61f658dcdc073b4fcb9f4b25c9af571f38571c595edc47959e8b33f6bce70
850b31786897fa7c1c111e17b7b512377e918837251f48a3dbaea7a6dd2b7521
1326008aee2a84b16c842edc9ee2cc1c0850166409422c588c18e01a3d0f947b
22e5827e4031a22bb2a864c97925ff49e7ddde03a23e2e44b7794467d882a851
304bdb2887ab86595510a503e6d833511236300f021e65a347849ed9c0dbc780
27a53ee03747dfb3b0e90e3cc4d6e338b0be56f6b4d2da445a5ccb016924826e
a08e631b81323afbb4c93fffa948a5f6b79601aeac3b072ac842fb8a6e5d1534
861c10d7536feb03080b53a42f6626c1f3f9cb7941d442fa4e651c2ab3e72d84
3601c7c93eaa6fb7b5ad9e5c6981447c1494e59e3beabc8fae8f892a542d4914
71625fa73ebb3fab06409d55072863d718c0c72e86597ccd7134ee53146d413c
0c41f35d5f2cc8df11adc57a7fd0c69614f16a57eeacef7669c71b5d69957692
53e101b8188e283224ffdc504759092ccb02774dcceea92d72a36f6a24700643
46878d4ba419e85d5944efbf032a54c4dc0b2f45506b2fd43535ea91a6b2637e
979e9e3a99ae1e97e0f41f8ecaecd533e615d3f8501c9b2d7bc41d2a7b3e2bab
4c1dcdd04770dbe6f8a1afa759e94a49cbff2164dd772ff28b4aa8e9f01bc781
34c24e701e5d96259a9ed89497e9572a8d74adec95a09d162cd2475251e02629
e5149eb91ee790165868ca705a63c20f9644c48b9679754c9a47bee3ca6c3fb5
9f888f2d771f6cd640d0744c67a4520df878d5fa7b54c0a6db3ac9cdaa7a9995
76e46f768446c3a7bfdcabe08e8c7afcdf69fb81cccf6912f02e7496741d9a80
95f62c1cff409aaee0a12ecd6e0224a557f88c17c296888a652b99343ad94976
1a5c8ecb3763d25a7192c67fdf2f535e61a515fe758cde19c6d7f3552ef2b632
7a3a6aa5a5b4d71e89ba3ac5b04083015cd3e9c620ed6fced504b5062a1c2b84
f4d4bdb478d0e3e6ccda6a9f1a0e6857dc869e3c0ec87ade31bc0efc81f604e0
bd9be245accf76d0602cf912733d518812cd6e6040fae8ed0fdc759320111071
05037c3c4a5c3d98d02e6c88c3a3d0ebe122e56c20d4edbf321b901e04203fc4
8873d088578e7e6ab0224bb511d8904d0900741d7187b7f13a0876bfde42e1f4
a034445be90296c7df2bc27dce67f674846450df76464646934798ef0f373836
4a61f8665ab944a514390e8ffc9bf3088c192663be8ebac07026aba3b6cc7a57
ebe75d1001a53db76e4ae0f86d367e6aeacc138fd6f88ef5de3be8ebbbd77d3b
2a9d427a2dfe3acfd448f202c4b4e25999b5650a83f7405715d94bfd2edc1391
241d56a9136216821752bc647b5e442b171d09b6ccf7935c01b1eb2cce03773d
1088db1d5a073d1e902d1d02fba49d413caf1ab966adbdc215008971c8350d8a
2bdb5c2e47aa8280c80f60581864adbbe6c3367ff0556e91c3fcf1ed427d4027
27343f0af12db6bb4734ba3972aa3f4a7f3edc0cce41e75be45c67bca01a4461
4a7723da589dd5aab31e05fe73c768e5631d53897a44d8df4780edc0047c53a6
5449fca555252a4fa91534c8c85e4dd328dbdf108fcbfc59c07313512d440c10
829d09297cba44f8503c4b1a29c03ba1b01f49f1c42e9ee4fb55bea5a6123918
f0e1251e5197d6d69fb6c68c43ce60290ebfb396b0c012093908934bf9b8fc1b
e69c775caac6e11f49141a51529957f344d114f964c29249bea101528f2ade92
d5f41704e699f39d3fd569c9417bdf5ac579a2a829b95034b9e6436edbb0ae81
32702700bd79be2732dac074400d7ba89743bd3d32e7fba97799a7cfa1652155
14905cdf58a43ed85494fc9fe1b4b9ed98591344e7b16e011a4d5288b9abfdba
5a3c2fd4aba0e6ec1aae59ce7d65530b73241a179fc19e90376970131062456d
92e5ce66be4d546faa872ac821641a6b829032c2957fcf9b02d5da4cd83e3cae
b36e66553d2f85f90be39f13824fee5e6ddbf7fe25fde3d7a97b40712507c2e1
a61ce5cd3209feff72efd2e69d2f382cf0ad788b9eb28fbdf0f730142910011f
642071405a35513c50cec7328487d06a3808ed705574c59eb4e1c78520eab634
e879d33c69d085199366c2e01e42328f9352bf371857c2d935b131e39c565af7
100d6afb3e3184533f7483e0d3ba45e8acd08693c2a91edd6a3df95bcb41b6f8
49740a709b470ace20ca355a96c0b1d4318653a0c4b21328b6b5bff316eaf1c2
6593ac2c74b1829ce3ed15b6d44e53227833c04adbd1c92f0f7909841a98ab64
ccef3be17b3b95893715942c1c30b0bf1873134a3a7a10b7d85ee1dcccdd0946
a338ac71ad73397f2e93d7e684007bf31738b30ff1b6edd53d7edd2597b10049
47be62c060306738fbc49927bae484474e1f38d8291f1425483777be52fff821
02a654a9b1f886a9dcb895234e8d80946e25daefdcea654a448fec31755a9c14
d4ecd23861824397dc78357b73328a03eb88be30aed4e43f0310544382cbddd2
935b9dfdf89ea9dd837eac510d3fd8cc42ddd5073e2fa12e7680707f7cb2d744
aed1e4982fd4bb307210d3b88b534a683aec998c23c65bc867eebbeec9a18ceb
abbf784b085b99613f38aeec8207872da4dc3d4c8b3877ae13b386ff1fd4e3d5
1809d3de8a9b949659429a3abb166e7fa80794787721f5e189368338572c4de6
c23bbd5d6a3e08b146021faf383c1a60d605050aa8cd0cce21cbf41feaf53e2f
b79bc5273aae92bbfe9aba833c8ae521b0ee96c8f27ce98c9e1929cb2c9602eb
75cc849bc10e240e8e89301f0b180d388cfc756f926969626185e0ee14e945f1
4ee0e6d41b3bda4af3e81c84b6a2a13fd38c3bde429f5876f60b3c600b4ecef9
e08e9a2b374dae0ea50d631c9cdf0da592785af7d0173c1f3fb931219b929672
c05b46b08024d11f96f8cbf7c559abadde813d84abce28d0330f2dd9663fc621
1672d8f6ac2b089ae3444334b3d28295d1a099545f4da8f3e5ae9e1a51fb845f
2a898cb4efd9eebb96f716e269b6efdc6994035b5e1ee2ed92c0a13c05096f1d
a902f9f9d1082c2d165aa258ed566ed5f1884f06b865d94462816192fa944732
e439c3bb2804ed22dbafaf2f4de709fb6caf6ecf66806760016a4d1250398c41
b580ee2f70dfa5ab78c1a92ad00c592044213c3e70f04c8576fde743f2247454
bbf9584055d2545dd3487ebea6d89d4964b82f32012ee1b3eda2e1c26d893038
1f55ef933343350adc6c5f277644b007ae528016b7fa10efd28d5611fa188ae9
ba325f238fdd460b0d6b149c62816a624e349c00241e0f1b75b101801a362436
c35a153e450ae044ce43773c1c1ecaa18cb3e8141f3e91b0d7c83c9ff70054bc
468a9e760f599b95243ea778657779d818dc89066bf37c036db5dbf0d301efe5
76a3b1f3e4e05032f1b42a0b642c6ee4af8ed8c7980219d68c7dac182556cb87
72dd5fa595ede7851855f389c86397efbfb59435a2a05b02dd7c0e9f0e19902f
f7b0986a48c53b46f657c17d41438c31b98cf9c54ed363d6d5645eb39d355334
47825219341deb4c3fa8d3c3bb5726cfd1562c16132f1cfd9b0143b282454ac5
372de9bc869e01c3c05108896b11d8ab152d33af61aa57898db8b10c12cd2d29
8f3cd66b04e2985154ae96e5a12bc19fcb2f5282953f7ad1778e7249cc7cf482
319464ae271b9ee6ebadb43736a29afe36c36ed0951370bf79ae858b5a6c9fd6
0784db364810d458e03d953d07bb5233c528f329fb32733624ac587a66a36544
ed266da2a0407cf11f19c38c0698501361014f2dca2889c3fb3347f67c188173
450c652faf0095448e3cf13532ea6e3c0109f11d57bd9876e28072a44738215d
6eb84d0b63175f06499f0fc6f0ba6dc6947740784061d7ca8a131c9490a9f481
c56987a3d3668080546f45643171383fa6d56fdf6f6b4728dcfc7bffdbd68acd
e68493f4003fa486959fa3175774e49b57aa051c3689b92ac382083720d9d144
b937c448cbde40f7b979a4b12625dba91992d7beadc1321ad6b7cc304b9ec719
8f21921a81efe3f04d7de3a0f4e17b06f060e79adc4d95fd55eea71d90030d7e
5fb56081de1ced153b18607a53b72239f63024c03bfcfa59e5b6a91be392f896
f85d36f0e2628ec9e9e43a12ff1b213ce1b750639e1818df1ea440f4c38b24b6
1eb3c1c44df93875b61fdd3ce5f1b2e7ca61d1e301d690cd01f5d242534ab3a5
bc84fdf2e42ea316148b8fc5e69400af0fdd564d1932a35acf76d5e7febc3524
0b6e741f301011daa222f68a63ee8e76c9f617399fb884423e93c1b159861281
6441edbef4fe80e1fef819822c514937f80f603d9c838c104565068c9e4d0b67
f7bd788e47e22a6c4c224768704cd500c14e15f434a9c24b7a677043833e96d7
b9ead6fa1472d52cc7e23bbcbaa79c814a56f4448c20dccc5156e8a9604527ef
139a013b2a847aa7f416a4cc280c44e168df8a62fe1bdc32e170c52769e73e84
867705ce7799bce2978182e9d392a5c5d775c6d6be233e9d4931028a350d4083
7a1d49498198f540af0ba8c93bd56457aff81bb876dab4e80f700dd873aadc2f
d9182fec852c279b5e9867891b6158ff5fd1d6e9537a3ac9de73b9dc5e3ebf27
e6eb7ad6a836a15eec1f3aa541cc4064d6c6dc43c7e2b8121cbe6e1434827e62
0b6d8c5c093c7b2e848d1fbc37c7b6e668d6fa7e315183cf8ef7622b581dc4cf
85dfbeb5e1f8cc81723ba8068952ad04e9a6d41d04adf026348cb8f7a721d58c
6cea499445f611b72a7c81fee54108b3bbda238d9687f8d37c6d61b525609c7d
7725f61dfa60498f91d0a008a2da907040f74b0bb8cac1877284100532f5562f
2e0065ee0ab5c900af1bef98c9bd74481e48ec9b150177929b42cdde8739d088
1765d148140c5a10a96bb2f31ecacae3f78f2ec719f4e163b45ea32607b737ed
4a807b1505f3bb662848103ed16136026edd5cda2b7c633b6fd542eca4db4960
e8d9cab0a0821830f7fd6f0159c18bb309c2db136b6414e99d876033b43142a0
418b43c987ba5d5054405be3830b16c8f1df14a7f4fdc8e71753eebad88fcd32
a04b5ac4dc02a7ac37a87cc3891c413295d7883e6fb3a62cc92b7969b69820a4
11c552c5af83a7a6eab1320376cf95fd33646ae9362afd6305e9c859eb53517c
8e973caf7863cc5bf4c7ea4a3b3cb5a0d18c33e653d29b77ec8bddc85b2d1034
21c97c2b0eec980ddbdd1421c423123a96b4e3566e98d0410299171bdf3a1b44
522d494feb586f22532f8de4ffe76266c3159506e061746db367157b25ac55fd
a713d67e084bfbb3f8446c8fe282b395ab19cad2a658a713b6cf71fe46ea6098
4dbb40f6b0bf04223546558e5c60dc77da9eac6e56deb47891afdd064c2d465a
e0f39be9a6a3baa7a6dc838b99cde0e03692950ed5e2e1234c8446c27c7c28f3
1a97b507f283a142f93b965d0659478be25879dd9668cf39453cbc894b6ddace
3f04edaa283c34f4788b8d41a4e332ad6cb25be376d3311e5e41ac1d5ad29a83
95cac7b72fc16d11039e7b78ad6f563d60618123afdd11553818527033f8bd82
6ac2cf67806c57b0ca50c1291fc5887c8aa66bff2efba4d212bb2d4fbc4a4e7f
ba5f7b91eeff5a9ce1ff83a0ef761553c8cc839c1ec3f747efa8b50ffeb73d52
b8ea017d8d0e80330ba9f1a86c27df67d154ffb6d3c82bbfe6510e9a0a1ebeb9
9a8468f127bed31a790209681ee0fb15e9f3416070601c15e5735d3640af10ee
955485bd3a7d73913cc8da0e5253c5ef62b56aaa381bfcc03429ae191346851d
256c2ae6ba6930507e917045a514992ca79b19bbd558b03f13e1f7050dc052f0
b23f66cc80dd336558c1ffc39fcc655360246aa98c74767de0601f6f5ec90972
a9e46657f39e9c17e7f69933ec9e5801f28a560a7ca409b88fd9389ddceead1d
386eb45d1d5ebbfc7b552c076bd85fbeb93266855073053eb912d3cb0214bd62
99aee7e5c33968c6ddc1be449ece90895c268b53b4360bf93f0bec09067d2a97
68d97f16a1e713ac52c6eba53f80a0d5af2d70d57f194bfe8d02685782b6165b
25106c89ebc6d0d6241b30c7eff090d0feaa40343cc2e8e580342ee326924bfa
697319087e93bc9838c7852f84aa09a1c3bb5906ec976b84ba89f5cc8d694120
d07de3921e4ffb7dda96dff48101037931007a73fbb276e641b8d17cb7061e1f
ee5c64d5bff37aae76f5cfaacc329f53a320b97871b44362f233e42507f368a3
4d3b17ef84be179dbd5ca6e9b2a9e38f85752af82b2b07295b7dbe81a3459e9e
b57b024672a44724d00c0d23c707322314f9678ceac37c65aa97de3ceb4dc506
9e6d4beb036137e00c76ceca0aa8638d4852568a212459ad152c95b9f69d0fe8
683b59bc70c50d9f23b5d6e9e3ad1e2bf26910304ab7c294315a807fde475487
d90388d5384d46f39b0a0a0a90d458692889af44ee9e5f1741a910bf3939487c
57b904f69378db36cfa4ee90016cefef0fbf2d5d8b98717e911d4d93f5ceab5f
045916833d2dbb1592dbc38ae22e72dd7445bf4470763f087c4055d5ac72866a
7af98b3d03424e82400f9ac9854bc15894a80ee27738945982425a1a20237261
6a426bc93aef17202eed7421dfc89558d3e9218f59ee484bfe170f1cdba8813e
5f4a682cecca52a3069dc5e83ae9d331ffe73cbcfa90db54b6cd4772f84c6515
03f1825e99c2432f9cb651b885d1fb7709fd21f79a6eaa35f9270b1db0d62770
c57bbeec253cdf431d2124cc9f889041661eb96c4594193d7afb3029d0f6a630
6cebe60db2c6c5243067d54339a0053d10cea678e1533038a0d31f43bca65227
4dbf563f111bf0f5588d053d2978ae0fd4883c8eaa3aa27a7bd9e190983d0fb7
b78381383e208ef3d7da8dd5086784ec9c56115e54e8aa00970cc7a4fcf70fcc
967e51bc626e2791ae34733adcc9a467362fcaa616be24969b66b3dc31841d9a
14115f333130ff59dc87b71a3dc559163d18d7679da07750454967ba0fd49997
4fb2c56f450e0696dca34a0c7b6598d4eea6f9b8e0304baf1683219b46655d95
3c74266027b13e160b8b124a68f9866f2be6eae2e99b302c0fa00185084f586e
807faadf4e318e1490c1e9d0c9841d8c7579a76c30c8ec416e2f5265363b5884
749e7b31b25777e1b620308bf309452f22498e8af621edcd88289367972bc416
0db05bfe8f6dd1932681119e2bdeaf8d73c3f791b90e3062916210f711dd6262
78d511ca062058f78589800bbbc34c3051896bd768e15f293c3937518ca02ac9
ff416aaa2ff4a3c9cc4ff4893949c8d6a0d0cf34a77bf8478dafe5b8e5dabf3f
2e333021fe4e14d931b44e3c1afbc0093e6da538a618c0e40c3e072dcb7f0e49
f3922e03b2f2c2c682157a9bc0c9d0a624332826db605830f04c31b5e56bbbba
9c1d99f257e326d6a6f83848489d57cc60abebd6c969be5be17ba339f8479313
d4b371d23cf5ced555734cad0ad5e2c61dd830ab8c79d6b3a3ef4bd899e80d14
2cbe980964e0cf468427c4efc0bb40424612d435a18657f10533cccc6983e73b
c18862ee9fd469d250c2d930e7c943e97a5d525ccaa39f49488cbc30c02c4195
427a903813792c32bb0c7acbfa0224664e4d81483885e07ab7da94bb44e72623
b0ba32dfd8a04a007d82e71eeb58aae08448470edeea733026dec5e1d159541a
952b049afecbaa0c01243141d7bfae334c63723a1904ecaea5b8c6a4ef9494e1
68f9674468fbb8fa661107889cd932c5a40342263902fcf8781e610d06382db6
dc29dd191dbf0102d1a0ae9ef49a3a365d49ae75843eec14fa5d0ab8e8785392
c6dfae92608f0b5a361a7a28c9953c4b30605a635749cc2beecc7a38a9bcd1fe
a4f0e8edca76e0f1295c6cb0e80a77ed6d629889111a7a6052d28f42e880166c
7367370c21656af10795da3dba6f82d31521c6c0c5ee196d714f3188779c61b0
7f82e770adfc3c70560641a587
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 48 /prime put
dup 50 /element put
dup 68 /D put
dup 83 /S put
dup 112 /radical put
dup 122 /daggerdbl put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueXX 5000816 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b6a18979f258b8c6ed3
ccafbc21aca420c9c83eea371adc20e038b4d7b8ac303004b0aa205f04135140
76407216032fdd22e6219da8f16b28ca12524deb7bca073cc5eba65c102a5e85
fd48e6d062cd4283ee570a7774597e5bf0e3400b6be72db0115f3cb12db70ce0
83722870cddfadee715f10f1fcaf20e06f3c54afe5ca238539bfe2b596116e83
f5371ff18fa5003d8543226cfd4025f9940365b392a858d27f078d3abcffe4a1
54e78c7692d1a32bf935967c64f01b24788ff8325d61145e2d4a489fd986fb77
38e6b254522c77ca2797a504a9ce4676a77ebacb026eca94dde5922c936f8e90
c43e28519dd651f01d5a9d75c77408441f594c3c1610cb694cdc3ec0bdfce4db
4c1df652d0d618f364a911ebc9fd6ddb118dfa8973cf9f90f3a333adfa839ed7
b03672d24f104bbb3a444738520440875ea13c9eea99a7e296607e56471b7ca8
e58199ab9396240f5d772e1e75803db7d1d11fcf655a236088b5f8e4f9a0df63
a31bdca9ec5acea9eaef1a9b69d8c6f6f26f424c0c0819c14b24e5ce6edfe375
63ab97a17941a5ad185faed46eb0270cc0327d825bb3f946e5fdd7823d2005e1
2f4592fe0f0e75114a39989770045ae5ab17cd5c4d4132bf90c3acf5af28ad82
a32f5e016414b45276b58f3bd0f4ac4dccf50d2f1ebff3e72fe01311f2f3947b
b27454b7fb185082dabf84d64cb4141bcb2743f86f0b1eaed1cab4978b42e58a
61d35ef6a63d32d6abc7249b34f56921a576d49df68e1bae52932bb59aaf67d7
6e56840d074d76a31b2a88dd7a731c7d46008e15f685df930cd63c237553c059
c9f540db76c64810d00fdbe8dfda49952fed016455293b1789e6e81389edad90
ec8643c18b93c14a9cf243929d0b37801a231fd91f286fda95dec2010ccae504
c27209ac128b7d29d2910ce6333b900bf79e635230afae2307f54fd3e8e41e07
b84522ec0de696a2101ad9451566f122103dc00cd52133ab7d6b29b2964525ac
dd5d2e14db66948e34f9a38a9c55f4fe98aa17b2d58f190d9d4489ccc9e8219a
b2784a2c007b10c856d19820035332b27b625cd1188e4bef9603d8ea20be2a27
e583980ad8df5b80344d5cb5498bad0fdc2f290551b1e05b415b3ff8fc4f2bab
5c54616d50c6655b62037bbb386f0b5b3e0d066462f264af7de6098c56ae6877
918d76680d630e38cc7aa9de2047ab9e62cf6b14130ae5808e8d093c41adbb44
3ecc9ca0be7d3ab6320ee94debc2e333a924ff9ae0277d09cd968b6e27c46667
e23f566e63f0095ea7ea5b44e76e8f869812530cb0aebd67dc7627b1d3b05b3b
1044ec365662c191bab08a8cf0c15c41e33969d087dad60f64a5fd4c47b4e8e7
44996a414b27b829b84fd82228f43f3d67e86b3fbfc9b02085a4e26c6e89fb17
5e9d6394a8c76e4e1e5139a6e0c087a0fb02076910a94d4198e2234f45f25bf6
d2a9c60cd4c6d74aca7f99454c2f23a16697eb5e1415309235fe225e04064792
e4a52f7993f17b04facc4d2870abfa72bb8fc04619345068e912a92ef0b90362
3314f6a0c516c7f968277c4b2ae19db8ae65b9f962825df1e6ad43deb4b7413c
9bb5476bffc9159a612b3af7e0e591673471d879a033ef7c1c708c827d22b661
bb84b447e5403003ac65a167a57cf31458992a444c932eb085c4ed2701b1ebf5
6cd409a4ed3a69a532b98bda6dae26a095377725fadd3fa538709ea1fe9a8dbd
6eed9b103905d5c414c5b595a46beb9ca6ee0823ee3758d4970324b7a438d163
506f597257afee107a672d63107d1d7cda11eb8e8678f9a98765bfc1bde7f18f
d6526f06e2386e6b9f75d22373e57825e4ecfe3c337175e15bb15083f8d23d8c
bcf59b1101d2ac03a37569a12ca1e2558b45d04cce6e950fdee78f05af42ce2b
4767e84b2e5caae349ae89bdefa488fad56888206d5bc388d716eea029b08409
d32e998562a4bb66b42c164d762d173b9d92c50443c9596f4ab302a6b86cf308
90ffdc53c62861c741e746ed3f4cf2db9a0e5dba469a9c2865c9452a25617861
1b843ff023fd508812ebf727a741420f4c8d88938dbf9909eaeac6d224971c0b
fb5e61c569eece0781207c6ae86e1981d5b99cbf56a27253dbc5b0e33bfe0026
c621d22b2f588f8ca67f00788bcf8fb9bfeb2cf7c5f9c763aec488e0eb48c3f0
097fd66c36f60f4b7f54d32ce308ab466d68b18d3eeb2c8b5ac8f1bf5163cf6f
c191d025ffb1fa5e7cf17bffd07dc0ded00902742a6bda79f2f30b07eb8f4cd1
7db67f89e13a6f94a106e72535740a35d1b7d4aeefc81e2ecfc652cb52e62c6e
bfed97859b5e88bda3198983f632f0fdb5ceb0ae141c115157231a089f60babc
cb72d6d1880ecde4e5f7bc684be071134496235416008fab57083bcfd7cf182c
676bce2e5ae8441e9fb518789ee9697a704ec7a9d9ad80a49b94a2fc02318c3f
44282f3e2bfb29b027a60ff1e17c01ee25ebefd653b71080af0aa0a240ceba67
47e0bcf85b6f00d353f0703036774ae6a0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 18 /reflexsubset put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 32 /arrowleft put
dup 50 /element put
dup 54 /negationslash put
dup 57 /existential put
dup 68 /D put
dup 70 /F put
dup 83 /S put
dup 92 /intersection put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 112 /radical put
dup 121 /dagger put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueXX 5000819 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddc63eb43f34fa90ea73a234af35fd9b24eb7
4f19626e9124df7acb92629cc87b2cf81c4a89b27447806db34393ddf0402958
e2daee0b4bf315f9aa0a2650d2e11ee289ffaec940d0af160fe7f29411c1c458
69d1ac3bcfe2ae4da72422549095f1fc9fec606289316f106e719a4ae2fd45ee
868fddf07a80e9a626bb43cdfdaa9dcd208b88fd99af20b27f9d6b5cda6a3fa8
8d5acfce8b5eebb38854378cecc3bfdac526514f1be9fb28ae628918ba942a3e
05b78c3aff808cf416a5ed01be280231b75a7aee0c66b0549713bef6b3cbc188
e625ba81b11cdf50aa1a6a2e5451980c83e46e746b1a8d3f7be5f28a78ae6092
9c06079ece426e936e6f5ef309c2ae85199bc9c8177c58e1bce0db9fae18551d
24a03f2bdbc7f8d8e0d2d0796bbb3b2e57960e115cf13e4d5460a3fd3eb69a68
0e096c20aeac14e95f40ffdd83c54268e1b9727932af98aef2a4273dce3662f5
2642c48034de38f7e4f90b7e513061a98c799aa365ef7b692295d0dcfa1aedab
b534822f97a1679e86ad7adbb537f9194a82e939d1e5ce380a5cb77a02b0e0d9
2f4fd0bd7857981daf562c1d920a275944f2f293b8e6ddc6c1f68ccd1f7f62df
59303a9e55d9d8b8d1679c48a5a9178cdbaa8f1c8e6b5ac3301df1da303aecd3
0d3a87ddc971faa4d8577b7729c00af16acb89c566d683e2c443587035277456
caf61b36af791242c4c08a1b6316c8b525dc6cbd658d0d4d4b16399c5496feb2
a413e32a818097569c846e52e213b09fab2352d7174cca4bad5579b1b294bf8f
dba0e8dd2fb06acef7fd9709e3c422621af23a1ad90de04745e5f4875cecc277
705621eaaabbd9244340d5ec65e9a2f75d955d7977d3bcdc38d47b46b3638a7b
ddf965ebdc25bbd8eda2108465be8bf91e00424b13ff211e4a30a84efebfa4e6
a29d979ee4f2271f6cf4012fd6ec2a45b597746dacbd399efabbddf1c9d0f59a
cc2fbe1b31edc43dc7a3aa3d29294d15cbbed73e4f87e88c583343b53d638aca
30aeb9e9de2105c7a3a589c6c3c255b7776cc68f1735dae44e9a43e11eb96c1d
38b066efbad235ea8f139e6259b2738c5a42e5bf62b7df4a8d7235d9b57e7672
3f652d71732b94e8c8eca127e9a129777ff7e793df29c0dd70e416b381436c92
be957d9c12891778a70754be86895186a778899f69fef8fcb39b97210fdee451
882771b1fd8ae40a174f61dc6ad46a7dd0173948de181b8fad24dbc224505eb9
c3153851e4d79292b7196c1fa03656c86c341dd5780f62368c7a76a5cc3a708c
d8560485461296b59f56e41520ad5d09f905eddb91dac59e826bf5656ac29dd0
0fe6a130fe71c96eb465fda14ae0de35a998259d3f4c39c5f830a58f83433cf2
564c21d31d2c087dc428b44cefe965787259a7168484426c1486dfc1ceab8be3
a9e44b75683dcc76bd24cec1660dd32901a4e43e1ac9ef720d71da02f2257b2d
e8b849efa9dbc56c1a12389a2050cc456c03f50e64c09315a6c4096a23216c00
62f727019d4d23ca57c2c83aa2559143d666cd23455c67553309f9bda423cf14
b75f0f5a7cf532b338fe56acbc99154db4bdd1d17855709d9ba769532a5ee748
0d26fdf5f8ca66213a6100c17671673e5f73a66c9ae66f45f9ddad1b07267139
3809a83dddb163f28db55d15da10f1056b82dad51446675dfcea5d657aa29da4
8efba295340f766a58c1c4de15ad9319ec82706b9cfc24abbadc22c3d16c8c0c
066722e39ca4a41e534a71c000ea1a73f74c7ac3a19aded193396efbe4917258
5a76adc517f341aa16cf6cac74f06cb1f2c3ac438a2f836a7295169bff2880b0
1796b0aad17c0a2c5cda20a345a0812147f4b7275fa464f1c4b941c2eff8c5a0
c940322307b1ec85080f4899b98717d5a7482c8afd260da1c9a42fdb521a134a
53bbb82bba2f95fce08a9ce9d833e0ee773295c72db5b3470132ed2932376452
9bdde0268118af7ede9cb31d42977a43727bbdc643c9bed026180b3a443923ce
b41f9bffb5ba837b4f3392b8cea3fad00c7db4d9e9572e85012f175025795d15
25040924b32d5b7f5ea52dd975614611af267c5114f7e3bf05ff7a52e04c4a4a
5fe148f5fa962a8f6ec3246b1e185cb90b9b55086efe39b6b38f253eb5b9c48a
9e3bd751062da7e87a92985e4806c1e2578c5cf172e81f03fbfcdb3dddc3d1ad
2e1164d4a958d7c298d638b1d344b8f0c43999c1c80b23c6c6c7d1f5073da543
6f7b660b6d66b2a52f038f15eb424e14bb144be1d50f324460b53e1d78ec64f8
e272d381b78ccddcbcc107375cf5407d202e1d6a79e78be2babdbe3b73d2a0e5
03fd867631265b3721f4bdde8ba9401d661b036e0339c440a302b49ad477f80b
b9d78b30d34662aff04cdeac134179cbbf8f62315f8830e676772a52c07b0c7d
ed8edb1022cc39744567c194d951cbe3367dd01e8892312c15646cb96e3e1b89
bb68997979d50e41af73cac8944ed8f22ee90916d9b15bd0275515e4a74067b4
32baec0568e59a7cff88d1b0b0900d220d8d5d84d42de94f41693c798cb49984
25152c6e27757ab4c47156467363a371ca5d70b7efc069e80e671c549ab68768
7448bcbbcb7e5d22c10252b53f8afcac9860ac44dcc2db2fc427eeece3541d24
70ef2c5b3c94472f3ceb3bf3e14c3462712e21dab65cce8a0273669e1f596705
38d33907a00e5aa4e08ec541ae92794c98bd9b133d7fd8b10cfd078ae8037baf
65bfedbca1ad3589661fed756ba74225d765875c56a5d75033a85aad630c2258
2dd154953c19c66767ad45a03bba7750b322123ab48c57658b5cadd97bf73b9c
6b20fb0fc8e2aaf807bbe8544c53aef18f2e9751b9cd2ee9b45df23a4164bb9f
99aa8bb462cf862357ef989306c80f20369285cd294455a6c5ac4fb9fde171fc
c395a74b9e7fd7b6c9345c6c2483095a7a2a7c98d7cf0a77d3c831b1da1d3dd8
eb02306ae07b06499e7a56554d0235fbb530c91ef382e4663e7ab69d810e6e72
19e31798e5d1db23954539e4b695ba2daa7e93768ee61bd248c92dd84c07475f
6228113d1318ca6966fce26da54ab3fcf1919274be4fc3ec6f87ec0448ac1b2a
ad5f44e49467d6cc7bfd503e691e7bdd1ddb3f75344028ff5cd2e10f767dea92
bd4d0db4fca92f88b947fc5913fabcaf2cf15c01fe72e5c74f765bc9764ca426
0c377bd8f9745500558854ad23a691e35dc5ae6a3f6a22ed543875f5149f4e04
fd15027d08803292b7840ccd3d1296750a3af2a22a1cc9733adfd8871bc4b63f
eba8e6bd30a2c8a8016d7075461b7542ac530438181a1dbe011ff4bc3d9c483c
5fa1e5cd0b77d0fefd8f3568ffc71884031a28595959a4285ab9b42283f9cb84
5153d34218353c9cb297beadb72503fcecf8bc2f3152c5663f0ef24e728f22f5
a71c4485c5a7387ffa837b6070391ae95a3a928097a1e494064ed4ab413984e3
5c99a80ae002057ee6e63d62c5a17e866fb733984c1f460151d2a6818982bd9f
552b6b30aa5b6a4e1acd5f434c7fd686b58a088d1abb79a31d90259549ec6314
aaee7185ed83e8e6832cff38dc5351ae615542cbf788678222ae3c833dbc001d
dcd36c1bc5cb7721a924bf3e111fd2d4c875acd64bf3f94d3688c9116e97f1f0
2b91db6f4c9d3ac2321cb94395201c48d87a4a84f9463604de6bb83090f6b8ab
e3ac25fbd5a2a2ec74b8940d4df697589888b12aac005bae7b643cd4f3f81522
69822c4e7ef1a7df99bd06bdec28294e14a2f9419c41fb323ad069d210395ce8
be191dcdfcdc0f30d6798a87bc75d693f8d47c88e308a0a1cb0561317074d526
af0dd75c20ca96c150112eb2514506dc253bead15c9570730ffbac47313ce4b7
7f99dc42810854755b5106f0f75bee32e8e983a003cc72fce11dd3a6a97d5a05
846d13f6c2d6c92e6832307a64f48b49b0ddbdb9760f008d173ffd125c464335
7979e171c7e54721bd479b0776970e9047925ab005de267f3cd947db087a1144
f5cc2f8de45fbbdf61059dae8c2469765df799167fc21fa8cb71037d74127c03
ebb10a1e3c8f2f45414c6d6c1fb3fafd02750f2af6620f1e7d3f188ea67117cf
8e68a483c9708e07b34213ce3d89adef74d118358612dd2a69b337ad380f96af
e304ca2b5e61475bfb0feccda5744010d595242a289f392852b0137360022257
32f018825af523bd691dfa0d8f88450206026a3c937f92b53e48c8c139037d7c
2d200b0b699106ad605b3968e5ee13224b27e6708477cbce2295d47d52095d8e
24ec040f7cd2fdddb92a4411984db76d46c11191edca87aa115d51fc9ac3323b
930fba7b23a0c5fd2466e0ff592f419a9f5ac2f0b6d80dca5fa1cb3883d90a51
87355cd6b6b57e67694b30408a65e1fd4cfc31a8d3bb30c0b1de1b23d8833c4d
ff5468350be45a46c75654cd2d87398c3e3b7abe162429dd771744ade5b6422a
854b81df574c763ec293f67d4dd489f812323908e705e8883c54bb7b8890688a
69087fbc62fbbd861f1d8a6c59e6fdffce46b556df0b6d290eaf05b2cade8092
dfce278ed0a4e6d8f98dfab619e7b711f77578ff25079204c87a60b6659f4f2c
478a9238a048eb3c64f1c081d241c7adb136b57f0002a6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (p235-fakcharoenphol.dvi)
@start /Fa 141[45 2[47 1[56 4[46 2[42 16[59 84[{}6 74.7198
/CMCSC10 rf /Fb 205[28 28 7[22 22 40[{}4 41.511 /CMR5
rf /Fc 137[30 35 11[22 90[27 14[{}4 41.511 /CMMI5 rf
/Fd 167[111 7[81 80[{}2 74.7198 /CMEX10 rf /Fe 207[18
44[31 2[45{}3 41.511 /CMSY5 rf /Ff 144[30 34 1[18 4[30
41[47 8[30 30 30 30 30 4[47 1[24 24 40[{}13 49.8132 /CMR6
rf /Fg 135[35 44 31 37 1[29 4[38 2[33 25 22 3[29 32 13[36
1[36 4[47 19[19 44[28 14[{}16 49.8132 /CMMI6 rf /Fh 171[37
33 3[48 11[44 15[33 2[33 3[17 4[22 39[{TeXBase1Encoding ReEncodeFont}8
66.4176 /Times-Italic rf /Fi 82[22 22[33 28[33 1[48 33
33 18 26 22 33 33 33 33 52 18 33 1[18 33 33 22 29 33
29 33 29 11[48 41 37 2[37 2[59 2[26 5[48 44 1[48 7[33
33 33 33 33 33 33 33 33 33 18 17 1[17 41[37 2[{
TeXBase1Encoding ReEncodeFont}48 66.4176 /Times-Roman
rf /Fj 134[37 35 51 35 41 25 31 32 1[39 39 43 63 20 35
1[24 39 35 24 35 39 35 35 39 7[57 4[55 43 56 1[52 59
57 69 48 1[40 30 1[59 50 52 58 55 54 57 6[24 1[39 1[39
1[39 39 39 39 39 1[24 27 24 2[31 31 1[59 25[43 12[{}56
74.7198 /CMTI9 rf /Fk 134[47 47 64 47 49 34 35 36 1[49
44 49 74 25 47 1[25 49 44 27 41 49 39 49 43 9[91 2[62
5[69 84 6[56 58 68 64 63 67 5[25 25 6[44 44 44 2[25 34[52
11[{}40 74.7198 /CMBX9 rf /Fl 135[44 55 37 44 1[36 35
3[46 1[23 40 31 26 3[36 40 3[32 9[45 1[45 47 3[58 3[65
2[64 2[57 63 1[58 58 2[60 38 60 21 21 27[46 4[44 3[45
6[34 1[43 49 11[{}35 74.7198 /CMMI9 rf /Fm 131[77 38
34 41 41 55 41 43 30 30 30 41 43 38 43 64 21 41 23 21
43 38 23 34 43 34 43 38 3[21 38 21 47 58 1[79 58 58 55
43 57 1[52 60 58 70 48 60 39 28 58 60 50 52 59 55 54
58 3[60 1[21 21 38 38 38 38 38 38 38 38 38 38 1[21 26
21 60 1[30 30 21 2[38 1[38 20[43 43 45 55 8[64 1[{}82
74.7198 /CMR9 rf /Fn 133[44 50 50 72 1[55 33 39 44 55
55 50 55 83 28 55 33 28 55 50 1[44 55 44 55 50 9[100
1[72 66 55 72 1[61 78 72 94 66 78 1[39 78 78 61 66 72
72 66 72 11[50 50 50 50 50 2[25 46[{TeXBase1Encoding ReEncodeFont}50
99.6264 /Times-Bold rf /Fo 133[29 9[50 28[38 14[48 17[42
1[18 44[32 2[48{}8 49.8132 /CMSY6 rf /Fp 134[42 2[42
46 23 42 28 1[46 46 46 69 18 42 1[18 2[23 46 1[42 1[46
11[60 1[55 14[60 60 55 55 7[46 1[46 2[46 1[46 1[46 1[23
1[23 44[{TeXBase1Encoding ReEncodeFont}30 83.022 /Helvetica
rf /Fq 134[34 8[64 5[21 2[38 38 9[51 8[47 12[55 1[59
10[43 2[0 3[51 17[77 10[60 60 1[60 2[38 11[38 1[21 60{}20
74.7198 /CMSY9 rf /Fr 134[50 1[72 1[55 28 50 33 1[55
55 55 1[22 50 22 22 55 2[55 55 50 55 55 12[61 66 72 6[66
50 3[61 5[101 17[28 46[{TeXBase1Encoding ReEncodeFont}27
99.6264 /Helvetica rf /Fs 134[83 83 2[91 50 83 58 1[91
91 91 133 3[42 91 91 1[83 91 83 91 83 12[91 6[124 10[108
108 65[{TeXBase1Encoding ReEncodeFont}22 149.44 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 769 108 a Fs(A)42 b(Tight)g(Bound)g(on)h(Appr)m(o)l(ximating)
780 274 y(Arbitrar)q(y)f(Metrics)g(b)m(y)g(T)-12 b(ree)42
b(Metrics)215 694 y Fr(Jittat)27 b(F)-5 b(akcharoenphol)1159
619 y Fq(\003)212 781 y Fp(Computer)23 b(Science)h(Division,)296
868 y(Univ)n(ersity)f(of)g(Calif)n(or)r(nia,)346 955
y(Ber)q(k)n(ele)n(y)-8 b(,)24 b(CA)f(94720.)238 1087
y Fr(jittat@cs)o(.ber)q(k)n(ele)n(y)-10 b(.edu)1666 694
y(Satish)28 b(Rao)2152 619 y Fq(y)1431 781 y Fp(Computer)23
b(Science)h(Division,)1515 868 y(Univ)n(ersity)e(of)i(Calif)n(or)r
(nia,)1565 955 y(Ber)q(k)n(ele)n(y)-8 b(,)24 b(CA)f(94720.)1401
1087 y Fr(satishr@cs)o(.ber)q(k)n(ele)n(y)-10 b(.edu)2877
694 y(K)m(unal)29 b(T)-12 b(alw)o(ar)3441 662 y Fo(z)2649
781 y Fp(Computer)24 b(Science)f(Division,)2734 868 y(Univ)n(ersity)f
(of)h(Calif)n(or)r(nia,)2784 955 y(Ber)q(k)n(ele)n(y)-8
b(,)23 b(CA)h(94720.)2648 1087 y Fr(kunal@cs)o(.ber)q(k)n(ele)n(y)-10
b(.edu)-152 1388 y Fn(ABSTRA)-5 b(CT)-152 1479 y Fm(In)31
b(this)g(pap)r(er,)i(w)n(e)f(sho)n(w)g(that)f(an)n(y)f
Fl(n)i Fm(p)r(oin)n(t)f(metric)h(space)g(can)-152 1566
y(b)r(e)27 b(em)n(b)r(edded)f(in)n(to)h(a)g(distribution)g(o)n(v)n(er)g
(dominating)g(tree)g(met-)-152 1654 y(rics)i(suc)n(h)e(that)g(the)h
(exp)r(ected)f(stretc)n(h)g(of)i(an)n(y)e(edge)h(is)g
Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\).)-152 1741 y(This)29
b(impro)n(v)n(es)e(up)r(on)g(the)g(result)h(of)g(Bartal)h(who)f(ga)n(v)
n(e)g(a)g(b)r(ound)-152 1828 y(of)39 b Fl(O)r Fm(\(log)15
b Fl(n)e Fm(log)i(log)g Fl(n)p Fm(\).)70 b(Moreo)n(v)n(er,)42
b(our)37 b(result)h(is)g(existen)n(tially)-152 1915 y(tigh)n(t;)d
(there)c(exist)h(metric)g(spaces)g(where)g(an)n(y)f(tree)g(em)n(b)r
(edding)-152 2002 y(m)n(ust)c(ha)n(v)n(e)g(distortion)h(\012\(log)16
b Fl(n)p Fm(\)-distortion.)40 b(This)28 b(problem)g(lies)-152
2089 y(at)36 b(the)f(heart)h(of)h(n)n(umerous)e(appro)n(ximation)h(and)
g(online)g(algo-)-152 2177 y(rithms)20 b(including)f(ones)h(for)g
(group)g(Steiner)f(tree,)i(metric)f(lab)r(eling,)-152
2264 y(buy-at-bulk)25 b(net)n(w)n(ork)j(design)g(and)f(metrical)i(task)
e(system.)40 b(Our)-152 2351 y(result)29 b(impro)n(v)n(es)f(the)f(p)r
(erformance)i(guaran)n(tees)g(for)g(all)g(of)g(these)-152
2438 y(problems.)-152 2636 y Fn(Categories)c(and)g(Subject)i
(Descriptors)-152 2727 y Fm(G.2.2)43 b([)p Fk(Discrete)j(Mathematics)p
Fm(]:)65 b(Graph)40 b(Theory|)p Fj(Gr)l(aph)-152 2815
y(A)n(lgorithms)-152 3012 y Fn(General)25 b(T)-9 b(erms)-152
3104 y Fm(Algorithms,)27 b(Theory)-152 3302 y Fn(K)n(eyw)o(ords)-152
3393 y Fm(Metrics,)g(Em)n(b)r(eddings,)f(T)-6 b(ree)26
b(metrics)-152 3591 y Fn(1.)100 b(INTR)m(ODUCTION)-152
3702 y(1.1)f(Metric)26 b(appr)n(oximations)-152 3793
y Fm(The)34 b(problem)g(of)g(appro)n(ximating)g(a)f(giv)n(en)h(graph)f
(metric)h(b)n(y)e(a)-152 3880 y(\\simpler")h(metric)f(has)g(b)r(een)f
(a)h(sub)t(ject)g(of)g(extensiv)n(e)f(researc)n(h,)-152
3967 y(motiv)l(ated)18 b(from)h(sev)n(eral)g(di\013eren)n(t)e(p)r(ersp)
r(ectiv)n(es.)33 b(A)17 b(particularly)-152 4054 y(simple)34
b(metric)f(of)h(c)n(hoice,)i(also)e(fa)n(v)n(ored)g(from)f(the)g
(algorithmic)p -152 4113 797 4 v -146 4169 a Fo(z)-113
4201 y Fm(Supp)r(orted)63 b(b)n(y)h(NSF)g(gran)n(ts)i(CCR-0105533)h
(and)e(CCR-)-152 4276 y(9820897.)-152 4333 y Fq(\003)-113
4366 y Fm(Supp)r(orted)27 b(in)g(part)h(b)n(y)f(a)i(DPST)f(sc)n
(holarship)h(and)e(NSF)h(gran)n(t)-152 4441 y(CCR-0105533.)-152
4501 y Fq(y)-118 4534 y Fm(Supp)r(orted)d(b)n(y)g(NSF)g(gran)n(t)g
(CCR-0105533.)-152 4873 y Fi(Permission)h(to)f(mak)o(e)h(digital)i(or)d
(hard)g(copies)i(of)e(all)h(or)f(part)g(of)g(this)h(w)o(ork)f(for)-152
4948 y(personal)f(or)f(classroom)g(use)f(is)g(granted)j(without)e(fee)h
(pro)o(vided)g(that)f(copies)h(are)-152 5022 y(not)c(made)f(or)g
(distrib)o(uted)i(for)e(pro\002t)g(or)g(commercial)i(adv)n(antage)h
(and)d(that)h(copies)-152 5097 y(bear)e(this)f(notice)i(and)e(the)g
(full)h(citation)h(on)e(the)g(\002rst)g(page.)25 b(T)-5
b(o)15 b(cop)o(y)j(otherwise,)g(to)-152 5172 y(republish,)g(to)e(post)f
(on)h(serv)o(ers)g(or)g(to)g(redistrib)o(ute)i(to)e(lists,)g(requires)i
(prior)e(speci\002c)-152 5246 y(permission)i(and/or)h(a)e(fee.)-152
5321 y Fh(ST)o(OC'03,)g Fi(June)h(9\22611,)f(2003,)g(San)g(Die)o(go,)g
(California,)j(USA.)-152 5396 y(Cop)o(yright)g(2003)d(A)m(CM)g
(1\25558113\255674\2559/03/0006)22 b(...)p Fm($)p Fi(5.00.)2040
1388 y Fm(p)r(oin)n(t)34 b(of)h(view,)h(is)f(a)f(tree)g(metric,)j(i.e.)
60 b(a)34 b(metric)g(arising)i(from)2040 1475 y(shortest)22
b(path)g(distance)g(on)g(a)g(tree)g(con)n(taining)h(the)e(giv)n(en)h(p)
r(oin)n(ts.)2040 1562 y(Ideally)f(w)n(e)g(w)n(ould)f(lik)n(e)h(that)f
(distances)h(in)g(the)f(tree)h(metric)g(are)g(no)2040
1649 y(smaller)28 b(than)e(those)h(in)f(the)g(original)i(metric)f(and)f
(w)n(e)h(w)n(ould)f(lik)n(e)2040 1737 y(to)c(b)r(ound)f(the)g
Fj(distortion)i Fm(or)f(the)g(maxim)n(um)f(increase.)34
b(Ho)n(w)n(ev)n(er,)2040 1824 y(there)k(are)g(simple)h(graphs)f(\(e.g.)
71 b(the)38 b Fl(n)p Fm(-cycle\))f(for)i(whic)n(h)f(the)2040
1911 y(distortion)27 b(m)n(ust)e(b)r(e)g(\012\()p Fl(n)p
Fm(\))52 b([41,)27 b(7,)f(25].)2040 2085 y(T)-6 b(o)23
b(circum)n(v)n(en)n(t)f(this,)h(Karp)g([30])h(considered)f(appro)n
(ximating)g(the)2040 2172 y(cycle)30 b(b)n(y)g(a)g(probabilit)n(y)g
(distribution)g(o)n(v)n(er)g(paths,)h(and)f(sho)n(w)n(ed)2040
2260 y(a)d(simple)g(distribution)g(suc)n(h)f(that)h(the)f(exp)r(ected)g
(length)h(of)g(eac)n(h)2040 2347 y(edge)h(is)h(no)e(more)i(than)e(t)n
(wice)i(its)f(original)i(length.)41 b(This)28 b(ga)n(v)n(e)g(a)2040
2434 y(comp)r(etitiv)n(e)f(ratio)g(of)h(2)e(for)i(the)e
Fl(k)r Fm(-serv)n(er)g(problem)g(\(on)h(a)f(cycle\))2040
2521 y(that)31 b(had)f(motiv)l(ated)h(this)g(approac)n(h.)50
b(Alon,)32 b(Karp,)g(P)n(eleg)g(and)2040 2608 y(W)-6
b(est)19 b([1])i(lo)r(ok)n(ed)f(at)g(appro)n(ximating)g(arbitrary)g
(graph)f(metrics)i(b)n(y)2040 2696 y(\(a)31 b(distribution)f(o)n(v)n
(er\))h(spanning)f(trees,)j(and)d(sho)n(w)n(ed)h(an)f(upp)r(er)2040
2797 y(b)r(ound)25 b(of)h(2)2402 2765 y Fg(O)r Ff(\()2475
2728 y Fo(p)p 2525 2728 357 3 v 37 x Ff(log)12 b Fg(n)e
Ff(log)i(log)g Fg(n)p Ff(\))2935 2797 y Fm(on)26 b(the)f(distortion.)
2040 2971 y(Bartal)d([7])f(formally)g(de\014ned)e(probabilistic)j(em)n
(b)r(eddings)e(and)g(im-)2040 3059 y(pro)n(v)n(ed)i(on)h(the)g
(previous)g(result)g(b)n(y)f(sho)n(wing)i(ho)n(w)g(to)f(probabilis-)
2040 3146 y(tically)29 b(appro)n(ximate)f(metrics)h(b)n(y)e(tree)i
(metrics)f(with)h(distortion)2040 3233 y Fl(O)r Fm(\(log)2230
3201 y Ff(2)2277 3233 y Fl(n)p Fm(\).)35 b(Unlik)n(e)24
b(the)h(result)g(of)h(Alon)f(et.al.)i([1],)f(Bartal's)h(trees)2040
3320 y(w)n(ere)i(not)f(spanning)h(trees)g(of)g(the)f(original)i(graph,)
g(and)e(had)g(ad-)2040 3407 y(ditional)c(Steiner)e(p)r(oin)n(ts.)34
b(He)23 b(ho)n(w)n(ev)n(er)f(sho)n(w)n(ed)h(that)g(this)g(proba-)2040
3494 y(bilistic)e(appro)n(ximation)e(leads)h(to)g(appro)n(ximation)g
(algorithms)h(for)2040 3582 y(sev)n(eral)32 b(problems,)g(as)g(w)n(ell)
g(as)f(the)f(\014rst)h(p)r(olylogarithmic)i(com-)2040
3669 y(p)r(etitiv)n(e)24 b(ratios)i(for)f(a)g(n)n(um)n(b)r(er)e(of)j
(on-line)e(problems.)35 b(W)-6 b(e)24 b(should)2040 3756
y(note)33 b(that)g(the)g(trees)h(that)f(Bartal)h(used)f(ha)n(v)n(e)g(a)
g(sp)r(ecial)i(struc-)2040 3843 y(ture)h(whic)n(h)g(he)f(termed)h
(hierarc)n(hically)h(w)n(ell)g(separated.)66 b(This)2040
3930 y(mean)n(t)29 b(that)g(w)n(eigh)n(ts)g(on)g(successiv)n(e)h(lev)n
(els)f(of)h(the)f(tree)g(di\013ered)2040 4017 y(b)n(y)e(a)h(constan)n
(t)g(factor.)42 b(This)28 b(w)n(as)h(imp)r(ortan)n(t)f(for)g(sev)n
(eral)h(of)f(his)2040 4105 y(applications.)2040 4279
y(Konjev)n(o)r(d,)37 b(Ra)n(vi)d(and)h(Salman)g([34])g(sho)n(w)n(ed)g
(ho)n(w)g(Bartal's)i(re-)2040 4366 y(sult)32 b(impro)n(v)n(es)h(to)f
Fl(O)r Fm(\(log)16 b Fl(n)p Fm(\))32 b(for)h(planar)g(graphs,)h(and)e
(Charik)l(ar)2040 4453 y(et.al.)20 b([17])f(sho)n(w)n(ed)g(similar)h(b)
r(ounds)d(for)i(lo)n(w)g(dimensional)h(normed)2040 4540
y(spaces.)73 b(Inspired)38 b(b)n(y)f(ideas)i(from)g(Seymour's)f(w)n
(ork)g(on)h(feed-)2040 4628 y(bac)n(k)33 b(arc)h(set)g([45],)k(Bartal)d
([8])f(impro)n(v)n(ed)f(his)h(earlier)h(result)f(to)2040
4715 y Fl(O)r Fm(\(log)16 b Fl(n)d Fm(log)i(log)g Fl(n)p
Fm(\).)33 b(This)23 b(of)h(course)f(led)f(to)h(impro)n(v)n(ed)f(b)r
(ounds)g(on)2040 4802 y(the)30 b(p)r(erformance)i(ratios)g(of)f(sev)n
(eral)g(applications.)50 b(Bartal)32 b(also)2040 4889
y(observ)n(ed)f(that)f(an)n(y)h(probabilistic)h(em)n(b)r(edding)f(of)g
(an)g(expander)2040 4976 y(graph)26 b(in)n(to)g(a)g(tree)f(has)h
(distortion)h(at)f(least)g(\012\(log)16 b Fl(n)p Fm(\).)2040
5151 y(In)23 b(this)g(pap)r(er,)h(w)n(e)f(sho)n(w)h(that)f(an)g
(arbitrary)g(metic)h(space)f(can)h(b)r(e)2040 5238 y(appro)n(ximated)18
b(b)n(y)g(a)h(distribution)f(o)n(v)n(er)g(dominating)h(tree)g(metrics)
2040 5325 y(with)31 b(distortion)g Fl(O)r Fm(\(log)16
b Fl(n)p Fm(\),)32 b(th)n(us)e(closing)h(the)g(gap)g(b)r(et)n(w)n(een)f
(the)p eop
%%Page: 2 2
2 1 bop -152 -69 a Fm(lo)n(w)n(er)26 b(and)e(the)g(upp)r(er)f(b)r
(ounds.)34 b(Our)23 b(result)i(is)g(constructiv)n(e)f(and)-152
19 y(w)n(e)f(giv)n(e)g(a)g(simple)h(algorithm)g(to)f(sample)g(a)g(tree)
g(from)h(this)f(distri-)-152 106 y(bution.)34 b(Our)22
b(trees)i(are)g(also)g(heirarc)n(hically)h(w)n(ell)f(separated,)h(lik)n
(e)-152 193 y(Bartal's.)36 b(This)25 b(giv)n(es)f(impro)n(v)n(ed)f
(appro)n(ximation)i(algorithms)g(for)-152 280 y(v)l(arious)19
b(problems)g(including)g(group)g(Steiner)f(tree)h([24],)i(metric)f(la-)
-152 367 y(b)r(eling)29 b([19,)i(32],)g(buy-at-bulk)26
b(net)n(w)n(ork)i(design)h([4],)h(and)f(v)n(ehicle)-152
454 y(routing)22 b([16].)34 b(W)-6 b(e)20 b(giv)n(e)h(a)h(more)f
(comprehensiv)n(e)g(list)h(in)e(section)i(3.)-152 666
y Fn(1.2)99 b(Related)26 b(W)-7 b(ork)-152 757 y Fm(Divide)41
b(and)g(conquer)g(metho)r(ds)h(ha)n(v)n(e)e(b)r(een)i(used)f(to)g(pro)n
(vide)-152 845 y(p)r(olylogarithmic-factor)23 b(appro)n(ximation)c
(algorithms)j(for)e(n)n(umer-)-152 932 y(ous)32 b(graph)f(problems)h
(since)f(the)g(disco)n(v)n(ery)g(of)h(an)f Fl(O)r Fm(\(log)16
b Fl(n)p Fm(\))31 b(ap-)-152 1019 y(pro)n(ximation)37
b(algorithm)i(for)e(\014nding)f(a)h(graph)g(separator)h([36].)-152
1106 y(The)d(algorithms)i(pro)r(ceeded)e(b)n(y)f(recursiv)n(ely)h
(dividing)f(a)h(prob-)-152 1193 y(lem)25 b(using)g(the)f(ab)r(o)n(v)n
(e)g(appro)n(ximation)h(algorithm,)i(and)d(then)f(us-)-152
1280 y(ing)39 b(the)g(decomp)r(osition)h(to)f(\014nd)e(a)i(solution.)75
b(T)n(ypically)-6 b(,)42 b(the)-152 1368 y(appro)n(ximation)c(factor)g
(w)n(as)g Fl(O)r Fm(\(log)952 1336 y Ff(2)999 1368 y
Fl(n)p Fm(\):)58 b(a)38 b(logarithmic)h(factor)-152 1455
y(came)c(from)f(the)g Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\))34
b(separator)h(appro)n(ximation,)i(another)-152 1542 y
Fl(O)r Fm(\(log)16 b Fl(n)p Fm(\))27 b(factor)i(came)f(from)g(the)f
(recursion.)41 b(Using)28 b(this)f(frame-)-152 1629 y(w)n(ork,)k(p)r
(olynomial-time)f(appro)n(ximation)g(algorithms)g(for)g(man)n(y)-152
1716 y(problems)j(are)g(giv)n(en)g(in)f([36],)k(for)e(example:)48
b(crossing)34 b(n)n(um)n(b)r(er,)-152 1803 y(VLSI)d(la)n(y)n(out,)j
(minim)n(um)e(feedbac)n(k)g(arc)h(set,)i(and)c(searc)n(h)i(n)n(um-)-152
1891 y(b)r(er.)-152 2065 y(Indep)r(enden)n(tly)-6 b(,)17
b(Seymour)f([45])j(ga)n(v)n(e)e(an)g Fl(O)r Fm(\(log)f
Fl(n)d Fm(log)i(log)g Fl(n)p Fm(\))i(b)r(ound)-152 2152
y(on)j(the)g(in)n(tegralit)n(y)g(gap)g(for)h(a)f(linear)h(programming)g
(relaxation)g(of)-152 2239 y(the)d(feedbac)n(k)g(arc)h(set)f(problem)h
(\(for)f(whic)n(h)h(the)e(ab)r(o)n(v)n(e)i(tec)n(hniques)-152
2327 y(had)30 b(giv)n(en)g(an)f Fl(O)r Fm(\(log)507 2295
y Ff(2)554 2327 y Fl(n)p Fm(\))h(b)r(ound\).)46 b(In)29
b(doing)i(so,)h(he)d(dev)n(elop)r(ed)-152 2414 y(a)k(tec)n(hnique)e
(that)g(balanced)i(the)e(appro)n(ximation)i(factor)g(of)g(his)-152
2501 y(separator)28 b(based)e(pro)r(cedure)h(against)g(the)f(cost)h(of)
g(the)f(recursion)-152 2588 y(to)g(signi\014can)n(tly)g(impro)n(v)n(e)g
(the)f(b)r(ounds.)-152 2762 y(Ev)n(en)33 b(et)h(al.[20])h(in)n(tro)r
(duced)e(linear)i(programming)f(relaxations)-152 2850
y(for)39 b(a)f(n)n(um)n(b)r(er)e(of)j(problems)f(and)f(com)n(bined)h
(them)f(with)h(Sey-)-152 2937 y(mour's)e(tec)n(hniques)f(to)g(giv)n(e)h
Fl(O)r Fm(\(log)15 b Fl(n)f Fm(log)h(log)g Fl(n)p Fm(\)-appro)n
(ximation)-152 3024 y(algorithms)38 b(for)e(man)n(y)f(of)h(the)f
(problems)h(that)g(previously)f(had)-152 3111 y Fl(O)r
Fm(\(log)38 3079 y Ff(2)85 3111 y Fl(n)p Fm(\))42 b(appro)n(ximation)g
(algorithms,)47 b(e.g.,)g(linear)42 b(arrange-)-152 3198
y(men)n(t,)36 b(em)n(b)r(edding)d(a)h(graph)f(in)h Fl(d)p
Fm(-dimensional)g(mesh,)i(in)n(terv)l(al)-152 3285 y(graph)18
b(completion,)i(minimizing)e(storage-time)g(pro)r(duct,)h(and)e(\(sub-)
-152 3373 y(set\))26 b(feedbac)n(k)g(sets)g(in)g(directed)f(graphs.)
-152 3547 y(Bartal's)d(results)e([8])g(implied)g Fl(O)r
Fm(\(log)15 b Fl(n)e Fm(log)i(log)g Fl(n)p Fm(\)-appro)n(ximations)-152
3634 y(for)40 b(still)g(more)g(problems.)75 b(Moreo)n(v)n(er,)43
b(he)c(used)f(probabilistic)-152 3721 y(tec)n(hniques)21
b(so)h(as)h(to)f(b)r(ound)e(the)h(exp)r(ected)h(stretc)n(h)f(of)h(eac)n
(h)g(edge,)-152 3808 y(not)42 b(just)g(the)f(a)n(v)n(erage.)84
b(This)42 b(led)g(to)g(p)r(olylogarithmic)i(com-)-152
3896 y(p)r(etitiv)n(e)35 b(ratio)g(algorithms)h(for)g(a)f(n)n(um)n(b)r
(er)e(of)i(online)g(problems)-152 3983 y(\(against)41
b(oblivious)e(adv)n(ersaries\))h(suc)n(h)f(as)h(metrical)g(task)f(sys-)
-152 4070 y(tem)19 b([10].)34 b(Charik)l(ar)19 b(et.al.)h([16,)h(17])f
(sho)n(w)n(ed)f(ho)n(w)g(to)g(derandomize)-152 4157 y(the)k(appro)n
(ximation)h(algorithms)h(that)f(follo)n(w)h(from)g(Bartal's)g(em-)-152
4244 y(b)r(eddings.)-152 4419 y(This)31 b(w)n(ork)f(also)i(follo)n(ws)g
(the)e(line)h(of)g(researc)n(h)f(on)h(em)n(b)r(eddings,)-152
4506 y(with)26 b(lo)n(w)g(distortion,)h(graphs)f(in)n(to)f(other)g
(\\nice")i(metric)f(spaces,)-152 4593 y(whic)n(h)36 b(ha)n(v)n(e)f(go)r
(o)r(d)i(structural)f(prop)r(erties,)k(suc)n(h)35 b(as)h(Euclidean)-152
4680 y(and)26 b Fl(`)30 4688 y Ff(1)90 4680 y Fm(spaces)g([37,)h(26,)g
(18,)g(43,)f(23].)-152 4855 y(The)37 b(w)n(ork)f(of)i(Bourgain)f([14])h
(sho)n(w)n(ed)f(that)f(an)n(y)f(\014nite)h(metric)-152
4942 y(on)30 b Fl(n)g Fm(no)r(des)g(can)g(b)r(e)g(em)n(b)r(edded)f(in)n
(to)h Fl(`)1068 4950 y Ff(2)1132 4942 y Fm(with)g(logarithmic)i(dis-)
-152 5029 y(tortion)39 b(with)f(the)g(n)n(um)n(b)r(er)f(of)i
(dimensions)g(exp)r(onen)n(tial)f(in)g Fl(n)p Fm(.)-152
5116 y(Linial,)44 b(London,)e(and)d(Rabino)n(vic)n(h)g([37])h(mo)r
(di\014ed)f(Bourgain's)-152 5203 y(result)31 b(to)g(apply)f(for)i
Fl(`)537 5211 y Ff(1)602 5203 y Fm(metrics)f(and)f(to)h(use)g
Fl(O)r Fm(\(log)1456 5171 y Ff(2)1504 5203 y Fl(n)p Fm(\))f(dimen-)-152
5290 y(sions.)36 b(Aumann)25 b(and)g(Rabani)h([3])h(and)e(Linial,)i
(London)f(and)f(Ra-)-152 5378 y(bino)n(vic)n(h)i([37])h(ga)n(v)n(e)f
(sev)n(eral)g(applications,)i(including)e(a)g(pro)r(of)h(of)2040
-69 y(a)39 b(logarithmic)h(b)r(ound)d(on)h(max-\015o)n(w)g(min-cut)f
(gap)i(for)g(m)n(ulti-)2040 19 y(commo)r(dit)n(y)33 b(\015o)n(w)h
(problems.)57 b(They)33 b(also)h(ga)n(v)n(e)f(a)g(lo)n(w)n(er)h(b)r
(ound)2040 106 y(on)28 b(the)g(distortion)h(of)g(an)n(y)e(em)n(b)r
(eddings)h(of)h(general)g(graphs)g(in)n(to)2040 193 y
Fl(`)2072 201 y Ff(1)2106 193 y Fm(.)43 b(F)-6 b(or)28
b(more)h(details,)i(w)n(e)d(p)r(oin)n(t)h(the)f(reader)g(to)h(Chapter)g
(15)g(in)2040 280 y(Matousek)d([38].)2040 454 y(Em)n(b)r(eddings)g(of)g
(sp)r(ecial)i(graphs)e(ha)n(v)n(e)f(also)i(b)r(een)e(considered)i(b)n
(y)2040 542 y(man)n(y)f(researc)n(hers.)40 b(Gupta)27
b(et)g(al.)h([26])g(considered)g(em)n(b)r(eddings)2040
629 y(or)21 b(series-parallel)j(graphs)d(and)g(outerplanar)h(graphs)f
(in)n(to)g Fl(`)3828 637 y Ff(1)3883 629 y Fm(with)2040
716 y(constan)n(t)39 b(distortion;)47 b(Chekuri)39 b(et)g(al.)h([18])g
(sho)n(w)g(a)f(constan)n(t-)2040 803 y(distortion)h(em)n(b)r(edding)g
(for)g Fl(k)r Fm(-outerplanar)g(graphs.)76 b(F)-6 b(or)40
b(pla-)2040 890 y(nar)19 b(graph,)h(Rao)f([43])h(ga)n(v)n(e)f(an)f
Fl(O)r Fm(\()3048 834 y Fq(p)p 3113 834 159 4 v 3113
890 a Fm(log)d Fl(n)p Fm(\)-distortion)k(em)n(b)r(edding)2040
977 y(in)n(to)29 b Fl(`)2231 985 y Ff(2)2265 977 y Fm(,)g(whic)n(h)g
(matc)n(hed)f(the)g(lo)n(w)n(er)h(b)r(ound)f(giv)n(en)g(b)n(y)f(Newman)
2040 1065 y(and)e(Rabino)n(vic)n(h)g([39].)2040 1239
y(Graph)17 b(decomp)r(osition)i(tec)n(hniques)d(for)i(man)n(y)f(in)n
(teresting)g(classes)2040 1326 y(of)28 b(graphs)g(ha)n(v)n(e)f(also)i
(b)r(een)e(extensiv)n(ely)g(studied.)39 b(F)-6 b(or)28
b(example,)2040 1413 y(Klein,)21 b(Plotkin,)g(and)e(Rao's)h([31])g
(result)f(pro)n(vided)g(a)g(constan)n(t)g(fac-)2040 1500
y(tor)h(appro)n(ximation)f(for)h(graphs)g(that)f(exclude)g(\014xed)f
(sized)i(minors)2040 1588 y(\(whic)n(h)30 b(includes)g(planar)h
(graphs\).)48 b(Similar)31 b(results)g(w)n(ere)g(giv)n(en)2040
1675 y(b)n(y)25 b(Charik)l(ar)h(et)g(al.)g([17])h(for)g(geometric)g
(graphs.)2040 1859 y Fn(1.3)99 b(Our)25 b(techniques)2040
1950 y Fm(The)32 b(algorithm)h(relies)g(on)f(tec)n(hniques)f(from)i
(the)f(algorithm)h(for)2040 2037 y(0-extension)40 b(giv)n(en)f(b)n(y)f
(Calinescu,)45 b(Karlo\013)40 b(and)f(Rabani)h([15],)2040
2125 y(and)28 b(impro)n(v)n(ed)f(b)n(y)g(F)-6 b(ak)n(c)n(haro)r
(enphol,)28 b(Harrelson,)i(Rao)e(and)f(T)-6 b(al-)2040
2212 y(w)n(ar)32 b([21].)53 b(The)32 b(CKR)f(pro)r(cedure)g(implies)i
(a)f(randomized)g(algo-)2040 2299 y(rithm)c(that)g(outputs)f(clusters)i
(of)g(diameter)f(ab)r(out)g(\001)g(suc)n(h)g(that)2040
2386 y(the)22 b(probabilit)n(y)h(of)h(an)e(edge)h Fl(e)g
Fm(b)r(eing)g(cut)f(is)h(\()p Fl(d)3455 2394 y Fg(e)3488
2386 y Fl(=)p Fm(\001\))13 b(log)i Fl(n)p Fm(,)24 b(where)2040
2473 y Fl(d)2080 2481 y Fg(e)2143 2473 y Fm(is)30 b(the)f(length)g(of)h
(the)f(edge)h Fl(e)p Fm(.)45 b(The)30 b(analysis)h(can)e(in)g(fact)i(b)
r(e)2040 2560 y(impro)n(v)n(ed)c(to)h(replace)h(the)e(log)15
b Fl(n)28 b Fm(b)n(y)e(the)i(logarithm)h(of)f(the)g(ratio)2040
2648 y(of)j(n)n(um)n(b)r(er)e(of)h(v)n(ertices)h(within)f(distance)g
(\001)g(of)g Fl(e)g Fm(to)g(the)g(no.)47 b(of)2040 2735
y(v)n(ertices)30 b(within)g(distance)g(\001)p Fl(=)p
Fm(2;)i(i.e.)48 b(the)29 b(n)n(um)n(b)r(er)f(of)j(times)f(the)2040
2822 y(size)h(of)g(a)g(neigh)n(b)r(ourho)r(o)r(d)g(of)g
Fl(e)f Fm(doubles)g(b)r(et)n(w)n(een)g(\001)p Fl(=)p
Fm(2)h(and)f(\001.)2040 2909 y(Our)25 b(algorithm)i(runs)f(a)g(CKR)f
(lik)n(e)h(pro)r(cedure)f(for)i(diameters)g(2)3985 2877
y Fg(i)4011 2909 y Fm(,)2040 2996 y Fl(i)33 b Fm(=)g(0)p
Fl(;)13 b Fm(1)p Fl(;)h Fm(2)p Fl(;)f(:)g(:)g(:)33 b
Fm(to)g(get)g(a)g(decomp)r(osition)h(of)f(the)f(graph)h(\(whic)n(h)2040
3083 y(can)25 b(then)g(b)r(e)g(con)n(v)n(erted)f(to)i(a)f(tree\).)35
b(Since)25 b(the)g(total)h(n)n(um)n(b)r(er)e(of)2040
3171 y(doublings)i(o)n(v)n(er)g(all)g(these)g(lev)n(els)g(is)g(b)r
(ounded)f(b)n(y)g(log)15 b Fl(n)p Fm(.)2040 3355 y Fn(2.)99
b(THE)26 b(ALGORITHM)2040 3446 y Fm(In)20 b(this)i(section,)h(w)n(e)e
(outline)h(the)e(algorithm)j(for)f(probabilistically)2040
3533 y(em)n(b)r(edding)h(an)h Fl(n)g Fm(p)r(oin)n(t)g(metric)g(in)n(to)
f(a)h(tree,)h(and)e(sho)n(w)i(that)e(the)2040 3620 y(exp)r(ected)k
(distortion)h(of)g(an)n(y)f(distance)h(is)g Fl(O)r Fm(\(log)15
b Fl(n)p Fm(\).)40 b(Lik)n(e)27 b(previ-)2040 3707 y(ous)f(algorithms,)
h(w)n(e)f(\014rst)f(decomp)r(ose)h(the)f(graph)g(hierarc)n(hically)2040
3795 y(and)g(then)g(con)n(v)n(ert)g(the)h(resulting)g(laminar)h(family)
g(to)e(a)h(tree.)2040 3979 y Fn(2.1)99 b(Pr)n(eliminaries)2040
4070 y Fm(W)-6 b(e)18 b(de\014ne)f(some)i(notation)f(\014rst.)32
b(Let)18 b(the)f(input)g(metric)i(b)r(e)f(\()p Fl(V)t(;)13
b(d)p Fm(\).)2040 4157 y(W)-6 b(e)21 b(shall)i(refer)f(to)g(the)f
(elemen)n(ts)i(of)f Fl(V)38 b Fm(as)23 b(v)n(ertices)f(or)g(p)r(oin)n
(ts.)33 b(W)-6 b(e)2040 4244 y(shall)31 b(refer)h(to)e(a)h(pair)g(of)g
(v)n(ertices)f(\()p Fl(u;)14 b(v)s Fm(\))30 b(as)h(an)f(edge.)49
b(Without)2040 4332 y(loss)24 b(of)g(generalit)n(y)-6
b(,)25 b(the)d(smallest)j(distance)e(is)h(strictly)f(more)h(than)2040
4419 y(1.)35 b(Let)24 b(\001)h(denote)f(the)g(diameter)h(of)h(the)e
(metric)h(\()p Fl(V)t(;)13 b(d)p Fm(\).)34 b(Without)2040
4506 y(loss)27 b(of)f(generalit)n(y)-6 b(,)27 b(\001)21
b(=)g(2)2847 4474 y Fg(\016)2882 4506 y Fm(.)2040 4680
y(A)f(metric)h(\()p Fl(V)2444 4648 y Fo(0)2466 4680 y
Fl(;)13 b(d)2540 4648 y Fo(0)2562 4680 y Fm(\))21 b(is)g(said)g(to)g
Fj(dominate)g Fm(\()p Fl(V)t(;)13 b(d)p Fm(\))20 b(if)h(for)h(all)f
Fl(u;)14 b(v)24 b Fq(2)d Fl(V)c Fm(,)2040 4767 y(it)24
b(is)h(the)e(case)i(that)f Fl(d)2687 4736 y Fo(0)2709
4767 y Fm(\()p Fl(u;)13 b(v)s Fm(\))21 b Fq(\025)h Fl(d)p
Fm(\()p Fl(u;)13 b(v)s Fm(\).)33 b(W)-6 b(e)24 b(shall)h(b)r(e)f(lo)r
(oking)h(for)2040 4855 y(tree)h(metrics)g(that)g(dominate)g(the)f(giv)n
(en)h(metric.)2040 5029 y(Let)21 b Fq(S)27 b Fm(b)r(e)21
b(a)h(family)g(of)h(metrics)f(o)n(v)n(er)f Fl(V)c Fm(,)22
b(and)g(let)f Fq(D)j Fm(b)r(e)d(a)h(distribu-)2040 5116
y(tion)27 b(o)n(v)n(er)g Fq(S)6 b Fm(.)37 b(W)-6 b(e)26
b(sa)n(y)h(that)g(\()p Fq(S)6 b Fl(;)12 b Fq(D)r Fm(\))27
b Fl(\013)p Fj(-pr)l(ob)l(abilistic)l(al)t(ly)j(appr)l(oxi-)2040
5203 y(mates)f Fm(a)f(metric)h(\()p Fl(V)t(;)13 b(d)p
Fm(\))27 b(if)i(ev)n(ery)e(metric)i(in)f Fq(S)33 b Fm(dominates)28
b Fl(d)g Fm(and)2040 5290 y(for)35 b(ev)n(ery)d(pair)i(of)h(v)n
(ertices)f(\()p Fl(u;)13 b(v)s Fm(\))34 b Fq(2)h Fl(V)17
b Fm(,)36 b Fl(E)3398 5302 y Fg(d)3430 5288 y Fe(0)3452
5302 y Fo(2)p Ff(\()p Fo(S)t Fg(;)p Fo(D)p Ff(\))3655
5290 y Fm([)p Fl(d)3716 5259 y Fo(0)3739 5290 y Fm(\()p
Fl(u;)13 b(v)s Fm(\)])35 b Fq(\024)2040 5378 y Fl(\013)17
b Fq(\001)h Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\).)p eop
%%Page: 3 3
3 2 bop -152 -69 a Fm(W)-6 b(e)27 b(shall)i(b)r(e)e(in)n(terested)h(in)
f Fl(\013)p Fm(-probabilistically)i(appro)n(ximating)-152
19 y(an)19 b(arbitrary)g(metric)h(\()p Fl(V)t(;)13 b(d)p
Fm(\))18 b(b)n(y)g(a)h(distribution)g(o)n(v)n(er)g(tree)g(metrics.)-152
193 y(F)-6 b(or)24 b(a)g(parameter)g Fl(r)r Fm(,)g(an)g
Fl(r)r Fm(-)p Fj(cut)h(de)l(c)l(omp)l(osition)h Fm(of)e(\()p
Fl(V)t(;)13 b(d)p Fm(\))23 b(is)h(a)g(par-)-152 280 y(titioning)31
b(of)g Fl(V)47 b Fm(in)n(to)30 b(clusters,)i(eac)n(h)f(cen)n(tered)e
(around)h(a)h(v)n(ertex)-152 367 y(and)h(ha)n(ving)g(radius)h(at)f
(most)h Fl(r)r Fm(.)54 b(Th)n(us)32 b(eac)n(h)g(cluster)h(will)g(ha)n
(v)n(e)-152 454 y(diameter)27 b(at)e(most)i(2)p Fl(r)r
Fm(.)-152 629 y(A)33 b Fj(hier)l(ar)l(chic)l(al)i(cut)g(de)l(c)l(omp)l
(osition)f Fm(of)g(\()p Fl(V)t(;)13 b(d)p Fm(\))32 b(is)h(a)h(sequence)
e(of)-152 716 y Fl(\016)20 b Fm(+)d(1)26 b(nested)f(cut)h(decomp)r
(ositions)h Fl(D)1014 724 y Ff(0)1049 716 y Fl(;)13 b(D)1146
724 y Ff(1)1181 716 y Fl(;)g(:)g(:)g(:)h(;)f(D)1415 725
y Fg(\016)1475 716 y Fm(suc)n(h)25 b(that)-41 954 y Fq(\017)38
b Fl(D)98 963 y Fg(\016)175 954 y Fm(=)k Fq(f)p Fl(V)17
b Fq(g)p Fm(,)42 b(i.e.)73 b(the)38 b(trivial)h(partition)g(\(that)f
(puts)g(all)35 1041 y(v)n(ertices)26 b(in)g(a)g(single)g(cluster\).)-41
1195 y Fq(\017)38 b Fl(D)98 1203 y Fg(i)143 1195 y Fm(is)18
b(a)h(2)307 1163 y Fg(i)333 1195 y Fm(-cut)f(decomp)r(osition,)j(and)c
(a)i(re\014nemen)n(t)e(of)i Fl(D)1716 1203 y Fg(i)p Ff(+1)1820
1195 y Fm(.)-152 1433 y(Note)j(that)g(eac)n(h)g(cluster)g(in)g
Fl(D)755 1441 y Ff(0)812 1433 y Fm(has)g(radius)h(at)f(most)g(1)g(and)g
(hence)-152 1520 y(m)n(ust)k(b)r(e)f(a)h(singleton)h(v)n(ertex.)-152
1726 y Fn(2.2)99 b(Decompositions)25 b(to)g(tr)n(ees)-152
1818 y Fm(A)g(hierarc)n(hical)h(cut)f(decomp)r(osition)i(de\014nes)d(a)
i(laminar)g(family)1784 1786 y Ff(1)1820 1818 y Fm(,)-152
1905 y(and)f(naturally)h(corresp)r(onds)g(to)f(a)h(ro)r(oted)f(tree)h
(as)g(follo)n(ws.)37 b(Eac)n(h)-152 1992 y(set)27 b(in)f(the)g(laminar)
h(family)g(is)g(a)g(no)r(de)f(in)g(the)g(tree)g(and)g(the)g(c)n(hil-)
-152 2079 y(dren)i(of)h(a)f(no)r(de)g(corresp)r(onding)h(to)f(a)g(set)g
Fl(S)k Fm(are)d(the)e(no)r(des)i(cor-)-152 2166 y(resp)r(onding)24
b(to)g(maximal)h(subsets)f(of)h Fl(S)j Fm(in)c(the)f(family)-6
b(.)34 b(Th)n(us)24 b(the)-152 2254 y(no)r(de)k(corresp)r(onding)g(to)g
Fl(V)44 b Fm(is)28 b(the)g(ro)r(ot)g(and)f(the)g(singletons)i(are)-152
2341 y(the)e(lea)n(v)n(es.)39 b(Also)28 b(note)f(that)g(the)f(c)n
(hildren)h(of)h(a)f(set)h(in)f Fl(D)1608 2349 y Fg(i)p
Ff(+1)1738 2341 y Fm(are)-152 2428 y(sets)g(in)e Fl(D)151
2436 y Fg(i)178 2428 y Fm(.)34 b(\(See)26 b(\014gure)f(1\).)-152
2602 y(W)-6 b(e)30 b(de\014ne)g(a)g(distance)h(function)g(on)f(this)g
(tree)h(as)g(follo)n(ws.)51 b(The)-152 2690 y(links)26
b(from)g(a)f(no)r(de)h Fl(S)j Fm(in)c Fl(D)688 2698 y
Fg(i)740 2690 y Fm(to)g(eac)n(h)h(of)g(its)g(c)n(hildren)f(in)g(the)g
(tree)-152 2777 y(ha)n(v)n(e)d(length)g(equal)g(to)h(the)e(2)709
2745 y Fg(i)758 2777 y Fm(\(whic)n(h)h(is)h(an)f(upp)r(er)g(b)r(ound)f
(on)h(the)-152 2864 y(radius)27 b(of)g Fl(S)t Fm(\).)36
b(This)27 b(induces)e(a)i(distance)g(function)f Fl(d)1461
2832 y Fg(T)1509 2864 y Fm(\()p Fq(\001)p Fl(;)14 b Fq(\001)p
Fm(\))26 b(on)g Fl(V)-152 2951 y Fm(where)34 b Fl(d)118
2919 y Fg(T)166 2951 y Fm(\()p Fl(u;)13 b(v)s Fm(\))33
b(is)h(equal)f(to)g(the)f(length)h(of)h(the)f(shortest)g(path)-152
3038 y(distance)26 b(in)f Fl(T)35 b Fm(from)26 b(no)r(de)f
Fq(f)p Fl(u)p Fq(g)h Fm(to)f(no)r(de)g Fq(f)p Fl(v)s
Fq(g)p Fm(.)35 b(Giv)n(en)25 b(the)g(length)-152 3125
y(function,)34 b(it)e(is)g(easy)g(to)g(see)g(that)g Fl(d)962
3094 y Fg(T)1010 3125 y Fm(\()p Fl(u;)13 b(v)s Fm(\))32
b Fq(\025)f Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\))31 b(for)i(all)g
Fl(u)-152 3213 y Fm(and)26 b Fl(v)s Fm(.)-152 3387 y(W)-6
b(e)32 b(shall)g(also)i(lik)n(e)e(to)f(place)i(upp)r(er)e(b)r(ounds)g
(on)h Fl(d)1434 3355 y Fg(T)1482 3387 y Fm(\()p Fl(u;)14
b(v)s Fm(\).)52 b(W)-6 b(e)-152 3474 y(sa)n(y)21 b(an)g(edge)g(\()p
Fl(u;)13 b(v)s Fm(\))20 b(is)h(at)g(lev)n(el)g Fl(i)g
Fm(if)g Fl(u)g Fm(and)f Fl(v)k Fm(are)d(\014rst)g(separated)g(in)-152
3561 y(the)27 b(decomp)r(osition)h Fl(D)552 3569 y Fg(i)578
3561 y Fm(.)38 b(Note)27 b(that)f(if)i(\()p Fl(u;)13
b(v)s Fm(\))27 b(is)g(at)g(lev)n(el)g Fl(i)p Fm(,)g(then)-152
3657 y Fl(d)-112 3625 y Fg(T)-63 3657 y Fm(\()p Fl(u;)13
b(v)s Fm(\))21 b(=)g(2)268 3601 y Fd(P)349 3621 y Fg(i)349
3680 y(j)s Ff(=0)472 3657 y Fm(2)510 3625 y Fg(j)564
3657 y Fq(\024)g Fm(2)683 3625 y Fg(i)p Ff(+2)787 3657
y Fm(.)-152 3863 y Fn(2.3)99 b(Decomposing)25 b(the)h(graph)-152
3955 y Fm(W)-6 b(e)26 b(shall)h(describ)r(e)g(a)f(random)g(pro)r(cess)h
(to)g(de\014ne)e(a)h(hierarc)n(hical)-152 4042 y(cut)j(decomp)r
(osition)i(of)g(\()p Fl(V)t(;)13 b(d)p Fm(\),)30 b(suc)n(h)f(that)g
(the)h(probabilit)n(y)f(that)-152 4129 y(an)d(edge)g(\()p
Fl(u;)13 b(v)s Fm(\))26 b(is)g(at)g(lev)n(el)g Fl(i)g
Fm(decreases)g(geometrically)i(with)e Fl(i)p Fm(.)-152
4303 y(W)-6 b(e)34 b(\014rst)g(pic)n(k)g(a)g(random)g(p)r(erm)n
(utation)h Fl(\031)h Fm(of)f Fq(f)p Fl(v)1389 4311 y
Ff(1)1425 4303 y Fl(;)13 b(v)1496 4311 y Ff(2)1531 4303
y Fl(;)g(:)g(:)g(:)g(;)g(v)1738 4311 y Fg(n)1781 4303
y Fq(g)p Fm(,)-152 4390 y(whic)n(h)29 b(will)g(b)r(e)f(used)g
(throughout)g(the)f(pro)r(cess.)44 b(W)-6 b(e)27 b(also)j(pic)n(k)d(a)
-152 4478 y Fl(\014)k Fm(uniformly)c(at)g(random)g(in)g(the)f(in)n
(terv)l(al)h([1)p Fl(;)14 b Fm(2].)38 b(F)-6 b(or)27
b(eac)n(h)g Fl(i)p Fm(,)g(w)n(e)-152 4565 y(compute)f
Fl(D)223 4573 y Fg(i)276 4565 y Fm(from)g Fl(D)520 4573
y Fg(i)p Ff(+1)650 4565 y Fm(as)g(follo)n(ws.)38 b(First)27
b(set)f Fl(\014)1378 4573 y Fg(i)1430 4565 y Fm(to)g(b)r(e)g(2)1667
4533 y Fg(i)p Fo(\000)p Ff(1)1772 4565 y Fl(\014)t Fm(.)-152
4652 y(Let)e Fl(S)k Fm(b)r(e)c(a)g(cluster)h(in)e Fl(D)621
4660 y Fg(i)p Ff(+1)725 4652 y Fm(.)34 b(W)-6 b(e)24
b(assign)h(a)f(v)n(ertex)f Fl(u)f Fq(2)f Fl(S)28 b Fm(to)c(the)-152
4739 y(\014rst)e(\(according)h(to)f Fl(\031)s Fm(\))f(v)n(ertex)g
Fl(v)k Fq(2)c Fl(V)39 b Fm(closer)23 b(than)f Fl(\014)1439
4747 y Fg(i)1487 4739 y Fm(to)g Fl(u)p Fm(.)34 b(Eac)n(h)-152
4826 y(c)n(hild)23 b(cluster)g(of)h Fl(S)j Fm(in)c Fl(D)585
4834 y Fg(i)634 4826 y Fm(then)f(consists)i(of)g(the)e(set)h(of)h(v)n
(ertices)f(in)-152 4914 y Fl(S)28 b Fm(assigned)d(to)f(a)g(single)h
(cen)n(ter)e Fl(v)s Fm(.)34 b(Note)24 b(that)f(the)g(cen)n(ter)h
Fl(v)i Fm(itself)-152 5001 y(need)19 b(not)g(b)r(e)h(in)f
Fl(S)t Fm(.)33 b(Th)n(us)19 b(one)g(cen)n(ter)g Fl(v)k
Fm(ma)n(y)c(corresp)r(ond)h(to)f(more)-152 5088 y(than)26
b(one)g(cluster,)h(eac)n(h)f(inside)g(a)h(di\013eren)n(t)e(lev)n(el)i
(\()p Fl(i)17 b Fm(+)g(1\))26 b(cluster)p -152 5141 797
4 v -148 5196 a Ff(1)-113 5228 y Fm(Recall)f(that)f(a)h
Fj(laminar)h(family)d Fq(F)29 b(\022)21 b Fm(2)1064 5196
y Fg(V)1142 5228 y Fm(is)k(a)g(family)g(of)h(subsets)-152
5303 y(of)i Fl(V)44 b Fm(suc)n(h)26 b(that)g(for)i(an)n(y)e
Fl(A;)13 b(B)27 b Fq(2)c(F)7 b Fm(,)28 b(it)f(is)h(the)e(case)i(that)e
Fl(A)d Fq(\022)g Fl(B)-152 5378 y Fm(or)j Fl(B)g Fq(\022)21
b Fl(A)k Fm(or)h Fl(A)16 b Fq(\\)i Fl(B)25 b Fm(=)c Fl(\036)p
Fm(.)2362 1168 y @beginspecial 0 @llx 0 @lly 335 @urx
328 @ury 1584 @rhi @setspecial
%%BeginDocument: balls.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\jittat\Desktop\balls.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 335 328
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 335 328
%AI3_TileBox: 0 0 335 328
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def

/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{

		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  309.6796 164.4862 m
  309.2818 175.0276 L
  308.0884 185.5691 L
  306.0994 195.9116 L
  303.3149 206.2541 L
  299.9337 216.1989 L
  295.7569 225.9448 L
  290.7845 235.2928 L
  285.2155 244.2431 L
  279.0497 252.9945 L
  272.2873 261.1492 L
  264.7293 268.7072 L
  256.7735 275.6685 L
  248.4199 282.0331 L
  239.2707 287.8011 L
  229.9227 292.9724 L
  220.3757 297.3481 L
  210.4309 300.9282 L
  200.2873 303.9116 L
  189.9448 305.9006 L
  179.4033 307.2928 L
  168.8619 307.8895 L
  158.1215 307.6906 L
  147.5801 306.6961 L
  137.2376 304.9061 L
  126.8950 302.5193 L
  116.9503 299.1381 L
  107.0055 295.1602 L
  97.6575 290.3867 L
  88.5083 285.0166 L
  79.5580 279.0497 L
  71.4033 272.2873 L
  63.6464 264.9282 L
  56.4862 257.1713 L
  50.1215 248.8177 L
  44.1547 239.8674 L
  38.7845 230.7182 L
  34.4088 221.1713 L
  30.4309 211.2265 L
  27.4475 201.0829 L
  25.0608 190.7403 L
  23.4696 180.3978 L
  22.6740 169.6575 L
  22.6740 159.1160 L
  23.4696 148.5746 L
  25.0608 138.0331 L
  27.4475 127.8895 L
  30.4309 117.7459 L
  34.4088 107.8011 L
  38.7845 98.2541 L
  44.1547 89.1050 L
  50.1215 79.9558 L
  56.4862 71.6022 L
  63.6464 63.8453 L
  71.4033 56.6851 L
  79.5580 49.9227 L
  88.5083 43.7569 L
  97.6575 38.3867 L
  107.0055 33.8122 L
  116.9503 29.6354 L
  126.8950 26.4530 L
  137.2376 23.8674 L
  147.5801 22.0773 L
  158.1215 21.2818 L
  168.8619 21.0829 L
  179.4033 21.4807 L
  189.9448 22.8729 L
  200.2873 25.0608 L
  210.4309 28.0442 L
  220.3757 31.6243 L
  229.9227 36.0000 L
  239.2707 40.9724 L
  248.4199 46.7403 L
  256.7735 53.1050 L
  264.7293 60.0663 L
  272.2873 67.6243 L
  279.0497 75.7790 L
  285.2155 84.5304 L
  290.7845 93.4807 L
  295.7569 103.0276 L
  299.9337 112.7735 L
  303.3149 122.7182 L
  306.0994 132.8619 L
  308.0884 143.4033 L
  309.2818 153.9448 L
  309.6796 164.4862 L
B
U
u
  0.000 0.000 0.000 0.000 k
2.2500 w
  0.000 0.000 0.000 1.000 K
  183.9779 155.5359 m
  183.5801 162.8950 L
  182.3867 170.4530 L
  180.5967 177.6133 L
  177.8122 184.5746 L
  174.4309 191.3370 L
  170.4530 197.7017 L
  165.6796 203.4696 L
  160.3094 208.6409 L
  154.5414 213.4144 L
  148.1768 217.5912 L
  141.6133 220.9724 L
  134.4530 223.5580 L
  127.2928 225.5470 L
  119.9337 226.7403 L
  112.3757 227.1381 L
  105.0166 226.7403 L
  97.4586 225.5470 L
  90.2983 223.5580 L
  83.3370 220.9724 L
  76.3757 217.5912 L
  70.0110 213.4144 L
  64.2431 208.6409 L
  58.8729 203.4696 L
  54.2983 197.7017 L
  50.1215 191.3370 L
  46.7403 184.5746 L
  44.1547 177.6133 L
  42.1657 170.4530 L
  40.9724 162.8950 L
  40.5746 155.5359 L
  40.9724 147.9779 L
  42.1657 140.6188 L
  44.1547 133.2597 L
  46.7403 126.2983 L
  50.1215 119.7348 L
  54.2983 113.3702 L
  58.8729 107.6022 L
  64.2431 102.2320 L
  70.0110 97.4586 L
  76.3757 93.4807 L
  83.3370 90.0994 L
  90.2983 87.3149 L
  97.4586 85.3260 L
  105.0166 84.3315 L
  112.3757 83.9337 L
  119.9337 84.3315 L
  127.2928 85.3260 L
  134.4530 87.3149 L
  141.6133 90.0994 L
  148.1768 93.4807 L
  154.5414 97.4586 L
  160.3094 102.2320 L
  165.6796 107.6022 L
  170.4530 113.3702 L
  174.4309 119.7348 L
  177.8122 126.2983 L
  180.5967 133.2597 L
  182.3867 140.6188 L
  183.5801 147.9779 L
  183.9779 155.5359 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  327.5801 164.4862 m
  327.1823 171.8453 L
  325.9890 179.4033 L
  324.0000 186.5635 L
  321.4144 193.5249 L
  318.0331 200.2873 L
  313.8564 206.6519 L
  309.0829 212.4199 L
  303.9116 217.5912 L
  297.9448 222.3646 L
  291.7790 226.5414 L
  285.0166 229.9227 L
  278.0552 232.5083 L
  270.6961 234.4972 L
  263.3370 235.6906 L
  255.9779 236.0884 L
  248.4199 235.6906 L
  240.8619 234.4972 L
  233.5028 232.5083 L
  226.5414 229.9227 L
  219.7790 226.5414 L
  213.6133 222.3646 L
  207.8453 217.5912 L
  202.4751 212.4199 L
  197.7017 206.6519 L
  193.7238 200.2873 L
  190.3425 193.5249 L
  187.5580 186.5635 L
  185.5691 179.4033 L
  184.3757 171.8453 L
  183.9779 164.4862 L
  184.3757 156.9282 L
  185.5691 149.5691 L
  187.5580 142.4088 L
  190.3425 135.2486 L
  193.7238 128.6851 L
  197.7017 122.3204 L
  202.4751 116.5525 L
  207.8453 111.1823 L
  213.6133 106.4088 L
  219.7790 102.4309 L
  226.5414 99.0497 L
  233.5028 96.2652 L
  240.8619 94.2762 L
  248.4199 93.2818 L
  255.9779 92.8840 L
  263.3370 93.2818 L
  270.6961 94.2762 L
  278.0552 96.2652 L
  285.0166 99.0497 L
  291.7790 102.4309 L
  297.9448 106.4088 L
  303.9116 111.1823 L
  309.0829 116.5525 L
  313.8564 122.3204 L
  318.0331 128.6851 L
  321.4144 135.2486 L
  324.0000 142.4088 L
  325.9890 149.5691 L
  327.1823 156.9282 L
  327.5801 164.4862 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 0.000 K
  228.7293 83.9337 m
  255.9779 83.9337 L
  255.9779 110.7845 L
  228.7293 110.7845 L
  228.7293 83.9337 L
B
U
u
  0.000 0.000 0.000 0.000 k
2.2500 w
  0.000 0.000 0.000 1.000 K
  264.9282 218.1878 m
  264.5304 225.7459 L
  263.3370 233.1050 L
  261.3481 240.2652 L
  258.5635 247.4254 L
  255.1823 254.1878 L
  251.2044 260.5525 L
  246.4309 266.3204 L
  240.8619 271.6906 L
  235.0939 276.2652 L
  228.7293 280.4420 L
  222.1657 283.8232 L
  215.2044 286.6077 L
  207.8453 288.3978 L
  200.4862 289.5912 L
  192.9282 289.9890 L
  185.5691 289.5912 L
  178.2099 288.3978 L
  170.8508 286.6077 L
  163.8895 283.8232 L
  157.1271 280.4420 L
  150.9613 276.2652 L
  144.9945 271.6906 L
  139.8232 266.3204 L
  135.0497 260.5525 L
  130.8729 254.1878 L
  127.4917 247.4254 L
  124.9061 240.2652 L
  122.9171 233.1050 L
  121.7238 225.7459 L
  121.3260 218.1878 L
  121.7238 210.6298 L
  122.9171 203.2707 L
  124.9061 196.1105 L
  127.4917 188.9503 L
  130.8729 182.3867 L
  135.0497 176.0221 L
  139.8232 170.2541 L
  144.9945 164.8840 L
  150.9613 160.3094 L
  157.1271 156.1326 L
  163.8895 152.7514 L
  170.8508 149.9669 L
  178.2099 148.1768 L
  185.5691 146.9834 L
  192.9282 146.5856 L
  200.4862 146.9834 L
  207.8453 148.1768 L
  215.2044 149.9669 L
  222.1657 152.7514 L
  228.7293 156.1326 L
  235.0939 160.3094 L
  240.8619 164.8840 L
  246.4309 170.2541 L
  251.2044 176.0221 L
  255.1823 182.3867 L
  258.5635 188.9503 L
  261.3481 196.1105 L
  263.3370 203.2707 L
  264.5304 210.6298 L
  264.9282 218.1878 L
B
U
u
  0.000 0.000 0.000 0.000 k
1.2500 w
  0.000 0.000 0.000 1.000 K
  219.7790 209.2376 m
  219.3812 216.7956 L
  218.3867 224.1547 L
  216.3978 231.3149 L
  213.6133 238.2762 L
  210.2320 245.0387 L
  206.2541 251.6022 L
  201.4807 257.3702 L
  196.1105 262.7403 L
  190.3425 267.3149 L
  183.9779 271.4917 L
  177.4144 274.8729 L
  170.4530 277.6575 L
  163.0939 279.4475 L
  155.7348 280.6409 L
  148.1768 281.0387 L
  140.8177 280.6409 L
  133.2597 279.4475 L
  126.0994 277.6575 L
  119.1381 274.8729 L
  112.3757 271.4917 L
  106.2099 267.3149 L
  100.2431 262.7403 L
  95.0718 257.3702 L
  90.2983 251.6022 L
  86.1215 245.0387 L
  82.7403 238.2762 L
  79.9558 231.3149 L
  77.9669 224.1547 L
  76.7735 216.7956 L
  76.3757 209.2376 L
  76.7735 201.6796 L
  77.9669 194.3204 L
  79.9558 187.1602 L
  82.7403 180.0000 L
  86.1215 173.4365 L
  90.2983 167.0718 L
  95.0718 161.3039 L
  100.2431 155.9337 L
  106.2099 151.3591 L
  112.3757 147.1823 L
  119.1381 143.8011 L
  126.0994 141.0166 L
  133.2597 139.2265 L
  140.8177 138.0331 L
  148.1768 137.6354 L
  155.7348 138.0331 L
  163.0939 139.2265 L
  170.4530 141.0166 L
  177.4144 143.8011 L
  183.9779 147.1823 L
  190.3425 151.3591 L
  196.1105 155.9337 L
  201.4807 161.3039 L
  206.2541 167.0718 L
  210.2320 173.4365 L
  213.6133 180.0000 L
  216.3978 187.1602 L
  218.3867 194.3204 L
  219.3812 201.6796 L
  219.7790 209.2376 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  166.0773 218.1878 m
  165.6796 225.7459 L
  164.4862 233.1050 L
  162.6961 240.2652 L
  159.9116 247.4254 L
  156.5304 254.1878 L
  152.5525 260.5525 L
  147.7790 266.3204 L
  142.4088 271.6906 L
  136.6409 276.2652 L
  130.2762 280.4420 L
  123.7127 283.8232 L
  116.5525 286.6077 L
  109.3923 288.3978 L
  102.0331 289.5912 L
  94.4751 289.9890 L
  86.9171 289.5912 L
  79.3591 288.3978 L
  72.1989 286.6077 L
  65.2376 283.8232 L
  58.4751 280.4420 L
  52.1105 276.2652 L
  46.3425 271.6906 L
  40.9724 266.3204 L
  36.3978 260.5525 L
  32.2210 254.1878 L
  28.8398 247.4254 L
  26.2541 240.2652 L
  24.2652 233.1050 L
  23.0718 225.7459 L
  22.6740 218.1878 L
  23.0718 210.6298 L
  24.2652 203.2707 L
  26.2541 196.1105 L
  28.8398 188.9503 L
  32.2210 182.3867 L
  36.3978 176.0221 L
  40.9724 170.2541 L
  46.3425 164.8840 L
  52.1105 160.3094 L
  58.4751 156.1326 L
  65.2376 152.7514 L
  72.1989 149.9669 L
  79.3591 148.1768 L
  86.9171 146.9834 L
  94.4751 146.5856 L
  102.0331 146.9834 L
  109.3923 148.1768 L
  116.5525 149.9669 L
  123.7127 152.7514 L
  130.2762 156.1326 L
  136.6409 160.3094 L
  142.4088 164.8840 L
  147.7790 170.2541 L
  152.5525 176.0221 L
  156.5304 182.3867 L
  159.9116 188.9503 L
  162.6961 196.1105 L
  164.4862 203.2707 L
  165.6796 210.6298 L
  166.0773 218.1878 L
F
U
u
  0.000 0.000 0.000 0.000 k
2.2500 w
  0.000 0.000 0.000 1.000 K
  219.7790 110.7845 m
  219.3812 118.1436 L
  218.3867 125.7017 L
  216.3978 132.8619 L
  213.6133 139.8232 L
  210.2320 146.5856 L
  206.2541 152.7514 L
  201.4807 158.7182 L
  196.1105 163.8895 L
  190.3425 168.6630 L
  183.9779 172.8398 L
  177.4144 176.2210 L
  170.4530 178.8066 L
  163.0939 180.7956 L
  155.7348 181.9890 L
  148.1768 182.3867 L
  140.8177 181.9890 L
  133.2597 180.7956 L
  126.0994 178.8066 L
  119.1381 176.2210 L
  112.3757 172.8398 L
  106.2099 168.6630 L
  100.2431 163.8895 L
  95.0718 158.7182 L
  90.2983 152.7514 L
  86.1215 146.5856 L
  82.7403 139.8232 L
  79.9558 132.8619 L
  77.9669 125.7017 L
  76.7735 118.1436 L
  76.3757 110.7845 L
  76.7735 103.2265 L
  77.9669 95.8674 L
  79.9558 88.5083 L
  82.7403 81.3481 L
  86.1215 74.7845 L
  90.2983 68.4199 L
  95.0718 62.6519 L
  100.2431 57.2818 L
  106.2099 52.5083 L
  112.3757 48.5304 L
  119.1381 45.1492 L
  126.0994 42.3646 L
  133.2597 40.3757 L
  140.8177 39.1823 L
  148.1768 38.7845 L
  155.7348 39.1823 L
  163.0939 40.3757 L
  170.4530 42.3646 L
  177.4144 45.1492 L
  183.9779 48.5304 L
  190.3425 52.5083 L
  196.1105 57.2818 L
  201.4807 62.6519 L
  206.2541 68.4199 L
  210.2320 74.7845 L
  213.6133 81.3481 L
  216.3978 88.5083 L
  218.3867 95.8674 L
  219.3812 103.2265 L
  219.7790 110.7845 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
  237.8785 164.4862 m
  237.4807 171.8453 L
  236.2873 179.4033 L
  234.2983 186.5635 L
  231.5138 193.5249 L
  228.1326 200.2873 L
  224.1547 206.6519 L
  219.3812 212.4199 L
  214.0110 217.5912 L
  208.2431 222.3646 L
  201.8785 226.5414 L
  195.3149 229.9227 L
  188.3536 232.5083 L
  180.9945 234.4972 L
  173.6354 235.6906 L
  166.0773 236.0884 L
  158.7182 235.6906 L
  151.1602 234.4972 L
  144.0000 232.5083 L
  137.0387 229.9227 L
  130.2762 226.5414 L
  124.1105 222.3646 L
  118.1436 217.5912 L
  112.9724 212.4199 L
  108.1989 206.6519 L
  104.0221 200.2873 L
  100.6409 193.5249 L
  98.0552 186.5635 L
  96.0663 179.4033 L
  94.8729 171.8453 L
  94.4751 164.4862 L
  94.8729 156.9282 L
  96.0663 149.5691 L
  98.0552 142.4088 L
  100.6409 135.2486 L
  104.0221 128.6851 L
  108.1989 122.3204 L
  112.9724 116.5525 L
  118.1436 111.1823 L
  124.1105 106.4088 L
  130.2762 102.4309 L
  137.0387 99.0497 L
  144.0000 96.2652 L
  151.1602 94.2762 L
  158.7182 93.2818 L
  166.0773 92.8840 L
  173.6354 93.2818 L
  180.9945 94.2762 L
  188.3536 96.2652 L
  195.3149 99.0497 L
  201.8785 102.4309 L
  208.2431 106.4088 L
  214.0110 111.1823 L
  219.3812 116.5525 L
  224.1547 122.3204 L
  228.1326 128.6851 L
  231.5138 135.2486 L
  234.2983 142.4088 L
  236.2873 149.5691 L
  237.4807 156.9282 L
  237.8785 164.4862 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  255.9779 173.4365 m
  255.5801 178.6077 L
  254.3867 183.7790 L
  252.5967 188.5525 L
  250.0110 193.1271 L
  246.8287 197.3039 L
  242.8508 200.8840 L
  238.4751 204.0663 L
  233.9006 206.4530 L
  228.9282 208.0442 L
  223.7569 209.0387 L
  218.5856 209.2376 L
  213.4144 208.6409 L
  208.2431 207.2486 L
  203.4696 205.2597 L
  199.0939 202.4751 L
  194.9171 199.0939 L
  191.5359 195.3149 L
  188.5525 190.9392 L
  186.3646 186.1657 L
  184.9724 181.1934 L
  184.1768 176.0221 L
  184.1768 170.8508 L
  184.9724 165.6796 L
  186.3646 160.7072 L
  188.5525 155.9337 L
  191.5359 151.5580 L
  194.9171 147.5801 L
  199.0939 144.1989 L
  203.4696 141.6133 L
  208.2431 139.4254 L
  213.4144 138.2320 L
  218.5856 137.6354 L
  223.7569 137.8343 L
  228.9282 138.8287 L
  233.9006 140.4199 L
  238.4751 142.8066 L
  242.8508 145.7901 L
  246.8287 149.5691 L
  250.0110 153.5470 L
  252.5967 158.1215 L
  254.3867 163.0939 L
  255.5801 168.2652 L
  255.9779 173.4365 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  242.2541 119.7348 m
  241.8564 124.9061 L
  240.6630 130.0773 L
  238.8729 134.8508 L
  236.2873 139.4254 L
  233.1050 143.6022 L
  229.3260 147.1823 L
  225.1492 150.1657 L
  220.3757 152.5525 L
  215.4033 154.3425 L
  210.4309 155.3370 L
  205.0608 155.5359 L
  199.8895 154.9392 L
  194.9171 153.5470 L
  190.1436 151.5580 L
  185.5691 148.7735 L
  181.5912 145.3923 L
  178.0110 141.6133 L
  175.2265 137.2376 L
  173.0387 132.4641 L
  171.4475 127.4917 L
  170.6519 122.3204 L
  170.6519 117.1492 L
  171.4475 111.9779 L
  173.0387 106.8066 L
  175.2265 102.2320 L
  178.0110 97.8564 L
  181.5912 93.8785 L
  185.5691 90.4972 L
  190.1436 87.9116 L
  194.9171 85.7238 L
  199.8895 84.5304 L
  205.0608 83.9337 L
  210.4309 84.1326 L
  215.4033 84.9282 L
  220.3757 86.7182 L
  225.1492 89.1050 L
  229.3260 92.0884 L
  233.1050 95.8674 L
  236.2873 99.8453 L
  238.8729 104.4199 L
  240.6630 109.3923 L
  241.8564 114.3646 L
  242.2541 119.7348 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  291.7790 164.4862 m
  291.3812 169.6575 L
  290.1878 174.8287 L
  288.3978 179.6022 L
  285.8122 184.1768 L
  282.6298 188.3536 L
  278.8508 191.9337 L
  274.4751 195.1160 L
  269.9006 197.5028 L
  264.9282 199.0939 L
  259.7569 200.0884 L
  254.5856 200.2873 L
  249.4144 199.6906 L
  244.0442 198.2983 L
  239.2707 196.3094 L
  234.8950 193.5249 L
  230.9171 190.1436 L
  227.3370 186.3646 L
  224.5525 181.9890 L
  222.1657 177.2155 L
  220.7735 172.2431 L
  219.9779 167.0718 L
  219.9779 161.9006 L
  220.7735 156.7293 L
  222.1657 151.5580 L
  224.5525 146.9834 L
  227.3370 142.6077 L
  230.9171 138.6298 L
  234.8950 135.2486 L
  239.2707 132.6630 L
  244.0442 130.4751 L
  249.4144 129.2818 L
  254.5856 128.6851 L
  259.7569 128.8840 L
  264.9282 129.8785 L
  269.9006 131.4696 L
  274.4751 133.8564 L
  278.8508 136.8398 L
  282.6298 140.6188 L
  285.8122 144.5967 L
  288.3978 149.1713 L
  290.1878 154.1436 L
  291.3812 159.3149 L
  291.7790 164.4862 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  228.7293 218.1878 m
  228.5304 223.3591 L
  227.3370 228.5304 L
  225.3481 233.3039 L
  222.9613 237.8785 L
  219.7790 242.0552 L
  216.0000 245.8343 L
  211.6243 249.0166 L
  207.0497 251.4033 L
  202.0773 252.9945 L
  196.9061 253.9890 L
  191.7348 254.1878 L
  186.5635 253.5912 L
  181.3923 252.1989 L
  176.6188 250.2099 L
  172.2431 247.4254 L
  168.0663 244.0442 L
  164.6851 240.0663 L
  161.7017 235.6906 L
  159.5138 230.9171 L
  158.1215 225.9448 L
  157.3260 220.7735 L
  157.3260 215.6022 L
  158.1215 210.4309 L
  159.5138 205.4586 L
  161.7017 200.6851 L
  164.6851 196.3094 L
  168.0663 192.3315 L
  172.2431 188.9503 L
  176.6188 186.3646 L
  181.3923 184.3757 L
  186.5635 182.9834 L
  191.7348 182.3867 L
  196.9061 182.5856 L
  202.0773 183.5801 L
  207.0497 185.1713 L
  211.6243 187.5580 L
  216.0000 190.7403 L
  219.7790 194.3204 L
  222.9613 198.4972 L
  225.3481 203.0718 L
  227.3370 207.8453 L
  228.5304 213.0166 L
  228.7293 218.1878 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  183.9779 209.2376 m
  183.5801 214.4088 L
  182.5856 219.5801 L
  180.5967 224.3536 L
  178.0110 228.9282 L
  174.8287 233.1050 L
  171.0497 236.6851 L
  166.8729 239.8674 L
  162.2983 242.2541 L
  157.3260 243.8453 L
  152.1547 244.8398 L
  146.9834 245.0387 L
  141.8122 244.4420 L
  136.6409 243.0497 L
  131.8674 241.0608 L
  127.2928 238.2762 L
  123.3149 235.0939 L
  119.9337 231.1160 L
  116.9503 226.7403 L
  114.7624 221.9669 L
  113.1713 216.9945 L
  112.5746 211.8232 L
  112.5746 206.6519 L
  113.1713 201.4807 L
  114.7624 196.5083 L
  116.9503 191.7348 L
  119.9337 187.3591 L
  123.3149 183.3812 L
  127.2928 180.0000 L
  131.8674 177.4144 L
  136.6409 175.2265 L
  141.8122 174.0331 L
  146.9834 173.4365 L
  152.1547 173.6354 L
  157.3260 174.6298 L
  162.2983 176.2210 L
  166.8729 178.6077 L
  171.0497 181.7901 L
  174.8287 185.3702 L
  178.0110 189.5470 L
  180.5967 193.9227 L
  182.5856 198.8950 L
  183.5801 204.0663 L
  183.9779 209.2376 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  228.7293 83.9337 m
  228.5304 89.1050 L
  227.3370 94.0773 L
  225.3481 99.0497 L
  222.9613 103.6243 L
  219.7790 107.8011 L
  216.0000 111.3812 L
  211.6243 114.3646 L
  207.0497 116.7514 L
  202.0773 118.5414 L
  196.9061 119.5359 L
  191.7348 119.7348 L
  186.5635 119.1381 L
  181.3923 117.7459 L
  176.6188 115.7569 L
  172.2431 112.9724 L
  168.0663 109.5912 L
  164.6851 105.8122 L
  161.7017 101.4365 L
  159.5138 96.6630 L
  158.1215 91.6906 L
  157.3260 86.5193 L
  157.3260 80.9503 L
  158.1215 75.7790 L
  159.5138 70.8066 L
  161.7017 66.0331 L
  164.6851 61.8564 L
  168.0663 57.8785 L
  172.2431 54.4972 L
  176.6188 51.7127 L
  181.3923 49.7238 L
  186.5635 48.3315 L
  191.7348 47.9337 L
  196.9061 48.1326 L
  202.0773 48.9282 L
  207.0497 50.7182 L
  211.6243 53.1050 L
  216.0000 56.0884 L
  219.7790 59.6685 L
  222.9613 63.8453 L
  225.3481 68.4199 L
  227.3370 73.3923 L
  228.5304 78.3646 L
  228.7293 83.9337 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  183.9779 110.7845 m
  183.5801 115.9558 L
  182.5856 121.1271 L
  180.5967 125.9006 L
  178.0110 130.4751 L
  174.8287 134.6519 L
  171.0497 138.2320 L
  166.8729 141.2155 L
  162.2983 143.6022 L
  157.3260 145.3923 L
  152.1547 146.3867 L
  146.9834 146.5856 L
  141.8122 145.9890 L
  136.6409 144.5967 L
  131.8674 142.6077 L
  127.2928 139.8232 L
  123.3149 136.4420 L
  119.9337 132.6630 L
  116.9503 128.2873 L
  114.7624 123.5138 L
  113.1713 118.5414 L
  112.5746 113.3702 L
  112.5746 108.1989 L
  113.1713 103.0276 L
  114.7624 97.8564 L
  116.9503 93.2818 L
  119.9337 88.9061 L
  123.3149 84.9282 L
  127.2928 81.3481 L
  131.8674 78.7624 L
  136.6409 76.5746 L
  141.8122 75.3812 L
  146.9834 74.7845 L
  152.1547 74.9834 L
  157.3260 75.7790 L
  162.2983 77.5691 L
  166.8729 79.9558 L
  171.0497 83.1381 L
  174.8287 86.7182 L
  178.0110 90.8950 L
  180.5967 95.4696 L
  182.5856 100.4420 L
  183.5801 105.4144 L
  183.9779 110.7845 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  318.6298 92.8840 m
  318.2320 98.0552 L
  317.0387 103.2265 L
  315.2486 108.0000 L
  312.6630 112.5746 L
  309.4807 116.7514 L
  305.7017 120.3315 L
  301.3260 123.3149 L
  296.7514 125.7017 L
  291.7790 127.4917 L
  286.6077 128.4862 L
  281.4365 128.6851 L
  276.2652 128.0884 L
  271.0939 126.6961 L
  266.3204 124.7072 L
  261.9448 121.9227 L
  257.9669 118.5414 L
  254.3867 114.7624 L
  251.6022 110.3867 L
  249.2155 105.6133 L
  247.8232 100.6409 L
  247.0276 95.4696 L
  247.0276 90.0994 L
  247.8232 84.9282 L
  249.2155 79.7569 L
  251.6022 74.9834 L
  254.3867 70.8066 L
  257.9669 66.8287 L
  261.9448 63.4475 L
  266.3204 60.6630 L
  271.0939 58.6740 L
  276.2652 57.4807 L
  281.4365 56.8840 L
  286.6077 57.0829 L
  291.7790 57.8785 L
  296.7514 59.6685 L
  301.3260 62.0552 L
  305.7017 65.0387 L
  309.4807 68.6188 L
  312.6630 72.7956 L
  315.2486 77.3702 L
  317.0387 82.5414 L
  318.2320 87.5138 L
  318.6298 92.8840 L
B
U
u
4.0000 w
  0.000 0.000 0.000 1.000 K
1 J
  309.6796 164.4862 m
  309.2818 175.0276 L
  308.0884 185.5691 L
  306.0994 195.9116 L
  303.3149 206.2541 L
  299.9337 216.1989 L
  295.7569 225.9448 L
  290.7845 235.2928 L
  285.2155 244.2431 L
  279.0497 252.9945 L
  272.2873 261.1492 L
  264.7293 268.7072 L
  256.7735 275.6685 L
  248.4199 282.0331 L
  239.2707 287.8011 L
  229.9227 292.9724 L
  220.3757 297.3481 L
  210.4309 300.9282 L
  200.2873 303.9116 L
  189.9448 305.9006 L
  179.4033 307.2928 L
  168.8619 307.8895 L
  158.1215 307.6906 L
  147.5801 306.6961 L
  137.2376 304.9061 L
  126.8950 302.5193 L
  116.9503 299.1381 L
  107.0055 295.1602 L
  97.6575 290.3867 L
  88.5083 285.0166 L
  79.5580 279.0497 L
  71.4033 272.2873 L
  63.6464 264.9282 L
  56.4862 257.1713 L
  50.1215 248.8177 L
  44.1547 239.8674 L
  38.7845 230.7182 L
  34.4088 221.1713 L
  30.4309 211.2265 L
  27.4475 201.0829 L
  25.0608 190.7403 L
  23.4696 180.3978 L
  22.6740 169.6575 L
  22.6740 159.1160 L
  23.4696 148.5746 L
  25.0608 138.0331 L
  27.4475 127.8895 L
  30.4309 117.7459 L
  34.4088 107.8011 L
  38.7845 98.2541 L
  44.1547 89.1050 L
  50.1215 79.9558 L
  56.4862 71.6022 L
  63.6464 63.8453 L
  71.4033 56.6851 L
  79.5580 49.9227 L
  88.5083 43.7569 L
  97.6575 38.3867 L
  107.0055 33.8122 L
  116.9503 29.6354 L
  126.8950 26.4530 L
  137.2376 23.8674 L
  147.5801 22.0773 L
  158.1215 21.2818 L
  168.8619 21.0829 L
  179.4033 21.4807 L
  189.9448 22.8729 L
  200.2873 25.0608 L
  210.4309 28.0442 L
  220.3757 31.6243 L
  229.9227 36.0000 L
  239.2707 40.9724 L
  248.4199 46.7403 L
  256.7735 53.1050 L
  264.7293 60.0663 L
  272.2873 67.6243 L
  279.0497 75.7790 L
  285.2155 84.5304 L
  290.7845 93.4807 L
  295.7569 103.0276 L
  299.9337 112.7735 L
  303.3149 122.7182 L
  306.0994 132.8619 L
  308.0884 143.4033 L
  309.2818 153.9448 L
  309.6796 164.4862 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
  152.7514 110.7845 m
  152.3536 112.5746 L
  151.1602 113.9669 L
  149.5691 114.9613 L
  147.7790 115.1602 L
  145.9890 114.5635 L
  144.5967 113.3702 L
  143.8011 111.5801 L
  143.8011 109.7901 L
  144.5967 108.0000 L
  145.9890 106.8066 L
  147.7790 106.2099 L
  149.5691 106.4088 L
  151.1602 107.4033 L
  152.3536 108.9945 L
  152.7514 110.7845 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  130.2762 218.1878 m
  129.8785 223.3591 L
  128.8840 228.5304 L
  126.8950 233.3039 L
  124.3094 237.8785 L
  121.1271 242.0552 L
  117.3481 245.8343 L
  113.1713 249.0166 L
  108.5967 251.4033 L
  103.6243 252.9945 L
  98.4530 253.9890 L
  93.2818 254.1878 L
  87.9116 253.5912 L
  82.9392 252.1989 L
  77.9669 250.2099 L
  73.3923 247.4254 L
  69.4144 244.0442 L
  66.0331 240.0663 L
  63.0497 235.6906 L
  60.8619 230.9171 L
  59.2707 225.9448 L
  58.6740 220.7735 L
  58.6740 215.6022 L
  59.2707 210.4309 L
  60.8619 205.4586 L
  63.0497 200.6851 L
  66.0331 196.3094 L
  69.4144 192.3315 L
  73.3923 188.9503 L
  77.9669 186.3646 L
  82.9392 184.3757 L
  87.9116 182.9834 L
  93.2818 182.3867 L
  98.4530 182.5856 L
  103.6243 183.5801 L
  108.5967 185.1713 L
  113.1713 187.5580 L
  117.3481 190.7403 L
  121.1271 194.3204 L
  124.3094 198.4972 L
  126.8950 203.0718 L
  128.8840 207.8453 L
  129.8785 213.0166 L
  130.2762 218.1878 L
B
U
u
  0.000 0.000 0.000 0.098 k
2.2500 w
  0.000 0.000 0.000 1.000 K
  237.8785 164.4862 m
  237.4807 171.8453 L
  236.2873 179.4033 L
  234.2983 186.5635 L
  231.5138 193.5249 L
  228.1326 200.2873 L
  224.1547 206.6519 L
  219.3812 212.4199 L
  214.0110 217.5912 L
  208.2431 222.3646 L
  201.8785 226.5414 L
  195.3149 229.9227 L
  188.3536 232.5083 L
  180.9945 234.4972 L
  173.6354 235.6906 L
  166.0773 236.0884 L
  158.7182 235.6906 L
  151.1602 234.4972 L
  144.0000 232.5083 L
  137.0387 229.9227 L
  130.2762 226.5414 L
  124.1105 222.3646 L
  118.1436 217.5912 L
  112.9724 212.4199 L
  108.1989 206.6519 L
  104.0221 200.2873 L
  100.6409 193.5249 L
  98.0552 186.5635 L
  96.0663 179.4033 L
  94.8729 171.8453 L
  94.4751 164.4862 L
  94.8729 156.9282 L
  96.0663 149.5691 L
  98.0552 142.4088 L
  100.6409 135.2486 L
  104.0221 128.6851 L
  108.1989 122.3204 L
  112.9724 116.5525 L
  118.1436 111.1823 L
  124.1105 106.4088 L
  130.2762 102.4309 L
  137.0387 99.0497 L
  144.0000 96.2652 L
  151.1602 94.2762 L
  158.7182 93.2818 L
  166.0773 92.8840 L
  173.6354 93.2818 L
  180.9945 94.2762 L
  188.3536 96.2652 L
  195.3149 99.0497 L
  201.8785 102.4309 L
  208.2431 106.4088 L
  214.0110 111.1823 L
  219.3812 116.5525 L
  224.1547 122.3204 L
  228.1326 128.6851 L
  231.5138 135.2486 L
  234.2983 142.4088 L
  236.2873 149.5691 L
  237.4807 156.9282 L
  237.8785 164.4862 L
B
U
u
  0.000 0.000 0.000 1.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
  96.6630 218.1878 m
  96.4641 219.3812 L
  95.4696 220.1768 L
  94.2762 220.3757 L
  93.0829 219.7790 L
  92.2873 218.7845 L
  92.2873 217.5912 L
  93.0829 216.3978 L
  94.2762 216.0000 L
  95.4696 216.1989 L
  96.4641 216.9945 L
  96.6630 218.1878 L
B
U
u
2.2500 w
  0.000 0.000 0.000 1.000 K
  86.1215 146.3867 m
  78.5635 147.5801 L
  71.4033 149.5691 L
  64.6409 152.1547 L
  58.0773 155.5359 L
  51.7127 159.5138 L
  45.9448 164.2873 L
  40.7735 169.4586 L
  36.1989 175.2265 L
  32.0221 181.3923 L
  28.6409 187.9558 L
  26.0552 194.7182 L
  24.0663 201.8785 L
  22.6740 209.2376 L
  22.2762 216.5967 L
  22.4751 223.9558 L
  23.6685 231.3149 L
  25.4586 238.4751 L
  27.8453 245.4365 L
  31.2265 252.1989 L
  35.0055 258.5635 L
  39.5801 264.3315 L
  44.7514 269.7017 L
  50.3204 274.4751 L
  56.2873 278.6519 L
  62.8508 282.2320 L
  69.6133 285.0166 L
  76.7735 287.2044 L
  84.1326 288.5967 L
  91.4917 289.1934 L
  99.0497 288.9945 L
  106.2099 288.1989 L
  113.5691 286.6077 L
  120.5304 284.2210 L
  127.2928 281.0387 L
  133.6575 277.2597 L
  139.4254 272.8840 L
  144.9945 267.9116 L
  149.9669 262.3425 L
  154.1436 256.3757 L
  157.9227 250.0110 L
  160.9061 243.0497 L
  163.0939 236.0884 L
S
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  89.7017 183.1823 m
  85.9227 179.4033 L
  82.7403 175.2265 L
  79.9558 170.6519 L
  78.1657 165.6796 L
  76.9724 160.7072 L
  76.5746 155.3370 L
  76.9724 150.1657 L
  77.9669 144.9945 L
  79.7569 140.0221 L
  82.3425 135.4475 L
  85.5249 131.2707 L
  89.1050 127.4917 L
  93.2818 124.3094 L
  97.8564 121.7238 L
  102.8287 119.7348 L
  108.0000 118.5414 L
  113.1713 118.1436 L
S
U
u
2.2500 w
  0.000 0.000 0.000 1.000 K
  130.8729 278.8508 m
  138.2320 280.4420 L
  145.5912 281.0387 L
  153.1492 280.8398 L
  160.5083 280.0442 L
  167.8674 278.2541 L
  174.8287 275.8674 L
  181.7901 272.6851 L
  188.1547 268.9061 L
  194.1215 264.5304 L
  199.4917 259.3591 L
  204.4641 253.7901 L
  208.8398 247.6243 L
  212.4199 240.8619 L
  215.4033 233.9006 L
  217.5912 226.7403 L
  218.9834 219.3812 L
  219.7790 212.0221 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 274.2762 98.8508 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(\(2\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 153.3481 114.3646 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(\(3\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.3370 73.9890 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(8\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.8785 126.6961 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(10\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 209.6354 163.6906 0 Tp
TP
/_Times-Roman 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.2210 163.6906 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(11\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 258.7624 168.2652 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(7\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.7127 207.4475 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(6\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 155.5359 213.0166 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(5\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 97.2597 221.9669 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(4\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 110.7845 159.3149 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(9\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
2.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  212.6188 79.1602 m
  209.0387 72.5967 L
  204.8619 66.6298 L
  199.8895 60.8619 L
  194.5193 55.8895 L
  188.7514 51.3149 L
  182.3867 47.5359 L
  175.8232 44.3536 L
  168.8619 41.9669 L
  161.5028 40.1768 L
  154.3425 39.1823 L
  146.9834 38.9834 L
  139.4254 39.3812 L
  132.2652 40.7735 L
  125.1050 42.7624 L
  118.3425 45.3481 L
  111.7790 48.9282 L
  105.6133 52.9061 L
  99.8453 57.6796 L
  94.6740 62.8508 L
  90.0994 68.6188 L
  86.1215 74.9834 L
  82.7403 81.5470 L
  79.9558 88.7072 L
  77.9669 95.6685 L
  76.7735 103.0276 L
  76.3757 110.3867 L
  76.7735 117.7459 L
  77.7680 125.1050 L
  79.7569 132.2652 L
  82.5414 139.2265 L
  85.7238 145.7901 L
  89.7017 152.1547 L
  94.2762 157.9227 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 0.000 K
  4.7735 298.9392 m
  331.9558 298.9392 L
  331.9558 325.7901 L
  4.7735 325.7901 L
  4.7735 298.9392 L
B
U
u
2.2500 w
  0.000 0.000 0.000 1.000 K
  300.1326 162.2983 m
  293.1713 163.6906 L
  286.4088 164.2873 L
  279.4475 164.4862 L
  272.4862 163.6906 L
  265.7238 162.4972 L
  259.1602 160.5083 L
  252.5967 157.9227 L
  246.4309 154.5414 L
  240.4641 150.7624 L
  235.0939 146.5856 L
S
U
u
  0.000 0.000 0.000 1.000 K
  212.8177 109.1934 m
  211.4254 102.0331 L
  210.8287 94.8729 L
  211.0276 87.7127 L
  211.8232 80.1547 L
  213.4144 73.1934 L
  215.8011 66.2320 L
  218.7845 59.6685 L
  222.5635 53.5028 L
  226.7403 47.5359 L
  231.5138 42.1657 L
  236.8840 37.1934 L
  242.8508 33.0166 L
  249.2155 29.2376 L
S
U
u
  0.000 0.000 0.000 1.000 K
  136.6409 39.3812 m
  139.4254 35.8011 L
  142.6077 32.6188 L
  146.1878 29.8343 L
S
U
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 0.000 K
  300.7293 1.9890 m
  331.9558 1.9890 L
  331.9558 320.2210 L
  300.7293 320.2210 L
  300.7293 1.9890 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 0.000 K
  4.7735 2.9834 m
  31.6243 2.9834 L
  31.6243 325.7901 L
  4.7735 325.7901 L
  4.7735 2.9834 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 0.000 K
  4.7735 5.3702 m
  327.5801 5.3702 L
  327.5801 32.2210 L
  4.7735 32.2210 L
  4.7735 5.3702 L
B
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  129.4807 226.1436 m
  130.2762 220.9724 L
  130.2762 215.8011 L
  129.6796 210.8287 L
  128.2873 205.8564 L
  126.0994 201.0829 L
  123.3149 196.7072 L
  119.9337 192.9282 L
  116.1547 189.5470 L
  111.7790 186.7624 L
  107.2044 184.5746 L
  102.2320 183.1823 L
  97.0608 182.3867 L
S
U
u
  0.000 0.000 0.000 1.000 K
  171.2486 235.8895 m
  174.6298 232.5083 L
  177.8122 228.9282 L
  180.1989 224.7514 L
  182.1878 220.1768 L
  183.3812 215.6022 L
  183.9779 210.6298 L
  183.9779 205.8564 L
  183.1823 201.0829 L
  181.5912 196.3094 L
S
U
u
  0.000 0.000 0.000 1.000 K
  118.1436 191.1381 m
  120.1326 187.5580 L
  122.5193 184.3757 L
  125.7017 181.5912 L
  129.0829 179.2044 L
  132.8619 177.4144 L
S
U
u
  0.000 0.000 0.000 1.000 K
  113.1713 116.1547 m
  114.1657 120.9282 L
  115.5580 125.5028 L
  117.7459 129.6796 L
  120.5304 133.6575 L
  123.9116 137.0387 L
  127.4917 140.0221 L
  131.6685 142.6077 L
  136.0442 144.3978 L
S
U
u
  0.000 0.000 0.000 1.000 K
  178.2099 130.2762 m
  180.5967 126.0994 L
  182.3867 121.5249 L
  183.5801 116.7514 L
  184.1768 111.9779 L
  183.9779 107.2044 L
  183.1823 102.2320 L
  181.5912 97.6575 L
  179.6022 93.2818 L
S
U
u
  0.000 0.000 0.000 1.000 K
  196.9061 182.5856 m
  202.0773 183.5801 L
  207.2486 185.3702 L
  212.0221 187.7569 L
  216.1989 190.9392 L
  219.9779 194.7182 L
  223.1602 198.8950 L
  225.7459 203.6685 L
S
U
u
  0.000 0.000 0.000 1.000 K
  232.5083 137.6354 m
  228.9282 141.2155 L
  225.7459 145.1934 L
  223.1602 149.5691 L
  221.3702 154.3425 L
  220.3757 159.5138 L
  219.9779 164.4862 L
  220.1768 169.6575 L
  221.3702 174.6298 L
  223.1602 179.4033 L
  225.7459 183.9779 L
  228.7293 187.9558 L
  232.5083 191.5359 L
S
U
u
  0.000 0.000 0.000 1.000 K
  184.5746 118.7403 m
  188.9503 119.5359 L
  193.3260 119.9337 L
  197.7017 119.7348 L
  202.0773 118.7403 L
  206.2541 117.3481 L
  210.2320 115.3591 L
  214.0110 112.9724 L
S
U
u
  0.000 0.000 0.000 1.000 K
  200.4862 154.9392 m
  205.0608 155.5359 L
  209.6354 155.3370 L
  214.0110 154.5414 L
  218.3867 153.1492 L
  222.5635 151.1602 L
S
U
u
  0.000 0.000 0.000 0.098 k
  0.000 0.000 0.000 1.000 K
  201.8785 164.4862 m
  201.4807 169.6575 L
  200.4862 174.8287 L
  198.4972 179.6022 L
  196.1105 184.1768 L
  192.7293 188.3536 L
  189.1492 191.9337 L
  184.7735 195.1160 L
  180.1989 197.5028 L
  175.2265 199.0939 L
  170.0552 200.0884 L
  164.8840 200.2873 L
  159.7127 199.6906 L
  154.5414 198.2983 L
  149.7680 196.3094 L
  145.3923 193.5249 L
  141.2155 190.1436 L
  137.8343 186.3646 L
  134.8508 181.9890 L
  132.6630 177.2155 L
  131.2707 172.2431 L
  130.4751 167.0718 L
  130.4751 161.9006 L
  131.2707 156.7293 L
  132.6630 151.5580 L
  134.8508 146.9834 L
  137.8343 142.6077 L
  141.2155 138.6298 L
  145.3923 135.2486 L
  149.7680 132.6630 L
  154.5414 130.4751 L
  159.7127 129.2818 L
  164.8840 128.6851 L
  170.0552 128.8840 L
  175.2265 129.8785 L
  180.1989 131.4696 L
  184.7735 133.8564 L
  189.1492 136.8398 L
  192.7293 140.6188 L
  196.1105 144.5967 L
  198.4972 149.1713 L
  200.4862 154.1436 L
  201.4807 159.3149 L
  201.8785 164.4862 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 173.4365 165.8785 0 Tp
TP
/_Helvetica 9.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(\(1\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  150.5635 209.2376 m
  150.1657 210.4309 L
  149.1713 211.2265 L
  147.9779 211.4254 L
  146.7845 210.8287 L
  145.9890 209.8343 L
  145.9890 208.6409 L
  146.7845 207.4475 L
  147.9779 207.0497 L
  149.1713 207.2486 L
  150.1657 208.0442 L
  150.5635 209.2376 L
B
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  114.5635 155.5359 m
  114.3646 156.7293 L
  113.3702 157.5249 L
  112.1768 157.7238 L
  110.9834 157.1271 L
  110.1878 156.1326 L
  110.1878 154.9392 L
  110.9834 153.7459 L
  112.1768 153.3481 L
  113.3702 153.5470 L
  114.3646 154.3425 L
  114.5635 155.5359 L
B
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  168.4641 164.4862 m
  168.0663 165.6796 L
  167.0718 166.4751 L
  165.8785 166.6740 L
  164.6851 166.0773 L
  164.0884 165.0829 L
  164.0884 163.8895 L
  164.6851 162.6961 L
  165.8785 162.2983 L
  167.0718 162.4972 L
  168.0663 163.2928 L
  168.4641 164.4862 L
B
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  219.7790 173.4365 m
  219.5801 174.6298 L
  218.5856 175.4254 L
  217.3923 175.6243 L
  216.1989 175.0276 L
  215.4033 174.0331 L
  215.4033 172.8398 L
  216.1989 171.6464 L
  217.3923 171.2486 L
  218.5856 171.4475 L
  219.5801 172.2431 L
  219.7790 173.4365 L
B
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  208.6409 121.9227 m
  208.2431 123.1160 L
  207.4475 123.9116 L
  206.0552 124.1105 L
  205.0608 123.5138 L
  204.2652 122.5193 L
  204.2652 121.3260 L
  205.0608 120.1326 L
  206.0552 119.7348 L
  207.4475 119.9337 L
  208.2431 120.7293 L
  208.6409 121.9227 L
B
U
u
  0.000 0.000 0.000 1.000 k
  150.5635 110.7845 m
  150.1657 111.9779 L
  149.1713 112.7735 L
  147.9779 112.9724 L
  146.7845 112.3757 L
  145.9890 111.3812 L
  145.9890 109.9890 L
  146.7845 108.9945 L
  147.9779 108.5967 L
  149.1713 108.5967 L
  150.1657 109.5912 L
  150.5635 110.7845 L
B
U
u
  0.000 0.000 0.000 1.000 k
  195.3149 83.9337 m
  194.9171 85.1271 L
  193.9227 85.9227 L
  192.7293 86.1215 L
  191.5359 85.5249 L
  190.9392 84.5304 L
  190.9392 83.1381 L
  191.5359 82.1436 L
  192.7293 81.3481 L
  193.9227 81.5470 L
  194.9171 82.7403 L
  195.3149 83.9337 L
B
U
u
  0.000 0.000 0.000 1.000 k
  285.0166 92.8840 m
  284.6188 94.0773 L
  283.6243 94.8729 L
  282.4309 95.0718 L
  281.2376 94.4751 L
  280.6409 93.4807 L
  280.6409 92.0884 L
  281.2376 91.0939 L
  282.4309 90.4972 L
  283.6243 90.6961 L
  284.6188 91.6906 L
  285.0166 92.8840 L
B
U
u
  0.000 0.000 0.000 1.000 k
  258.1657 164.4862 m
  257.7680 165.6796 L
  256.7735 166.4751 L
  255.5801 166.6740 L
  254.3867 166.0773 L
  253.7901 165.0829 L
  253.7901 163.8895 L
  254.3867 162.6961 L
  255.5801 162.2983 L
  256.7735 162.4972 L
  257.7680 163.2928 L
  258.1657 164.4862 L
B
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  195.3149 218.1878 m
  194.9171 219.3812 L
  193.9227 220.1768 L
  192.7293 220.3757 L
  191.5359 219.7790 L
  190.9392 218.7845 L
  190.9392 217.5912 L
  191.5359 216.3978 L
  192.7293 216.0000 L
  193.9227 216.1989 L
  194.9171 216.9945 L
  195.3149 218.1878 L
B
U
u
  0.000 0.000 0.000 1.000 K
  254.1878 172.0442 m
  254.5856 172.6409 L
  255.3812 173.0387 L
  258.1657 173.0387 L
S
U
u
  0.000 0.000 0.000 1.000 K
  255.7790 173.0387 m
  255.5801 170.0552 L
  255.1823 169.4586 L
  254.3867 169.2597 L
S
U
u
  0.000 0.000 0.000 1.000 K
  257.3702 173.0387 m
  256.9724 169.8564 L
  256.9724 169.2597 L
  257.5691 168.8619 L
  257.9669 169.2597 L
  258.1657 169.8564 L
S
U
u
  206.6519 167.4696 m
  207.0497 168.2652 L
  207.8453 168.6630 L
  210.6298 168.6630 L
S
U
u
  0.000 0.000 0.000 1.000 K
  208.2431 168.6630 m
  208.0442 165.4807 L
  207.6464 164.8840 L
  207.0497 164.6851 L
S
U
u
  0.000 0.000 0.000 1.000 K
  209.8343 168.6630 m
  209.4365 165.2818 L
  209.6354 164.6851 L
  210.0331 164.4862 L
  210.4309 164.6851 L
  210.6298 165.2818 L
S
U
u
  168.8619 170.0552 m
  169.2597 170.8508 L
  170.0552 171.2486 L
  172.8398 171.2486 L
S
U
u
  0.000 0.000 0.000 1.000 K
  170.4530 171.2486 m
  170.2541 168.0663 L
  169.8564 167.4696 L
  169.2597 167.2707 L
S
U
u
  0.000 0.000 0.000 1.000 K
  172.0442 171.2486 m
  171.6464 167.8674 L
  171.8453 167.2707 L
  172.2431 166.8729 L
  172.6409 167.2707 L
  172.8398 167.8674 L
S
U
u
  191.3370 210.2320 m
  191.7348 210.8287 L
  192.5304 211.2265 L
  195.3149 211.2265 L
S
U
u
  0.000 0.000 0.000 1.000 K
  192.9282 211.2265 m
  192.7293 208.2431 L
  192.3315 207.6464 L
  191.5359 207.4475 L
S
U
u
  0.000 0.000 0.000 1.000 K
  194.3204 211.2265 m
  194.1215 208.0442 L
  194.1215 207.4475 L
  194.7182 207.0497 L
  195.1160 207.4475 L
  195.3149 208.0442 L
S
U
u
  150.9613 216.7956 m
  151.3591 217.3923 L
  152.1547 217.9890 L
  154.9392 217.9890 L
S
U
u
  0.000 0.000 0.000 1.000 K
  152.5525 217.9890 m
  152.3536 214.8066 L
  151.9558 214.2099 L
  151.3591 214.0110 L
S
U
u
  0.000 0.000 0.000 1.000 K
  154.1436 217.9890 m
  153.7459 214.6077 L
  153.7459 214.0110 L
  154.3425 213.6133 L
  154.7403 214.0110 L
  154.9392 214.6077 L
S
U
u
  92.8840 225.7459 m
  93.2818 226.5414 L
  93.8785 226.9392 L
  96.6630 226.9392 L
S
U
u
  0.000 0.000 0.000 1.000 K
  94.2762 226.9392 m
  94.2762 223.7569 L
  93.8785 223.1602 L
  93.0829 222.9613 L
S
U
u
  0.000 0.000 0.000 1.000 K
  95.8674 226.9392 m
  95.6685 223.5580 L
  95.6685 222.9613 L
  96.0663 222.5635 L
  96.6630 222.9613 L
  96.6630 223.5580 L
S
U
u
  106.2099 163.0939 m
  106.6077 163.6906 L
  107.4033 164.0884 L
  110.1878 164.0884 L
S
U
u
  0.000 0.000 0.000 1.000 K
  107.8011 164.0884 m
  107.6022 161.1050 L
  107.2044 160.5083 L
  106.6077 160.3094 L
S
U
u
  0.000 0.000 0.000 1.000 K
  109.3923 164.0884 m
  108.9945 160.9061 L
  108.9945 160.3094 L
  109.5912 159.9116 L
  109.9890 160.3094 L
  110.1878 160.9061 L
S
U
u
  148.7735 118.5414 m
  149.1713 119.3370 L
  149.9669 119.7348 L
  152.7514 119.7348 L
S
U
u
  0.000 0.000 0.000 1.000 K
  150.3646 119.7348 m
  150.1657 116.5525 L
  149.7680 115.9558 L
  148.9724 115.7569 L
S
U
u
  0.000 0.000 0.000 1.000 K
  151.7569 119.7348 m
  151.5580 116.3536 L
  151.5580 115.7569 L
  152.1547 115.5580 L
  152.5525 115.7569 L
  152.7514 116.3536 L
S
U
u
  197.7017 129.6796 m
  198.0994 130.4751 L
  198.8950 130.8729 L
  201.6796 130.8729 L
S
U
u
  0.000 0.000 0.000 1.000 K
  199.2928 130.8729 m
  199.0939 127.6906 L
  198.6961 127.0939 L
  198.0994 126.8950 L
S
U
u
  0.000 0.000 0.000 1.000 K
  200.8840 130.8729 m
  200.4862 127.4917 L
  200.6851 126.8950 L
  201.0829 126.6961 L
  201.4807 126.8950 L
  201.6796 127.4917 L
S
U
u
  186.7624 77.9669 m
  187.1602 78.5635 L
  187.9558 78.9613 L
  190.7403 78.9613 L
S
U
u
  0.000 0.000 0.000 1.000 K
  188.3536 78.9613 m
  188.1547 75.9779 L
  187.7569 75.3812 L
  187.1602 75.1823 L
S
U
u
  0.000 0.000 0.000 1.000 K
  189.9448 78.9613 m
  189.5470 75.7790 L
  189.7459 75.1823 L
  190.1436 74.7845 L
  190.7403 75.1823 L
  190.7403 75.7790 L
S
U
u
  269.9006 102.6298 m
  270.2983 103.2265 L
  270.8950 103.8232 L
  273.8785 103.8232 L
S
U
u
  0.000 0.000 0.000 1.000 K
  271.4917 103.8232 m
  271.2928 100.6409 L
  270.8950 100.0442 L
  270.0994 99.8453 L
S
U
u
  0.000 0.000 0.000 1.000 K
  272.8840 103.8232 m
  272.6851 100.4420 L
  272.6851 99.8453 L
  273.2818 99.4475 L
  273.6796 99.8453 L
  273.8785 100.4420 L
S
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%

%%EndDocument
 @endspecial 2040 1419 a Fk(Figure)27 b(2:)39 b(A)27
b(p)r(ossible)g(hierarc)n(hical)h(cut)g(decomp)r(osition)2040
1506 y(output)39 b(b)n(y)e(the)h(algorithm.)64 b(The)37
b(v)-5 b(arying)37 b(thic)n(knesses)2040 1593 y(indicate)29
b(cuts)h(at)g(di\013eren)n(t)f(lev)n(els.)2040 1839 y
Fm(\(see)36 b(for)f(example,)j(the)d(cen)n(ter)g Fl(\031)s
Fm(\(8\))f(in)h(\014gure)g(2\).)63 b(Note)35 b(that)2040
1926 y(since)c Fl(\014)2276 1934 y Fg(i)2333 1926 y Fq(\024)f
Fm(2)2461 1894 y Fg(i)2488 1926 y Fm(,)i(the)e(radius)i(of)f(eac)n(h)g
(cluster)h(is)f(at)g(most)g(2)3851 1894 y Fg(i)3909 1926
y Fm(and)2040 2013 y(th)n(us)25 b(w)n(e)h(indeed)f(get)h(a)g(2)2795
1982 y Fg(i)2822 2013 y Fm(-cut)f(decomp)r(osition.)36
b(More)26 b(formally)-6 b(,)2040 2261 y Fk(Algorithm)26
b Fj(Partition)g Fm(\()p Fl(V)t(;)13 b(d)p Fm(\))2040
2348 y(1.)35 b(Cho)r(ose)27 b(a)f(random)g(p)r(erm)n(utation)f
Fl(\031)k Fm(of)d Fl(v)3383 2356 y Ff(1)3418 2348 y Fl(;)13
b(v)3489 2356 y Ff(2)3524 2348 y Fl(;)g(:)g(:)g(:)h(;)f(v)3732
2356 y Fg(n)3775 2348 y Fm(.)2040 2435 y(2.)35 b(Cho)r(ose)27
b Fl(\014)j Fm(uniformly)c(at)g(random)f(in)h([1)p Fl(;)14
b Fm(2].)2040 2522 y(3.)35 b Fl(D)2197 2531 y Fg(\016)2253
2522 y Fq( )21 b(f)p Fl(V)c Fq(g)p Fm(;)d Fl(i)21 b Fq( )g
Fl(\016)f Fq(\000)d Fm(1.)2040 2609 y(4.)35 b(while)27
b Fl(D)2398 2617 y Fg(i)p Ff(+1)2527 2609 y Fm(has)f(non-singleton)g
(clusters)g(do)2040 2700 y(4.1)104 b Fl(\014)2284 2708
y Fg(i)2332 2700 y Fq( )21 b Fm(2)2468 2669 y Fg(i)p
Fo(\000)p Ff(1)2573 2700 y Fl(\014)t Fm(.)2040 2787 y(4.2)104
b(F)-6 b(or)25 b Fl(l)e Fm(=)e(1)p Fl(;)13 b Fm(2)p Fl(;)h(:)f(:)g(:)g
(;)h(n)25 b Fm(do)2040 2875 y(4.2.1)121 b(F)-6 b(or)26
b(ev)n(ery)f(cluster)h Fl(S)k Fm(in)25 b Fl(D)3135 2883
y Fg(i)p Ff(+1)3239 2875 y Fm(.)2040 2962 y(4.2.1.1)139
b(Create)27 b(a)f(new)g(cluster)g(consisting)h(of)f(all)h(unassigned)
2458 3049 y(v)n(ertices)f(in)g Fl(S)k Fm(closer)c(than)g
Fl(\014)3339 3057 y Fg(i)3391 3049 y Fm(to)g Fl(\031)s
Fm(\()p Fl(l)q Fm(\).)2040 3136 y(4.3)104 b Fl(i)21 b
Fq( )g Fl(i)d Fq(\000)e Fm(1.)2040 3471 y(It)28 b(is)h(easy)g(to)g(see)
g(that)g(the)f(algorithm)i(can)f(b)r(e)f(implemen)n(ted)h(in)2040
3558 y(time)35 b Fl(O)r Fm(\()p Fl(n)2360 3526 y Ff(3)2395
3558 y Fm(\).)61 b(A)34 b(more)h(careful)h(implemen)n(tation)f(can)g
(actually)2040 3645 y(b)r(e)27 b(made)g(to)g(run)g(in)f(time)i
Fl(O)r Fm(\()p Fl(n)2993 3613 y Ff(2)3028 3645 y Fm(\))f(\(i.e.)39
b(linear)28 b(in)f(the)f(size)i(of)g(the)2040 3732 y(input\).)2040
3907 y(W)-6 b(e)27 b(no)n(w)h(\014x)e(an)i(arbitrary)f(edge)h(\()p
Fl(u;)13 b(v)s Fm(\),)28 b(and)f(sho)n(w)h(that)f(the)g(ex-)2040
3994 y(p)r(ected)22 b(v)l(alue)f(of)i Fl(d)2600 3962
y Fg(T)2649 3994 y Fm(\()p Fl(u;)13 b(v)s Fm(\))21 b(is)i(b)r(ounded)e
(b)n(y)g Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\))10 b Fq(\001)g
Fl(d)p Fm(\()p Fl(u;)j(v)s Fm(\).)33 b(W)-6 b(e)2040
4081 y(shall)37 b(mak)n(e)e(no)h(attempts)f(to)h(optimize)h(the)e
(constan)n(ts)h(in)f(this)2040 4168 y(analysis.)h(F)-6
b(rom)26 b(the)f(discussion)h(ab)r(o)n(v)n(e,)g(it)g(follo)n(ws)i(that)
2236 4390 y Fl(E)t Fm([)p Fl(d)2358 4354 y Fg(T)2406
4390 y Fm(\()p Fl(u;)14 b(v)s Fm(\)])75 b Fq(\024)2855
4297 y Fg(\016)2815 4319 y Fd(X)2821 4477 y Fg(i)p Ff(=0)2939
4390 y Fm(Pr[\()p Fl(u;)13 b(v)s Fm(\))26 b(is)g(at)g(lev)n(el)g
Fl(i)p Fm(])18 b Fq(\001)f Fm(2)3733 4354 y Fg(i)p Ff(+2)3935
4390 y Fm(\(1\))2040 4608 y(W)-6 b(e)31 b(shall)g(sho)n(w)h(that)f(the)
f(righ)n(t)h(hand)f(side)i(of)f(this)g(equation)g(is)2040
4695 y(b)r(ounded)25 b(b)n(y)f Fl(O)r Fm(\(log)16 b Fl(n)p
Fm(\))h Fq(\001)g Fl(d)p Fm(\()p Fl(u;)c(v)s Fm(\).)2040
4870 y(If)21 b(v)n(ertices)h Fl(u)f Fm(and)f Fl(v)k Fm(are)e(in)f
(separate)h(clusters)g(in)e Fl(D)3585 4878 y Fg(i)3612
4870 y Fm(,)i(w)n(e)g(sa)n(y)f(that)2040 4957 y Fl(D)2103
4965 y Fg(i)2155 4957 y Fm(separates)27 b(\()p Fl(u;)13
b(v)s Fm(\).)35 b(No)n(w)26 b(note)f(that)h(\()p Fl(u;)13
b(v)s Fm(\))25 b(is)i(at)e(lev)n(el)h Fl(i)g Fm(if)2077
5204 y(\(a\))g Fl(D)2264 5212 y Fg(i)2316 5204 y Fm(separates)h(\()p
Fl(u;)14 b(v)s Fm(\).)2077 5378 y(\(b\))25 b Fl(D)2268
5386 y Fg(j)2327 5378 y Fm(do)r(es)h(not)g(separate)g(\()p
Fl(u;)13 b(v)s Fm(\))26 b(for)g(an)n(y)f Fl(j)h(>)21
b(i)p Fm(.)p eop
%%Page: 4 4
4 3 bop 443 1228 a @beginspecial 0 @llx 0 @lly 673 @urx
310 @ury 1656 @rhi @setspecial
%%BeginDocument: lamfam-tree.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\Administrator\My Documents\logn.2\lamfam-tree.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 673 310
%%DocumentProcessColors: Black
%%ColorUsage:Black&White
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 0 0 673 310
%AI3_TileBox: 0 0 673 310
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 79 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 82 dict dup begin
put
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/@
{
} def
/&
{
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop ashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop awidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
		stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  421.9200 88.9200 m
  422.6400 94.3200 L
  424.8000 99.3600 L
  427.6800 104.0400 L
  431.6400 107.6400 L
  436.6800 110.5200 L
  442.0800 112.3200 L
  447.8400 113.0400 L
  453.6000 112.3200 L
  459.0000 110.5200 L
  464.0400 107.6400 L
  468.0000 104.0400 L
  470.8800 99.3600 L
  473.0400 94.3200 L
  473.7600 88.9200 L
  473.0400 83.8800 L
  470.8800 78.8400 L
  468.0000 74.1600 L
  464.0400 70.2000 L
  459.0000 67.6800 L
  453.6000 65.8800 L
  447.8400 65.1600 L
  442.0800 65.8800 L
  436.6800 67.6800 L
  431.6400 70.2000 L
  427.6800 74.1600 L
  424.8000 78.8400 L
  422.6400 83.8800 L
  421.9200 88.9200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  436.6800 94.6800 m
  437.4000 96.4800 L
  438.4800 97.9200 L
  440.6400 98.2800 L
  442.4400 97.9200 L
  443.5200 96.4800 L
  444.2400 94.6800 L
  443.5200 92.8800 L
  442.4400 91.4400 L
  440.6400 91.0800 L
  438.4800 91.4400 L
  437.4000 92.8800 L
  436.6800 94.6800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  451.4400 79.9200 m
  452.1600 81.7200 L
  453.2400 83.1600 L
  455.0400 83.5200 L
  457.2000 83.1600 L
  458.2800 81.7200 L
  459.0000 79.9200 L
  458.2800 78.1200 L
  457.2000 76.6800 L
  455.0400 76.3200 L
  453.2400 76.6800 L
  452.1600 78.1200 L
  451.4400 79.9200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  502.5600 90.3600 m
  503.2800 95.7600 L
  504.7200 101.1600 L
  507.6000 105.8400 L
  511.5600 109.8000 L
  516.2400 112.6800 L
  521.6400 114.4800 L
  527.4000 115.2000 L
  532.8000 114.4800 L
  538.2000 112.6800 L
  542.8800 109.8000 L
  546.8400 105.8400 L
  549.7200 101.1600 L
  551.5200 95.7600 L
  552.2400 90.3600 L
  551.5200 84.6000 L
  549.7200 79.2000 L
  546.8400 74.5200 L
  542.8800 70.5600 L
  538.2000 67.6800 L
  532.8000 65.8800 L
  527.4000 65.1600 L
  521.6400 65.8800 L
  516.2400 67.6800 L
  511.5600 70.5600 L
  507.6000 74.5200 L
  504.7200 79.2000 L
  503.2800 84.6000 L
  502.5600 90.3600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  520.2000 100.8000 m
  520.9200 102.9600 L
  522.3600 104.4000 L
  524.8800 104.4000 L
  526.6800 102.9600 L
  527.4000 100.8000 L
  526.6800 98.6400 L
  524.8800 97.5600 L
  522.3600 97.5600 L
  520.9200 98.6400 L
  520.2000 100.8000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  513.0000 83.1600 m
  513.7200 85.3200 L
  515.5200 86.4000 L
  517.6800 86.4000 L
  519.4800 85.3200 L
  520.2000 83.1600 L
  519.4800 81.0000 L
  517.6800 79.5600 L
  515.5200 79.5600 L
  513.7200 81.0000 L
  513.0000 83.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  590.4000 87.4800 m
  590.7600 92.8800 L
  592.9200 98.2800 L
  595.8000 102.6000 L
  599.7600 106.2000 L
  604.8000 108.7200 L
  609.8400 110.1600 L
  615.6000 110.1600 L
  620.6400 108.7200 L
  625.6800 106.2000 L
  629.6400 102.6000 L
  632.5200 98.2800 L
  634.6800 92.8800 L
  635.4000 87.4800 L
  634.6800 82.4400 L
  632.5200 77.0400 L
  629.6400 72.7200 L
  625.6800 69.1200 L
  620.6400 66.6000 L
  615.6000 65.1600 L
  609.8400 65.1600 L
  604.8000 66.6000 L
  599.7600 69.1200 L
  595.8000 72.7200 L
  592.9200 77.0400 L
  590.7600 82.4400 L
  590.4000 87.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  605.1600 99.0000 m
  605.8800 100.8000 L
  606.9600 102.2400 L
  609.1200 102.6000 L
  610.9200 102.2400 L
  612.3600 100.8000 L
  612.7200 99.0000 L
  612.3600 97.2000 L
  610.9200 95.7600 L
  609.1200 95.0400 L
  606.9600 95.7600 L
  605.8800 97.2000 L
  605.1600 99.0000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  605.1600 83.8800 m
  605.8800 85.6800 L
  606.9600 87.1200 L
  609.1200 87.4800 L
  610.9200 87.1200 L
  612.3600 85.6800 L
  612.7200 83.8800 L
  612.3600 82.0800 L
  610.9200 80.6400 L
  609.1200 80.2800 L
  606.9600 80.6400 L
  605.8800 82.0800 L
  605.1600 83.8800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  620.2800 76.3200 m
  620.6400 78.1200 L
  622.0800 79.5600 L
  623.8800 80.2800 L
  625.6800 79.5600 L
  627.1200 78.1200 L
  627.8400 76.3200 L
  627.1200 74.5200 L
  625.6800 73.0800 L
  623.8800 72.7200 L
  622.0800 73.0800 L
  620.6400 74.5200 L
  620.2800 76.3200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  347.7600 87.8400 m
  348.1200 93.2400 L
  350.2800 98.6400 L
  353.1600 102.9600 L
  357.4800 106.5600 L
  362.1600 109.0800 L
  367.5600 110.5200 L
  372.9600 110.5200 L
  378.3600 109.0800 L
  383.4000 106.5600 L
  387.3600 102.9600 L
  390.6000 98.6400 L
  392.4000 93.2400 L
  393.1200 87.8400 L
  392.4000 82.4400 L
  390.6000 77.4000 L
  387.3600 72.7200 L
  383.4000 69.1200 L
  378.3600 66.6000 L
  372.9600 65.1600 L
  367.5600 65.1600 L
  362.1600 66.6000 L
  357.4800 69.1200 L
  353.1600 72.7200 L
  350.2800 77.4000 L
  348.1200 82.4400 L
  347.7600 87.8400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  362.8800 99.3600 m
  363.2400 101.1600 L
  364.6800 102.6000 L
  366.4800 102.9600 L
  368.6400 102.6000 L
  369.7200 101.1600 L
  370.4400 99.3600 L
  369.7200 97.5600 L
  368.6400 96.1200 L
  366.4800 95.4000 L
  364.6800 96.1200 L
  363.2400 97.5600 L
  362.8800 99.3600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  362.8800 84.2400 m
  363.2400 86.0400 L
  364.6800 87.4800 L
  366.4800 87.8400 L
  368.6400 87.4800 L
  369.7200 86.0400 L
  370.4400 84.2400 L
  369.7200 82.0800 L
  368.6400 81.0000 L
  366.4800 80.2800 L
  364.6800 81.0000 L
  363.2400 82.0800 L
  362.8800 84.2400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  378.0000 91.8000 m
  378.3600 93.6000 L
  379.8000 95.0400 L
  381.6000 95.4000 L
  383.7600 95.0400 L
  385.2000 93.6000 L
  385.5600 91.8000 L
  385.2000 90.0000 L
  383.7600 88.5600 L
  381.6000 87.8400 L
  379.8000 88.5600 L
  378.3600 90.0000 L
  378.0000 91.8000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  590.4000 6.4800 m
  590.7600 9.0000 L
  592.5600 10.4400 L
  594.7200 11.1600 L
  596.8800 10.4400 L
  598.6800 9.0000 L
  599.4000 6.4800 L
  598.6800 4.3200 L
  596.8800 2.8800 L
  594.7200 2.1600 L
  592.5600 2.8800 L
  590.7600 4.3200 L
  590.4000 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  626.4000 6.4800 m
  626.7600 9.0000 L
  628.5600 10.4400 L
  630.7200 11.1600 L
  632.8800 10.4400 L
  634.6800 9.0000 L
  635.4000 6.4800 L
  634.6800 4.3200 L
  632.8800 2.8800 L
  630.7200 2.1600 L
  628.5600 2.8800 L
  626.7600 4.3200 L
  626.4000 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  662.4000 6.4800 m
  662.7600 9.0000 L
  664.5600 10.4400 L
  666.7200 11.1600 L
  668.8800 10.4400 L
  670.6800 9.0000 L
  671.4000 6.4800 L
  670.6800 4.3200 L
  668.8800 2.8800 L
  666.7200 2.1600 L
  664.5600 2.8800 L
  662.7600 4.3200 L
  662.4000 6.4800 L
B
U
u
1 J
  612.7200 65.1600 m
  594.7200 11.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  612.7200 65.1600 m
  630.7200 11.1600 L
S
U
u
  612.7200 65.1600 m
  666.7200 11.1600 L
S
U
u
  0.000 0.000 0.000 0.000 k
  356.7600 6.4800 m
  356.0400 4.3200 L
  354.2400 2.8800 L
  352.0800 2.1600 L
  349.9200 2.8800 L
  348.1200 4.3200 L
  347.7600 6.4800 L
  348.1200 9.0000 L
  349.9200 10.4400 L
  352.0800 11.1600 L
  354.2400 10.4400 L
  356.0400 9.0000 L
  356.7600 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  392.7600 6.4800 m
  392.0400 4.3200 L
  390.2400 2.8800 L
  388.0800 2.1600 L
  385.9200 2.8800 L
  384.1200 4.3200 L
  383.7600 6.4800 L
  384.1200 9.0000 L
  385.9200 10.4400 L
  388.0800 11.1600 L
  390.2400 10.4400 L
  392.0400 9.0000 L
  392.7600 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  329.7600 6.4800 m
  329.0400 4.3200 L
  327.2400 2.8800 L
  325.0800 2.1600 L
  322.9200 2.8800 L
  321.1200 4.3200 L
  320.7600 6.4800 L
  321.1200 9.0000 L
  322.9200 10.4400 L
  325.0800 11.1600 L
  327.2400 10.4400 L
  329.0400 9.0000 L
  329.7600 6.4800 L
B
U
u
  352.0800 11.1600 m
  370.0800 65.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  388.0800 11.1600 m
  370.0800 65.1600 L
S
U
u
  325.0800 11.1600 m
  370.0800 65.1600 L
S
U
u
  0.000 0.000 0.000 0.000 k
  437.7600 6.4800 m
  437.0400 4.3200 L
  435.2400 2.8800 L
  433.0800 2.1600 L
  430.9200 2.8800 L
  429.1200 4.3200 L
  428.7600 6.4800 L
  429.1200 9.0000 L
  430.9200 10.4400 L
  433.0800 11.1600 L
  435.2400 10.4400 L
  437.0400 9.0000 L
  437.7600 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  473.7600 6.4800 m
  473.0400 4.3200 L
  471.2400 2.8800 L
  469.0800 2.1600 L
  466.9200 2.8800 L
  465.1200 4.3200 L
  464.7600 6.4800 L
  465.1200 9.0000 L
  466.9200 10.4400 L
  469.0800 11.1600 L
  471.2400 10.4400 L
  473.0400 9.0000 L
  473.7600 6.4800 L
B
U
u
  433.0800 11.1600 m
  451.0800 65.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  469.0800 11.1600 m
  451.0800 65.1600 L
S
U
u
  0.000 0.000 0.000 0.000 k
  518.4000 6.4800 m
  517.6800 4.3200 L
  515.8800 2.8800 L
  513.7200 2.1600 L
  511.5600 2.8800 L
  509.7600 4.3200 L
  509.4000 6.4800 L
  509.7600 9.0000 L
  511.5600 10.4400 L
  513.7200 11.1600 L
  515.8800 10.4400 L
  517.6800 9.0000 L
  518.4000 6.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  554.4000 6.4800 m
  553.6800 4.3200 L
  551.8800 2.8800 L
  549.7200 2.1600 L
  547.5600 2.8800 L
  545.7600 4.3200 L
  545.4000 6.4800 L
  545.7600 9.0000 L
  547.5600 10.4400 L
  549.7200 11.1600 L
  551.8800 10.4400 L
  553.6800 9.0000 L
  554.4000 6.4800 L
B
U
u
  513.7200 11.1600 m
  531.7200 65.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  549.7200 11.1600 m
  531.7200 65.1600 L
S
U
u
  370.0800 110.1600 m
  496.0800 226.8000 L
  442.0800 110.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  496.0800 226.8000 m
  612.7200 110.1600 L
S
U
u
  0.000 0.000 0.000 1.000 K
  496.0800 226.8000 m
  531.7200 110.1600 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 139.6800 237.6000 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(S0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 58.6800 138.9600 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 130.6800 183.6000 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 202.3200 171.7200 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 139.6800 91.0800 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 376.9200 173.5200 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S0\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 421.9200 134.6400 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S0\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 484.9200 152.2800 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S0\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 538.5600 179.2800 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S0\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 277.9200 47.8800 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S1\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 412.9200 35.6400 0 Tp
TP
95.549927 Tz
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Dia\(S2\)/2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 504.0000 39.9600 0 Tp
TP
96.670747 Tz
/_Helvetica 23.7500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(...\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  136.4400 168.1200 m
  137.1600 170.6400 L
  138.6000 172.0800 L
  141.1200 172.8000 L
  143.2800 172.0800 L
  144.7200 170.6400 L
  145.4400 168.1200 L
  144.7200 165.9600 L
  143.2800 164.5200 L
  141.1200 163.8000 L
  138.6000 164.5200 L
  137.1600 165.9600 L
  136.4400 168.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  28.4400 119.1600 m
  29.1600 131.7600 L
  31.3200 144.0000 L
  34.5600 156.2400 L
  39.2400 167.7600 L
  45.3600 179.2800 L
  52.2000 189.7200 L
  60.4800 199.4400 L
  69.8400 208.0800 L
  79.9200 215.6400 L
  90.7200 222.1200 L
  102.2400 227.5200 L
  114.1200 231.4800 L
  126.3600 234.3600 L
  138.9600 235.8000 L
  151.9200 235.8000 L
  164.5200 234.3600 L
  176.4000 231.4800 L
  188.2800 227.5200 L
  199.8000 222.1200 L
  210.6000 215.6400 L
  220.6800 208.0800 L
  230.0400 199.4400 L
  238.3200 189.7200 L
  245.1600 179.2800 L
  251.2800 167.7600 L
  255.9600 156.2400 L
  259.2000 144.0000 L
  261.3600 131.7600 L
  262.0800 119.1600 L
  261.3600 106.5600 L
  259.2000 93.9600 L
  255.9600 81.7200 L
  251.2800 70.2000 L
  245.1600 58.6800 L
  238.3200 48.2400 L
  230.0400 38.5200 L
  220.6800 29.8800 L
  210.6000 22.3200 L
  199.8000 15.8400 L
  188.2800 10.4400 L
  176.4000 6.4800 L
  164.5200 3.6000 L
  151.9200 2.1600 L
  138.9600 2.1600 L
  126.3600 3.6000 L
  114.1200 6.4800 L
  102.2400 10.4400 L
  90.7200 15.8400 L
  79.9200 22.3200 L
  69.8400 29.8800 L
  60.4800 38.5200 L
  52.2000 48.2400 L
  45.3600 58.6800 L
  39.2400 70.2000 L
  34.5600 81.7200 L
  31.3200 93.9600 L
  29.1600 106.5600 L
  28.4400 119.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  109.4400 152.6400 m
  110.1600 158.7600 L
  112.3200 164.5200 L
  115.5600 169.9200 L
  119.8800 174.2400 L
  125.2800 177.8400 L
  131.0400 180.3600 L
  137.5200 181.8000 L
  144.3600 181.8000 L
  150.8400 180.3600 L
  156.6000 177.8400 L
  162.0000 174.2400 L
  166.3200 169.9200 L
  169.2000 164.5200 L
  171.3600 158.7600 L
  172.0800 152.6400 L
  171.3600 146.5200 L
  169.2000 141.1200 L
  166.3200 135.7200 L
  162.0000 131.0400 L
  156.6000 127.4400 L
  150.8400 124.9200 L
  144.3600 123.8400 L
  137.5200 123.8400 L
  131.0400 124.9200 L
  125.2800 127.4400 L
  119.8800 131.0400 L
  115.5600 135.7200 L
  112.3200 141.1200 L
  110.1600 146.5200 L
  109.4400 152.6400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  118.4400 65.1600 m
  119.1600 71.2800 L
  120.9600 77.0400 L
  124.2000 82.0800 L
  128.5200 86.4000 L
  133.5600 89.6400 L
  139.3200 91.4400 L
  145.4400 92.1600 L
  151.5600 91.4400 L
  157.3200 89.6400 L
  162.3600 86.4000 L
  166.6800 82.0800 L
  169.5600 77.0400 L
  171.3600 71.2800 L
  172.0800 65.1600 L
  171.3600 59.0400 L
  169.5600 53.2800 L
  166.6800 48.2400 L
  162.3600 43.9200 L
  157.3200 40.6800 L
  151.5600 38.8800 L
  145.4400 38.1600 L
  139.3200 38.8800 L
  133.5600 40.6800 L
  128.5200 43.9200 L
  124.2000 48.2400 L
  120.9600 53.2800 L
  119.1600 59.0400 L
  118.4400 65.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  46.4400 110.1600 m
  47.1600 116.2800 L
  48.9600 122.0400 L
  52.2000 127.0800 L
  56.5200 131.4000 L
  61.5600 134.6400 L
  67.3200 136.4400 L
  73.4400 137.1600 L
  79.5600 136.4400 L
  85.3200 134.6400 L
  90.3600 131.4000 L
  94.6800 127.0800 L
  97.9200 122.0400 L
  99.7200 116.2800 L
  100.4400 110.1600 L
  99.7200 104.0400 L
  97.9200 98.2800 L
  94.6800 93.2400 L
  90.3600 88.9200 L
  85.3200 85.6800 L
  79.5600 83.8800 L
  73.4400 83.1600 L
  67.3200 83.8800 L
  61.5600 85.6800 L
  56.5200 88.9200 L
  52.2000 93.2400 L
  48.9600 98.2800 L
  47.1600 104.0400 L
  46.4400 110.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  127.4400 159.1200 m
  128.1600 161.6400 L
  129.6000 163.0800 L
  132.1200 163.8000 L
  134.2800 163.0800 L
  135.7200 161.6400 L
  136.4400 159.1200 L
  135.7200 156.9600 L
  134.2800 155.5200 L
  132.1200 154.8000 L
  129.6000 155.5200 L
  128.1600 156.9600 L
  127.4400 159.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  145.4400 141.1200 m
  146.1600 143.6400 L
  147.6000 145.0800 L
  150.1200 145.8000 L
  152.2800 145.0800 L
  153.7200 143.6400 L
  154.4400 141.1200 L
  153.7200 139.3200 L
  152.2800 137.8800 L
  150.1200 137.1600 L
  147.6000 137.8800 L
  146.1600 139.3200 L
  145.4400 141.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  136.4400 78.4800 m
  137.1600 81.0000 L
  138.6000 82.4400 L
  141.1200 83.1600 L
  143.2800 82.4400 L
  144.7200 81.0000 L
  145.4400 78.4800 L
  144.7200 76.3200 L
  143.2800 74.8800 L
  141.1200 74.1600 L
  138.6000 74.8800 L
  137.1600 76.3200 L
  136.4400 78.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  136.4400 60.4800 m
  137.1600 63.0000 L
  138.6000 64.4400 L
  141.1200 65.1600 L
  143.2800 64.4400 L
  144.7200 63.0000 L
  145.4400 60.4800 L
  144.7200 58.3200 L
  143.2800 56.8800 L
  141.1200 56.1600 L
  138.6000 56.8800 L
  137.1600 58.3200 L
  136.4400 60.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  64.4400 123.4800 m
  65.1600 126.0000 L
  66.6000 127.4400 L
  69.1200 128.1600 L
  71.2800 127.4400 L
  72.7200 126.0000 L
  73.4400 123.4800 L
  72.7200 121.3200 L
  71.2800 119.8800 L
  69.1200 119.1600 L
  66.6000 119.8800 L
  65.1600 121.3200 L
  64.4400 123.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  64.4400 105.4800 m
  65.1600 108.0000 L
  66.6000 109.4400 L
  69.1200 110.1600 L
  71.2800 109.4400 L
  72.7200 108.0000 L
  73.4400 105.4800 L
  72.7200 103.3200 L
  71.2800 101.8800 L
  69.1200 101.1600 L
  66.6000 101.8800 L
  65.1600 103.3200 L
  64.4400 105.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  82.4400 114.4800 m
  83.1600 117.0000 L
  84.6000 118.4400 L
  87.1200 119.1600 L
  89.2800 118.4400 L
  90.7200 117.0000 L
  91.4400 114.4800 L
  90.7200 112.3200 L
  89.2800 110.8800 L
  87.1200 110.1600 L
  84.6000 110.8800 L
  83.1600 112.3200 L
  82.4400 114.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  154.4400 51.4800 m
  155.1600 54.0000 L
  156.6000 55.4400 L
  159.1200 56.1600 L
  161.2800 55.4400 L
  162.7200 54.0000 L
  163.4400 51.4800 L
  162.7200 49.3200 L
  161.2800 47.8800 L
  159.1200 47.1600 L
  156.6000 47.8800 L
  155.1600 49.3200 L
  154.4400 51.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  190.0800 141.1200 m
  190.8000 147.9600 L
  192.9600 154.0800 L
  196.2000 159.8400 L
  200.5200 164.8800 L
  205.9200 168.4800 L
  211.6800 171.3600 L
  218.1600 172.8000 L
  225.0000 172.8000 L
  231.4800 171.3600 L
  237.2400 168.4800 L
  242.6400 164.8800 L
  246.9600 159.8400 L
  250.2000 154.0800 L
  252.3600 147.9600 L
  253.0800 141.1200 L
  252.3600 135.0000 L
  250.2000 128.8800 L
  246.9600 123.1200 L
  242.6400 118.0800 L
  237.2400 114.4800 L
  231.4800 111.6000 L
  225.0000 110.1600 L
  218.1600 110.1600 L
  211.6800 111.6000 L
  205.9200 114.4800 L
  200.5200 118.0800 L
  196.2000 123.1200 L
  192.9600 128.8800 L
  190.8000 135.0000 L
  190.0800 141.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  212.7600 154.8000 m
  213.1200 156.9600 L
  214.9200 158.7600 L
  217.0800 159.1200 L
  219.2400 158.7600 L
  221.0400 156.9600 L
  221.7600 154.8000 L
  221.0400 152.6400 L
  219.2400 150.8400 L
  217.0800 150.1200 L
  214.9200 150.8400 L
  213.1200 152.6400 L
  212.7600 154.8000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  203.7600 132.4800 m
  204.1200 135.0000 L
  205.9200 136.4400 L
  208.0800 137.1600 L
  210.2400 136.4400 L
  212.0400 135.0000 L
  212.7600 132.4800 L
  212.0400 130.3200 L
  210.2400 128.8800 L
  208.0800 128.1600 L
  205.9200 128.8800 L
  204.1200 130.3200 L
  203.7600 132.4800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  492.8400 284.4000 m
  493.5600 285.4800 L
  494.6400 285.8400 L
  495.7200 285.4800 L
  496.0800 284.4000 L
  495.7200 283.3200 L
  494.6400 282.9600 L
  493.5600 283.3200 L
  492.8400 284.4000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  455.7600 267.1200 m
  456.1200 274.6800 L
  458.2800 281.8800 L
  461.5200 288.7200 L
  466.2000 294.4800 L
  471.6000 299.5200 L
  478.0800 303.4800 L
  484.9200 306.3600 L
  492.4800 307.8000 L
  499.6800 307.8000 L
  506.8800 306.3600 L
  513.7200 303.4800 L
  520.2000 299.5200 L
  525.6000 294.4800 L
  530.2800 288.7200 L
  533.5200 281.8800 L
  535.6800 274.6800 L
  536.4000 267.1200 L
  535.6800 259.9200 L
  533.5200 252.7200 L
  530.2800 245.8800 L
  525.6000 240.1200 L
  520.2000 235.0800 L
  513.7200 231.1200 L
  506.8800 228.2400 L
  499.6800 226.8000 L
  492.4800 226.8000 L
  484.9200 228.2400 L
  478.0800 231.1200 L
  471.6000 235.0800 L
  466.2000 240.1200 L
  461.5200 245.8800 L
  458.2800 252.7200 L
  456.1200 259.9200 L
  455.7600 267.1200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  483.4800 279.0000 m
  484.2000 282.6000 L
  486.0000 285.4800 L
  489.2400 287.6400 L
  492.4800 289.0800 L
  496.4400 289.0800 L
  500.0400 287.6400 L
  502.9200 285.4800 L
  504.7200 282.6000 L
  505.0800 279.0000 L
  504.7200 275.4000 L
  502.9200 272.5200 L
  500.0400 270.3600 L
  496.4400 268.9200 L
  492.4800 268.9200 L
  489.2400 270.3600 L
  486.0000 272.5200 L
  484.2000 275.4000 L
  483.4800 279.0000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  486.7200 248.7600 m
  487.4400 252.3600 L
  489.6000 255.2400 L
  492.4800 257.4000 L
  496.0800 258.1200 L
  499.6800 257.4000 L
  502.5600 255.2400 L
  504.7200 252.3600 L
  505.0800 248.7600 L
  504.7200 245.1600 L
  502.5600 241.9200 L
  499.6800 240.1200 L
  496.0800 239.4000 L
  492.4800 240.1200 L
  489.6000 241.9200 L
  487.4400 245.1600 L
  486.7200 248.7600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  461.8800 264.2400 m
  462.6000 267.8400 L
  464.4000 270.7200 L
  467.6400 272.8800 L
  471.2400 273.6000 L
  474.8400 272.8800 L
  477.7200 270.7200 L
  479.8800 267.8400 L
  480.6000 264.2400 L
  479.8800 260.6400 L
  477.7200 257.4000 L
  474.8400 255.6000 L
  471.2400 254.8800 L
  467.6400 255.6000 L
  464.4000 257.4000 L
  462.6000 260.6400 L
  461.8800 264.2400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  489.9600 281.1600 m
  490.3200 282.6000 L
  491.4000 282.9600 L
  492.4800 282.6000 L
  492.8400 281.1600 L
  492.4800 280.0800 L
  491.4000 279.7200 L
  490.3200 280.0800 L
  489.9600 281.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  496.0800 275.0400 m
  496.4400 276.1200 L
  497.5200 276.4800 L
  498.6000 276.1200 L
  499.3200 275.0400 L
  498.6000 273.9600 L
  497.5200 273.6000 L
  496.4400 273.9600 L
  496.0800 275.0400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  492.8400 253.4400 m
  493.5600 254.5200 L
  494.6400 254.8800 L
  495.7200 254.5200 L
  496.0800 253.4400 L
  495.7200 252.0000 L
  494.6400 251.6400 L
  493.5600 252.0000 L
  492.8400 253.4400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  492.8400 246.9600 m
  493.5600 248.0400 L
  494.6400 248.7600 L
  495.7200 248.0400 L
  496.0800 246.9600 L
  495.7200 245.8800 L
  494.6400 245.5200 L
  493.5600 245.8800 L
  492.8400 246.9600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  468.0000 268.9200 m
  468.3600 270.0000 L
  469.4400 270.3600 L
  470.8800 270.0000 L
  471.2400 268.9200 L
  470.8800 267.8400 L
  469.4400 267.1200 L
  468.3600 267.8400 L
  468.0000 268.9200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  468.0000 262.8000 m
  468.3600 263.8800 L
  469.4400 264.2400 L
  470.8800 263.8800 L
  471.2400 262.8000 L
  470.8800 261.3600 L
  469.4400 261.0000 L
  468.3600 261.3600 L
  468.0000 262.8000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  474.1200 265.6800 m
  474.8400 266.7600 L
  475.9200 267.1200 L
  477.0000 266.7600 L
  477.3600 265.6800 L
  477.0000 264.6000 L
  475.9200 264.2400 L
  474.8400 264.6000 L
  474.1200 265.6800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  499.3200 244.0800 m
  499.6800 245.1600 L
  500.7600 245.5200 L
  501.8400 245.1600 L
  502.2000 244.0800 L
  501.8400 243.0000 L
  500.7600 242.2800 L
  499.6800 243.0000 L
  499.3200 244.0800 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  511.2000 275.0400 m
  511.9200 278.6400 L
  513.7200 282.2400 L
  516.6000 284.4000 L
  520.2000 285.8400 L
  524.1600 285.8400 L
  527.7600 284.4000 L
  530.6400 282.2400 L
  532.4400 278.6400 L
  533.1600 275.0400 L
  532.4400 271.4400 L
  530.6400 268.2000 L
  527.7600 265.6800 L
  524.1600 264.2400 L
  520.2000 264.2400 L
  516.6000 265.6800 L
  513.7200 268.2000 L
  511.9200 271.4400 L
  511.2000 275.0400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  519.1200 279.7200 m
  519.4800 280.8000 L
  520.5600 281.1600 L
  521.6400 280.8000 L
  522.3600 279.7200 L
  521.6400 278.6400 L
  520.5600 278.2800 L
  519.4800 278.6400 L
  519.1200 279.7200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  515.8800 271.8000 m
  516.6000 273.2400 L
  517.6800 273.6000 L
  518.7600 273.2400 L
  519.1200 271.8000 L
  518.7600 270.7200 L
  517.6800 270.3600 L
  516.6000 270.7200 L
  515.8800 271.8000 L
B
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial -152 1479 a Fk(Figure)30 b(1:)39 b(Con)n(v)n(erting)29
b(a)h(laminar)f(family)f(in)n(to)i(a)g(tree.)40 b(Note)30
b(that)g(the)g(v)-5 b(alues)29 b(w)n(e)f(put)j(on)f(the)g(links)e
(ensure)i(that)h(the)-152 1566 y(em)n(b)r(edding)e(is)g(an)g
(expansion.)-152 1813 y Fm(Clearly)37 b(if)f Fl(d)p Fm(\()p
Fl(u;)13 b(v)s Fm(\))38 b Fl(>)f Fm(2)596 1781 y Fg(i)p
Ff(+2)700 1813 y Fm(,)i(then)34 b Fl(u)i Fm(and)f Fl(v)k
Fm(cannot)c(b)r(e)h(in)f(the)-152 1900 y(same)30 b(cluster)g(in)f
Fl(D)452 1908 y Fg(i)p Ff(+1)556 1900 y Fm(,)h(i.e.,)h
Fl(D)819 1908 y Fg(i)p Ff(+1)952 1900 y Fm(separates)f(\()p
Fl(u;)14 b(v)s Fm(\).)44 b(F)-6 b(rom)29 b(\(b\))-152
1988 y(ab)r(o)n(v)n(e,)i(\()p Fl(u;)13 b(v)s Fm(\))29
b(cannot)g(b)r(e)g(at)g(lev)n(el)h Fl(i)p Fm(.)45 b(Let)29
b Fl(j)1206 1956 y Fo(\003)1272 1988 y Fm(b)r(e)g(the)g(smallest)i
Fl(i)-152 2075 y Fm(suc)n(h)21 b(that)g Fl(d)p Fm(\()p
Fl(u;)13 b(v)s Fm(\))22 b Fq(\024)f Fm(2)538 2043 y Fg(i)p
Ff(+2)641 2075 y Fm(.)34 b(Th)n(us)21 b(Pr[\()p Fl(u;)14
b(v)s Fm(\))25 b(is)h(at)g(lev)n(el)g Fl(i)p Fm(])c(=)f(0)h(for)-152
2162 y(an)n(y)k Fl(i)c(<)g(j)t Fq(\003)p Fm(.)37 b(F)-6
b(or)27 b Fl(i)22 b Fq(\025)g Fl(j)559 2130 y Fo(\003)596
2162 y Fm(,)k(w)n(e)h(shall)g(b)r(ound)e(the)h(probabilit)n(y)g(that)
-152 2249 y(\()p Fl(u;)14 b(v)s Fm(\))25 b(is)h(at)g(lev)n(el)g
Fl(i)p Fm(.)-152 2423 y(F)-6 b(rom)26 b(\(a\))g(and)f(\(b\))g(ab)r(o)n
(v)n(e,)h(for)h(an)n(y)e Fl(i)c Fq(\025)g Fl(j)1116 2392
y Fo(\003)1153 2423 y Fm(,)-152 2598 y(Pr)q([\()p Fl(u;)13
b(v)s Fm(\))26 b(is)g(at)g(lev)n(el)g Fl(i)p Fm(])-56
2748 y(=)74 b(Pr)q([)p Fl(D)245 2756 y Fg(i)297 2748
y Fm(separates)27 b(\()p Fl(u;)13 b(v)s Fm(\)])k Fq(\001)100
2860 y Fm(Pr[)p Fq(6)22 b(9)p Fl(j)j(>)c(i)h Fm(:)p Fl(D)537
2868 y Fg(j)596 2860 y Fm(separates)27 b(\()p Fl(u;)13
b(v)s Fm(\))21 b Fq(j)h Fl(D)1235 2868 y Fg(i)1287 2860
y Fm(separates)27 b(\()p Fl(u;)13 b(v)s Fm(\)])-56 2972
y Fq(\024)74 b Fm(Pr)q([)p Fl(D)245 2980 y Fg(i)297 2972
y Fm(separates)27 b(\()p Fl(u;)13 b(v)s Fm(\)])-152 3210
y(F)-6 b(or)24 b(an)n(y)f Fl(j)162 3178 y Fo(\003)220
3210 y Fq(\024)f Fl(j)k Fq(\024)21 b Fl(\016)s Fm(,)j(let)g
Fl(K)701 3178 y Fg(u)696 3223 y(j)766 3210 y Fm(b)r(e)g(the)f(set)h(of)
h(v)n(ertices)f(in)g Fl(V)40 b Fm(closer)-152 3306 y(than)28
b(2)68 3274 y Fg(j)128 3306 y Fm(to)g(v)n(ertex)f Fl(u)p
Fm(,)h(and)g(let)g Fl(k)859 3274 y Fg(u)857 3320 y(j)924
3306 y Fm(=)d Fq(j)p Fl(K)1100 3274 y Fg(u)1095 3320
y(j)1141 3306 y Fq(j)p Fm(.)41 b(W)-6 b(e)27 b(de\014ne)g
Fl(K)1652 3274 y Fg(v)1647 3320 y(j)1717 3306 y Fm(and)-152
3402 y Fl(k)-110 3370 y Fg(v)-112 3416 y(j)-47 3402 y
Fm(similarly)-6 b(.)36 b(F)-6 b(or)26 b Fl(j)g(<)21 b(j)602
3370 y Fo(\003)638 3402 y Fm(,)26 b(w)n(e)g(let)g Fl(k)951
3370 y Fg(u)949 3416 y(j)1014 3402 y Fm(=)21 b(0.)1154
3370 y Ff(2)-152 3576 y Fm(No)n(w)33 b(consider)h(the)e(clustering)i
(step)f(at)g(lev)n(el)g Fl(i)g Fq(\025)g Fl(j)t Fq(\003)p
Fm(.)57 b(In)33 b(eac)n(h)-152 3663 y(iteration,)28 b(all)f(unassigned)
f(v)n(ertices)h Fl(v)i Fm(suc)n(h)c(that)h Fl(d)p Fm(\()p
Fl(v)s(;)13 b(\031)s Fm(\()p Fl(l)q Fm(\)\))21 b Fq(\024)h
Fl(\014)1814 3671 y Fg(i)-152 3751 y Fm(assign)27 b(themselv)n(es)e(to)
g Fl(\031)s Fm(\()p Fl(l)q Fm(\).)34 b(F)-6 b(or)25 b(some)h(initial)g
(iterations)h(of)f(this)-152 3838 y(pro)r(cedure,)i(b)r(oth)e
Fl(u)h Fm(and)f Fl(v)k Fm(remain)d(unassigned.)38 b(Then)27
b(at)g(some)-152 3925 y(step)19 b Fl(l)q Fm(,)h(at)f(least)h(one)f(of)g
Fl(u)g Fm(and)g Fl(v)i Fm(gets)e(assigned)h(to)f(the)f(cen)n(ter)h
Fl(\031)s Fm(\()p Fl(l)q Fm(\).)-152 4012 y(W)-6 b(e)20
b(sa)n(y)f(that)h(cen)n(ter)f Fl(\031)s Fm(\()p Fl(l)q
Fm(\))h Fj(settles)h Fm(the)e(edge)h(\()p Fl(u;)14 b(v)s
Fm(\))19 b(at)h(lev)n(el)g Fl(i)g Fm(if)g(it)g(is)-152
4099 y(the)h(\014rst)h(cen)n(ter)f(to)h(whic)n(h)f(at)h(least)g(one)g
(of)g Fl(u)g Fm(and)f Fl(v)j Fm(get)e(assigned.)-152
4186 y(Note)29 b(that)g(exactly)g(one)g(cen)n(ter)g(settles)h(an)n(y)f
(edge)g(\()p Fl(u;)13 b(v)s Fm(\))29 b(at)g(an)n(y)-152
4274 y(particular)k(lev)n(el.)54 b(F)-6 b(urther,)33
b(w)n(e)f(sa)n(y)g(that)g(cen)n(ter)g Fl(\031)s Fm(\()p
Fl(l)q Fm(\))f Fj(cuts)i Fm(the)-152 4361 y(edge)18 b
Fl(e)j Fm(=)g(\()p Fl(u;)13 b(v)s Fm(\))k(at)g(lev)n(el)h
Fl(i)f Fm(if)h(it)g(settles)g Fl(e)e Fm(at)i(this)f(lev)n(el,)j(but)c
(exactly)-152 4448 y(one)34 b(of)h Fl(u)f Fm(and)g Fl(v)j
Fm(is)d(assigned)h(to)g Fl(\031)s Fm(\()p Fl(l)q Fm(\))e(at)h(lev)n(el)
g Fl(i)p Fm(.)60 b(Clearly)-6 b(,)37 b Fl(D)1814 4456
y Fg(i)-152 4535 y Fm(separates)24 b(\()p Fl(u;)13 b(v)s
Fm(\))23 b(i\013)g(some)g(cen)n(ter)g Fl(w)h Fm(cuts)f(it)g(at)g(this)f
(lev)n(el.)34 b(Hence)-152 4622 y(Pr)q([)p Fl(D)15 4630
y Fg(i)67 4622 y Fm(separates)27 b(\()p Fl(u;)13 b(v)s
Fm(\)])22 b(=)703 4566 y Fd(P)784 4645 y Fg(w)847 4622
y Fm(Pr[)p Fl(w)28 b Fm(cuts)e(\()p Fl(u;)13 b(v)s Fm(\))25
b(at)h(lev)n(el)g Fl(i)p Fm(].)-152 4797 y(W)-6 b(e)36
b(sa)n(y)h(that)f(cen)n(ter)g Fl(w)i Fj(cuts)g Fl(u)g
Fj(out)f Fm(of)g(\()p Fl(u;)13 b(v)s Fm(\))36 b(at)h(lev)n(el)f
Fl(i)h Fm(if)g Fl(w)-152 4884 y Fm(cuts)26 b(\()p Fl(u;)13
b(v)s Fm(\))25 b(at)h(this)g(lev)n(el)f(and)h Fl(u)f
Fm(is)h(assigned)h(to)f Fl(w)h Fm(\(and)e Fl(v)k Fm(is)d(not)-152
4971 y(assigned)36 b(to)g Fl(w)r Fm(\))f(at)g(this)g(lev)n(el.)63
b(F)-6 b(or)35 b(eac)n(h)g(cen)n(ter)g Fl(w)r Fm(,)i(w)n(e)f(shall)-152
5058 y(b)r(ound)c(the)h(probabilit)n(y)f(that)h Fl(w)i
Fm(cuts)d Fl(u)h Fm(out)g(of)h(\()p Fl(u;)13 b(v)s Fm(\))32
b(at)h(lev)n(el)-152 5145 y Fl(i)p Fm(.)51 b(Let)31 b(us)f(arrange)i
(the)f(cen)n(ters)g(in)g Fl(K)1042 5114 y Fg(u)1037 5159
y(i)1114 5145 y Fm(in)g(increasing)h(order)f(of)p -152
5217 797 4 v -148 5271 a Ff(2)-113 5303 y Fm(Though)e(the)g(notation)h
(do)r(es)g(not)f(explicitly)g(suggest)i(so,)g(these)-152
5378 y Fl(k)-110 5346 y Fg(u)-112 5391 y(j)-69 5378 y
Fm(,)26 b(etc.)35 b(are)26 b(then)f(de\014ned)g(with)h(resp)r(ect)g(to)
f(the)h(edge)g(\()p Fl(u;)13 b(v)s Fm(\).)2040 1813 y(distance)23
b(from)g Fl(u)p Fm(,)h(sa)n(y)f Fl(w)2788 1821 y Ff(1)2822
1813 y Fl(;)13 b(w)2911 1821 y Ff(2)2946 1813 y Fl(;)g(:)g(:)g(:)h(;)f
(w)3172 1822 y Fg(k)3206 1805 y Fc(u)3205 1843 y(i)3249
1813 y Fm(.)34 b(F)-6 b(or)22 b(a)h(cen)n(ter)f Fl(w)3779
1821 y Fg(s)3835 1813 y Fm(to)h(cut)2040 1900 y(\()p
Fl(u;)13 b(v)s Fm(\))23 b(suc)n(h)f(that)g(only)g Fl(u)h
Fm(is)g(assigned)h(to)f Fl(w)3327 1908 y Fg(s)3360 1900
y Fm(,)g(it)g(m)n(ust)f(b)r(e)g(the)h(case)2040 1988
y(that)2077 2214 y(\(a\))j Fl(d)p Fm(\()p Fl(u;)13 b(w)2404
2222 y Fg(s)2437 2214 y Fm(\))22 b Fq(\024)f Fl(\014)2613
2222 y Fg(i)2639 2214 y Fm(.)2077 2358 y(\(b\))k Fl(d)p
Fm(\()p Fl(v)s(;)13 b(w)2404 2366 y Fg(s)2438 2358 y
Fm(\))21 b Fl(>)g(\014)2613 2366 y Fg(i)2639 2358 y Fm(.)2077
2501 y(\(c\))26 b Fl(w)2252 2509 y Fg(s)2311 2501 y Fm(settles)g
Fl(e)p Fm(.)2040 2728 y(Th)n(us)35 b Fl(\014)2287 2736
y Fg(i)2349 2728 y Fm(m)n(ust)f(lie)i(in)f([)p Fl(d)p
Fm(\()p Fl(u;)14 b(w)2984 2736 y Fg(s)3017 2728 y Fm(\))p
Fl(;)f(d)p Fm(\()p Fl(v)s(;)g(w)3280 2736 y Fg(s)3313
2728 y Fm(\)])35 b(\(see)h(\014gure)f(3\).)63 b(By)2040
2815 y(triangle)28 b(inequalit)n(y)-6 b(,)27 b Fl(d)p
Fm(\()p Fl(v)s(;)13 b(w)2895 2823 y Fg(s)2928 2815 y
Fm(\))24 b Fq(\024)g Fl(d)p Fm(\()p Fl(v)s(;)12 b(u)p
Fm(\))18 b(+)g Fl(d)p Fm(\()p Fl(u;)13 b(w)3582 2823
y Fg(s)3615 2815 y Fm(\),)28 b(and)f(hence)2040 2902
y(the)i(in)n(terv)l(al)h([)p Fl(d)p Fm(\()p Fl(u;)13
b(w)2682 2910 y Fg(s)2715 2902 y Fm(\))p Fl(;)g(d)p Fm(\()p
Fl(v)s(;)g(w)2978 2910 y Fg(s)3012 2902 y Fm(\)])29 b(is)h(of)h(length)
f(at)f(most)h Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\).)2040
2990 y(Since)20 b Fl(\014)2278 2998 y Fg(i)2325 2990
y Fm(is)g(distributed)g(uniformly)g(in)g([2)3271 2958
y Fg(i)p Fo(\000)p Ff(1)3376 2990 y Fl(;)13 b Fm(2)3448
2958 y Fg(i)3475 2990 y Fm(],)22 b(the)e(probabilit)n(y)2040
3077 y(that)34 b Fl(\014)2258 3085 y Fg(i)2318 3077 y
Fm(falls)i(in)e(the)f(bad)h(in)n(terv)l(al)f(is)i(at)f(most)g(\()p
Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\))p Fl(=)p Fm(2)3876
3045 y Fg(i)p Fo(\000)p Ff(1)3981 3077 y Fm(\).)2040
3164 y(Moreo)n(v)n(er)32 b(for)f(suc)n(h)g(a)g(v)l(alue)f(of)i
Fl(\014)3092 3172 y Fg(i)3118 3164 y Fm(,)h(an)n(y)d(of)h
Fl(w)3469 3172 y Ff(1)3504 3164 y Fl(;)13 b(w)3593 3172
y Ff(2)3628 3164 y Fl(;)g(:)g(:)g(:)g(;)g(w)3853 3172
y Fg(s)3917 3164 y Fm(can)2040 3251 y(settle)30 b(\()p
Fl(u;)13 b(v)s Fm(\))29 b(at)h(lev)n(el)g Fl(i)f Fm(and)g(hence)h(the)f
(\014rst)g(amongst)h(these)g(in)2040 3338 y(the)f(p)r(erm)n(utation)h
Fl(\031)i Fm(will.)47 b(Since)30 b Fl(\031)i Fm(is)e(a)g(random)f(p)r
(erm)n(utation,)2040 3425 y(the)g(probabilit)n(y)g(that)f
Fl(w)2796 3433 y Fg(s)2858 3425 y Fm(is)i(the)e(one)h(to)h(settle)f(\()
p Fl(u;)13 b(v)s Fm(\))29 b(at)g(lev)n(el)g Fl(i)2040
3513 y Fm(is)d(at)g(most)g(1)p Fl(=s)p Fm(.)2040 3687
y(A)n(t)c(this)g(p)r(oin)n(t,)i(it)e(is)h(then)f(easy)h(to)f(see)h
(that)f(the)g(probabilit)n(y)h(that)2040 3774 y Fl(D)2103
3782 y Fg(i)2155 3774 y Fm(separates)k(\()p Fl(u;)13
b(v)s Fm(\))26 b(is)g(at)g(most)2040 3949 y(Pr[)p Fl(D)2206
3957 y Fg(i)2259 3949 y Fm(separates)h(\()p Fl(u;)13
b(v)s Fm(\)])2276 4174 y Fq(\024)2429 4071 y Fg(k)2463
4050 y Fc(u)2462 4087 y(i)2410 4103 y Fd(X)2413 4260
y Fg(s)p Ff(=1)2521 4174 y Fm(\()p Fl(d)p Fm(\()p Fl(u;)g(v)s
Fm(\))p Fl(=)p Fm(2)2845 4138 y Fg(i)p Fo(\000)p Ff(1)2950
4174 y Fm(\))k Fq(\001)3046 4126 y Fm(1)p 3046 4157 39
4 v 3047 4225 a Fl(s)3111 4174 y Fm(+)3209 4071 y Fg(k)3243
4050 y Fc(v)3242 4087 y(i)3188 4103 y Fd(X)3190 4260
y Fg(s)p Ff(=1)3299 4174 y Fm(\()p Fl(d)p Fm(\()p Fl(u;)c(v)s
Fm(\))p Fl(=)p Fm(2)3623 4138 y Fg(i)p Fo(\000)p Ff(1)3728
4174 y Fm(\))k Fq(\001)3823 4126 y Fm(1)p 3823 4157 V
3824 4225 a Fl(s)2276 4371 y Fq(\024)74 b Fm(\()p Fl(d)p
Fm(\()p Fl(u;)13 b(v)s Fm(\))p Fl(=)p Fm(2)2734 4335
y Fg(i)p Fo(\000)p Ff(1)2839 4371 y Fm(\)\(ln)g Fl(k)3018
4335 y Fg(u)3016 4384 y(i)3076 4371 y Fm(+)k(ln)c Fl(k)3272
4335 y Fg(v)3270 4384 y(i)3309 4371 y Fm(\))p Fl(:)2040
4506 y Fm(Th)n(us)33 b(eac)n(h)g Fl(i)h Fm(con)n(tributes)f(at)g(most)g
Fl(O)r Fm(\(log)16 b Fl(n)p Fm(\))33 b(to)g(the)g(exp)r(ected)2040
4593 y(v)l(alue)20 b(of)i Fl(d)2356 4561 y Fg(T)2404
4593 y Fm(\()p Fl(u;)13 b(v)s Fm(\))20 b(\(equation)h(1\))f(and)g
(hence)h(the)f(exp)r(ected)g(length)2040 4680 y(is)26
b(b)r(ounded)f(b)n(y)g Fl(O)r Fm(\(log)15 b Fl(n)e Fm(log)i(\001\).)
2040 4855 y(W)-6 b(e)17 b(ho)n(w)n(ev)n(er)g(promised)h(to)f(sho)n(w)h
(an)f(impro)n(v)n(ed)f(b)r(ound)h(of)g Fl(O)r Fm(\(log)f
Fl(n)p Fm(\).)2040 4942 y(W)-6 b(e)21 b(shall)g(do)g(so)g(b)n(y)f
(observing)i(that)e(the)g(total)i(n)n(um)n(b)r(er)e(of)h(cen)n(ters)
2040 5029 y(o)n(v)n(er)29 b(all)h Fl(\016)i Fm(lev)n(els)e(is)g
Fl(n)p Fm(.)45 b(A)29 b(more)g(careful)i(analysis)f(of)g(the)f(ab)r(o)n
(v)n(e)2040 5116 y(pro)r(cedure)d(will)h(yield)e(the)h(result.)2040
5290 y(Let)d(us)f(\014rst)h(consider)g(some)h Fl(i)d
Fq(\025)g Fl(j)3075 5259 y Fo(\003)3123 5290 y Fm(+)11
b(4.)34 b(Since)22 b(the)g(radius)h(of)h(the)2040 5378
y(cluster)e(at)h(lev)n(el)f Fl(i)g Fm(is)g(at)h(least)f(2)2971
5346 y Fg(i)p Fo(\000)p Ff(1)3077 5378 y Fm(,)h(cen)n(ters)f(v)n(ery)f
(close)i(to)f(b)r(oth)f Fl(u)p eop
%%Page: 5 5
5 4 bop 458 1228 a @beginspecial 0 @llx 0 @lly 681 @urx
317 @ury 1656 @rhi @setspecial
%%BeginDocument: line-proof.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: line-proof.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Mon Mar 10 19:33:03 2003
%%For: kunal@argus.EECS.Berkeley.EDU (Kunal Talwar,,,)
%%BoundingBox: 0 0 681 317
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 317 moveto 0 0 lineto 681 0 lineto 681 317 lineto closepath clip newpath
-22.0 342.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hypen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 6675 2400 m 7200 2400 l 7200 4800 l 6675 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 7650 2400 m 8025 2400 l 8025 4800 l 7650 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5550 2400 m 6225 2400 l 6225 4800 l 5550 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 10425 2400 m 10950 2400 l 10950 4800 l 10425 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 9300 2400 m 9825 2400 l 9825 4800 l 9300 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 9600 2400 m 10050 2400 l 10050 4800 l 9600 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 4500 2400 m 5025 2400 l 5025 4800 l 4500 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3825 2400 m 4200 2400 l 4200 4800 l 3825 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1650 4800 m
 11025 4800 l gs col0 s gr 
% Polyline
n 3150 2400 m 3375 2400 l 3375 4800 l 3150 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2025 2400 m 2550 2400 l 2550 4800 l 2025 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 8325 2400 m 8850 2400 l 8850 4800 l 8325 4800 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1650 2400 m
 11025 2400 l gs col0 s gr 
% Polyline
gs  clippath
9990 4815 m 10110 4815 l 10110 4546 l 10050 4726 l 9990 4546 l cp
eoclip
n 10050 4350 m
 10050 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 9990 4546 m 10050 4726 l 10110 4546 l 9990 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
 [45] 0 sd
gs  clippath
6840 4815 m 6960 4815 l 6960 4525 l 6900 4705 l 6840 4525 l cp
eoclip
n 6900 2400 m
 6900 4800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
60.000 slw
n 6840 4525 m 6900 4705 l 6960 4525 l 6900 4465 l 6840 4525 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
4965 4815 m 5085 4815 l 5085 4546 l 5025 4726 l 4965 4546 l cp
eoclip
n 5025 4200 m
 5025 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 4965 4546 m 5025 4726 l 5085 4546 l 4965 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
10890 4815 m 11010 4815 l 11010 4546 l 10950 4726 l 10890 4546 l cp
eoclip
n 10950 4200 m
 10950 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 10890 4546 m 10950 4726 l 11010 4546 l 10890 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
10485 2385 m 10365 2385 l 10365 2654 l 10425 2474 l 10485 2654 l cp
eoclip
n 10425 3075 m
 10425 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 10485 2654 m 10425 2474 l 10365 2654 l 10485 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8790 4815 m 8910 4815 l 8910 4546 l 8850 4726 l 8790 4546 l cp
eoclip
n 8850 4200 m
 8850 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 8790 4546 m 8850 4726 l 8910 4546 l 8790 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8385 2385 m 8265 2385 l 8265 2654 l 8325 2474 l 8385 2654 l cp
eoclip
n 8325 3075 m
 8325 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 8385 2654 m 8325 2474 l 8265 2654 l 8385 2654 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 360.00 scf sf
7425 1650 m
gs 1 -1 sc (center w  can cut \(u,v\)) col0 sh gr
% Polyline
7.500 slw
n 6750 1800 m 6749 1799 l 6747 1796 l 6743 1790 l 6737 1782 l 6729 1771 l
 6718 1756 l 6704 1739 l 6688 1719 l 6669 1696 l 6648 1672 l
 6625 1647 l 6600 1622 l 6575 1597 l 6548 1573 l 6521 1550 l
 6493 1528 l 6464 1508 l 6435 1490 l 6406 1473 l 6375 1458 l
 6344 1445 l 6312 1434 l 6278 1425 l 6243 1417 l 6206 1411 l
 6167 1406 l 6127 1403 l 6083 1401 l 6038 1400 l 6003 1400 l
 5968 1401 l 5931 1403 l 5893 1405 l 5853 1407 l 5812 1410 l
 5770 1414 l 5727 1418 l 5682 1422 l 5635 1427 l 5588 1432 l
 5540 1438 l 5490 1444 l 5439 1450 l 5388 1457 l 5336 1464 l
 5283 1471 l 5229 1478 l 5176 1485 l 5122 1493 l 5068 1500 l
 5014 1507 l 4960 1515 l 4907 1522 l 4854 1529 l 4801 1536 l
 4750 1543 l 4699 1550 l 4650 1556 l 4601 1562 l 4554 1568 l
 4508 1573 l 4463 1578 l 4420 1582 l 4378 1586 l 4337 1590 l
 4298 1593 l 4261 1595 l 4225 1597 l 4190 1599 l 4157 1600 l
 4125 1600 l 4073 1599 l 4024 1596 l 3979 1592 l 3936 1586 l
 3897 1579 l 3861 1570 l 3827 1561 l 3796 1550 l 3768 1538 l
 3743 1526 l 3720 1513 l 3700 1500 l 3682 1487 l 3667 1474 l
 3654 1462 l 3642 1450 l 3633 1439 l 3625 1430 l 3619 1421 l
 3614 1414 l 3610 1408 l 3606 1404 l 3603 1401 l 3600 1400 l
 3597 1401 l 3594 1404 l 3590 1408 l 3586 1414 l 3581 1421 l
 3575 1430 l 3567 1439 l 3558 1450 l 3546 1462 l 3533 1474 l
 3518 1487 l 3500 1500 l 3480 1513 l 3457 1526 l 3432 1538 l
 3404 1550 l 3373 1561 l 3339 1570 l 3303 1579 l 3264 1586 l
 3221 1592 l 3176 1596 l 3127 1599 l 3075 1600 l 3043 1600 l
 3010 1599 l 2975 1597 l 2939 1595 l 2902 1593 l 2863 1590 l
 2822 1586 l 2780 1582 l 2737 1578 l 2692 1573 l 2646 1568 l
 2599 1562 l 2550 1556 l 2501 1550 l 2450 1543 l 2399 1536 l
 2346 1529 l 2293 1522 l 2240 1515 l 2186 1507 l 2132 1500 l
 2078 1493 l 2024 1485 l 1971 1478 l 1917 1471 l 1864 1464 l
 1812 1457 l 1761 1450 l 1710 1444 l 1660 1438 l 1612 1432 l
 1565 1427 l 1518 1422 l 1473 1418 l 1430 1414 l 1388 1410 l
 1347 1407 l 1307 1405 l 1269 1403 l 1232 1401 l 1197 1400 l
 1163 1400 l 1117 1401 l 1073 1403 l 1033 1406 l 994 1411 l
 957 1417 l 922 1425 l 888 1434 l 856 1445 l 825 1458 l
 794 1473 l 765 1490 l 736 1508 l 707 1528 l 679 1550 l
 652 1573 l 625 1597 l 600 1622 l 575 1647 l 552 1672 l
 531 1696 l 512 1719 l 496 1739 l 482 1756 l 471 1771 l
 463 1782 l 457 1790 l 453 1796 l 451 1799 l
 450 1800 l gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
7009 2824 m 7067 2894 l 7255 2738 l 7097 2811 l 7198 2668 l cp
eoclip
n 7650 1800 m 7649 1802 l 7647 1807 l 7644 1817 l 7638 1831 l 7631 1851 l
 7621 1876 l 7610 1906 l 7597 1941 l 7583 1978 l 7567 2018 l
 7551 2060 l 7535 2101 l 7519 2142 l 7504 2182 l 7488 2220 l
 7474 2256 l 7460 2290 l 7447 2322 l 7434 2351 l 7423 2378 l
 7411 2404 l 7400 2427 l 7390 2449 l 7380 2470 l 7370 2489 l
 7360 2507 l 7350 2525 l 7336 2548 l 7322 2571 l 7308 2592 l
 7293 2612 l 7277 2632 l 7261 2652 l 7243 2672 l 7223 2693 l
 7203 2714 l 7181 2735 l 7158 2756 l 7136 2776 l 7114 2795 l
 7095 2812 l 7079 2826 l
 7050 2850 l gs col0 s gr gr

% arrowhead
30.000 slw
n 7198 2668 m 7097 2811 l 7255 2738 l 7201 2724 l 7198 2668 l 
 cp gs col7 1.00 shd ef gr  col0 s
/Times-Roman-iso ff 360.00 scf sf
375 4725 m
gs 1 -1 sc (d\(v,w\)) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
375 2700 m
gs 1 -1 sc (d\(u,w\)) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
2250 675 m
gs 1 -1 sc (Centers that can settle) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
2250 1125 m
gs 1 -1 sc (\(u,v\) for this value of ) col0 sh gr
/Symbol ff 360.00 scf sf
5475 1125 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman-iso ff 420.00 scf sf
9825 5700 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
10050 5325 m
gs 1 -1 sc (i) col0 sh gr
/Symbol ff 360.00 scf sf
6825 1050 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
5700 1275 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7050 1200 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
8670 1785 m
gs 1 -1 sc (s) col0 sh gr
% Polyline
7.500 slw
gs  clippath
9360 2385 m 9240 2385 l 9240 2654 l 9300 2474 l 9360 2654 l cp
eoclip
n 9300 3075 m
 9300 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 9360 2654 m 9300 2474 l 9240 2654 l 9360 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
9660 2385 m 9540 2385 l 9540 2654 l 9600 2474 l 9660 2654 l cp
eoclip
n 9600 2850 m
 9600 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 9660 2654 m 9600 2474 l 9540 2654 l 9660 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
7590 4815 m 7710 4815 l 7710 4546 l 7650 4726 l 7590 4546 l cp
eoclip
n 7650 4425 m
 7650 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 7590 4546 m 7650 4726 l 7710 4546 l 7590 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8085 2385 m 7965 2385 l 7965 2654 l 8025 2474 l 8085 2654 l cp
eoclip
n 8025 2925 m
 8025 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 8085 2654 m 8025 2474 l 7965 2654 l 8085 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
3765 4815 m 3885 4815 l 3885 4546 l 3825 4726 l 3765 4546 l cp
eoclip
n 3825 4350 m
 3825 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 3765 4546 m 3825 4726 l 3885 4546 l 3765 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
4260 2385 m 4140 2385 l 4140 2654 l 4200 2474 l 4260 2654 l cp
eoclip
n 4200 3000 m
 4200 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 4260 2654 m 4200 2474 l 4140 2654 l 4260 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
3090 4815 m 3210 4815 l 3210 4546 l 3150 4726 l 3090 4546 l cp
eoclip
n 3150 4425 m
 3150 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 3090 4546 m 3150 4726 l 3210 4546 l 3090 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
3435 2385 m 3315 2385 l 3315 2654 l 3375 2474 l 3435 2654 l cp
eoclip
n 3375 2925 m
 3375 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 3435 2654 m 3375 2474 l 3315 2654 l 3435 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
9690 4815 m 9810 4815 l 9810 4546 l 9750 4726 l 9690 4546 l cp
eoclip
n 9750 2400 m
 9750 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 9690 4546 m 9750 4726 l 9810 4546 l 9690 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
5490 4815 m 5610 4815 l 5610 4546 l 5550 4726 l 5490 4546 l cp
eoclip
n 5550 4425 m
 5550 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 5490 4546 m 5550 4726 l 5610 4546 l 5490 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
6285 2385 m 6165 2385 l 6165 2654 l 6225 2474 l 6285 2654 l cp
eoclip
n 6225 2925 m
 6225 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 6285 2654 m 6225 2474 l 6165 2654 l 6285 2654 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 420.00 scf sf
1575 5700 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
1725 5325 m
gs 1 -1 sc (\(i-3\)) col0 sh gr
/Times-Roman-iso ff 420.00 scf sf
5025 5700 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
5175 5325 m
gs 1 -1 sc (\(i-1\)) col0 sh gr
/Times-Roman-iso ff 420.00 scf sf
2775 5700 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 360.00 scf sf
2925 5325 m
gs 1 -1 sc (\(i-2\)) col0 sh gr
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
6840 2415 m 6960 2415 l 6960 2125 l 6900 2305 l 6840 2125 l cp
eoclip
n 6900 1200 m
 6900 2400 l gs col0 s gr gr
 [] 0 sd
% arrowhead
60.000 slw
n 6840 2125 m 6900 2305 l 6960 2125 l 6900 2065 l 6840 2125 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
7140 4815 m 7260 4815 l 7260 4546 l 7200 4726 l 7140 4546 l cp
eoclip
n 7200 4200 m
 7200 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 7140 4546 m 7200 4726 l 7260 4546 l 7140 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
6735 2385 m 6615 2385 l 6615 2654 l 6675 2474 l 6735 2654 l cp
eoclip
n 6675 3075 m
 6675 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 6735 2654 m 6675 2474 l 6615 2654 l 6735 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
4560 2385 m 4440 2385 l 4440 2654 l 4500 2474 l 4560 2654 l cp
eoclip
n 4500 3075 m
 4500 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 4560 2654 m 4500 2474 l 4440 2654 l 4560 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
2490 4815 m 2610 4815 l 2610 4546 l 2550 4726 l 2490 4546 l cp
eoclip
n 2550 4200 m
 2550 4800 l gs col0 s gr gr

% arrowhead
45.000 slw
n 2490 4546 m 2550 4726 l 2610 4546 l 2490 4546 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
2085 2385 m 1965 2385 l 1965 2654 l 2025 2474 l 2085 2654 l cp
eoclip
n 2025 3075 m
 2025 2400 l gs col0 s gr gr

% arrowhead
45.000 slw
n 2085 2654 m 2025 2474 l 1965 2654 l 2085 2654 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 10200 2400 m
 10200 2250 l gs col0 s gr 
% Polyline
n 5400 2400 m
 5400 2250 l gs col0 s gr 
% Polyline
n 3000 2400 m
 3000 2250 l gs col0 s gr 
% Polyline
n 1800 2400 m
 1800 2250 l gs col0 s gr 
% Polyline
7.500 slw
 [15 45] 45 sd
n 11025 2400 m
 11700 2400 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1650 2400 m
 1050 2400 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 10200 4800 m
 10200 4950 l gs col0 s gr 
% Polyline
n 5400 4800 m
 5400 4950 l gs col0 s gr 
% Polyline
n 3000 4800 m
 3000 4950 l gs col0 s gr 
% Polyline
n 1800 4800 m
 1800 4950 l gs col0 s gr 
% Polyline
7.500 slw
 [15 45] 45 sd
n 11025 4800 m
 11700 4800 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1650 4800 m
 1050 4800 l gs col0 s gr  [] 0 sd
$F2psEnd
rs

%%EndDocument
 @endspecial -152 1479 a Fk(Figure)31 b(3:)42 b(Bounding)32
b(the)f(probabilit)n(y)f(of)i(an)f(edge)g(b)r(eing)g(cut.)44
b(Eac)n(h)32 b(shaded)e(rectangle)i(represen)n(ts)e(a)i(cen)n(ter;)f
(arro)n(w)-152 1566 y(marks)e(indicate)h(distances)f(from)h
Fl(u)f Fk(and)h Fl(v)s Fk(.)39 b(Width)30 b(of)f(eac)n(h)g(shaded)h
(rectangle)f(is)g(at)h(most)g Fl(d)p Fm(\()p Fl(u;)13
b(v)s Fm(\))-152 1817 y(and)25 b Fl(v)j Fm(can)d(nev)n(er)g(cut)f(the)h
(edge)g(\()p Fl(u;)14 b(v)s Fm(\).)34 b(More)26 b(precisely)-6
b(,)25 b(for)h(an)n(y)-152 1905 y Fl(w)j Fm(in)d Fl(K)92
1873 y Fg(u)87 1918 y(i)p Fo(\000)p Ff(2)192 1905 y Fm(,)h(if)g
Fl(u)f Fm(is)h(assigned)h(to)f Fl(w)r Fm(,)f(it)h(m)n(ust)f(b)r(e)g
(the)g(case)i(that)e Fl(v)-152 1992 y Fm(gets)20 b(assigned)g(to)f
Fl(w)i Fm(also,)h(b)r(ecause)d Fl(d)p Fm(\()p Fl(v)s(;)13
b(w)r Fm(\))21 b Fq(\024)g Fl(d)p Fm(\()p Fl(v)s(;)13
b(u)p Fm(\))t(+)t Fl(d)p Fm(\()p Fl(u;)f(w)r Fm(\))21
b Fq(\024)-152 2079 y Fm(2)-114 2047 y Fg(i)p Fo(\000)p
Ff(2)-4 2079 y Fm(+)5 b(2)99 2047 y Fg(i)p Fo(\000)p
Ff(2)225 2079 y Fq(\024)21 b Fm(2)344 2047 y Fg(i)p Fo(\000)p
Ff(1)470 2079 y Fq(\024)h Fl(\014)595 2087 y Fg(i)641
2079 y Fm(\(since)d Fl(i)j Fq(\025)f Fl(j)1016 2047 y
Fo(\003)1057 2079 y Fm(+)5 b(4\).)32 b(Th)n(us,)21 b(no)f(cen)n(ter)f
(in)-152 2166 y Fl(w)-97 2174 y Ff(1)-62 2166 y Fl(;)13
b(w)27 2174 y Ff(2)62 2166 y Fl(;)g(:)g(:)g(:)g(;)g(w)287
2175 y Fg(k)321 2158 y Fc(u)320 2196 y(i)p Fe(\000)p
Fb(2)451 2166 y Fm(can)28 b(ev)n(er)f(cut)g Fl(u)g Fm(out)g(of)h(\()p
Fl(u;)13 b(v)s Fm(\).)40 b(This)28 b(implies)-152 2263
y(that)f(the)g(probabilit)n(y)h(that)f Fl(u)g Fm(gets)h(cut)f(out)g(of)
h(edge)g Fl(e)f Fm(is)h(in)f(fact)-152 2350 y(b)r(ounded)e(b)n(y)584
2489 y Fg(k)618 2468 y Fc(u)617 2506 y(i)565 2522 y Fd(X)456
2681 y Fg(s)p Ff(=)p Fg(k)566 2664 y Fc(u)565 2705 y
Fb(\()p Fc(i)p Fe(\000)p Fb(2\))709 2681 y Ff(+1)809
2544 y Fm(1)p 809 2576 39 4 v 810 2643 a Fl(s)878 2593
y Fm(\()p Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\))p Fl(=)p
Fm(2)1202 2557 y Fg(i)p Fo(\000)p Ff(1)1308 2593 y Fm(\))202
2826 y(=)21 b(\()p Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\))p
Fl(=)p Fm(2)607 2790 y Fg(i)p Fo(\000)p Ff(1)713 2826
y Fm(\))j Fq(\001)i Fm(\()p Fl(H)892 2835 y Fg(k)926
2818 y Fc(u)925 2855 y(i)986 2826 y Fq(\000)f Fl(H)1127
2835 y Fg(k)1161 2818 y Fc(u)1160 2859 y Fb(\()p Fc(i)p
Fe(\000)p Fb(2\))1308 2826 y Fm(\))-152 3090 y(Since)36
b(\()p Fl(u;)14 b(v)s Fm(\))35 b(can)i(b)r(e)f(cut)f(when)h(either)h
Fl(u)f Fm(or)g Fl(v)j Fm(is)e(cut)f(out)g(b)n(y)-152
3177 y(some)24 b(v)n(ertex,)g(the)f(o)n(v)n(erall)h(probabilit)n(y)f
(that)g Fl(D)1281 3185 y Fg(i)1331 3177 y Fm(separates)i(\()p
Fl(u;)13 b(v)s Fm(\))-152 3265 y(is)18 b(then)e(at)i(most)f(\()p
Fl(d)p Fm(\()p Fl(u;)c(v)s Fm(\))p Fl(=)p Fm(2)672 3233
y Fg(i)p Fo(\000)p Ff(1)778 3265 y Fm(\))p Fq(\001)p
Fm([)p Fl(H)914 3274 y Fg(k)948 3257 y Fc(u)947 3294
y(i)991 3265 y Fm(+)p Fl(H)1115 3274 y Fg(k)1149 3257
y Fc(v)1148 3294 y(i)1188 3265 y Fq(\000)p Fl(H)1312
3274 y Fg(k)1346 3257 y Fc(u)1345 3297 y Fb(\()p Fc(i)p
Fe(\000)p Fb(2\))1493 3265 y Fq(\000)p Fl(H)1617 3274
y Fg(k)1651 3257 y Fc(v)1650 3297 y Fb(\()p Fc(i)p Fe(\000)p
Fb(2\))1798 3265 y Fm(].)-152 3458 y(F)-6 b(or)19 b Fl(i)j
Fm(=)f Fl(j)143 3426 y Fo(\003)179 3458 y Fl(;)13 b(j)248
3426 y Fo(\003)288 3458 y Fm(+)s(1)p Fl(;)g(j)458 3426
y Fo(\003)498 3458 y Fm(+)s(2)p Fl(;)g(j)668 3426 y Fo(\003)708
3458 y Fm(+)s(3,)20 b(w)n(e)f(just)g(b)r(ound)f(this)h(probabilit)n(y)
-152 3545 y(b)n(y)25 b(\()p Fl(d)p Fm(\()p Fl(u;)13 b(v)s
Fm(\))p Fl(=)p Fm(2)279 3514 y Fg(i)p Fo(\000)p Ff(1)384
3545 y Fm(\))k Fq(\001)h Fm(\()p Fl(H)564 3554 y Fg(k)598
3538 y Fc(u)597 3575 y(i)657 3545 y Fm(+)f Fl(H)798 3554
y Fg(k)832 3538 y Fc(v)831 3575 y(i)871 3545 y Fm(\))22
b Fq(\024)f Fm(\()p Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\))p
Fl(=)p Fm(2)1328 3514 y Fg(i)p Fo(\000)p Ff(1)1433 3545
y Fm(\))k Fq(\001)g Fm(2)p Fl(H)1620 3553 y Fg(n)1663
3545 y Fm(.)-152 3736 y(The)26 b(exp)r(ected)f(v)l(alue)h(of)g
Fl(d)652 3704 y Fg(T)701 3736 y Fm(\()p Fl(u;)13 b(v)s
Fm(\))25 b(is)h(therefore.)-152 3883 y Fl(E)t Fm([)p
Fl(d)-30 3852 y Fg(T)19 3883 y Fm(\()p Fl(u;)13 b(v)s
Fm(\)])-77 4116 y Fq(\024)98 4023 y Fg(\016)57 4045 y
Fd(X)63 4203 y Fg(i)p Ff(=0)181 4116 y Fm(Pr)q([\()p
Fl(u;)g(v)s Fm(\))25 b(is)i(at)f(lev)n(el)g Fl(i)p Fm(])17
b Fq(\001)h Fm(2)976 4080 y Fg(i)p Ff(+2)-77 4381 y Fq(\024)108
4287 y Fg(\016)68 4310 y Fd(X)57 4468 y Fg(i)p Ff(=)p
Fg(j)154 4454 y Fe(\003)202 4381 y Fm(Pr[)p Fl(D)368
4389 y Fg(i)421 4381 y Fm(separates)27 b(\()p Fl(u;)13
b(v)s Fm(\)])k Fq(\001)h Fm(2)1048 4345 y Fg(i)p Ff(+2)-77
4664 y Fq(\024)57 4567 y Fg(j)85 4547 y Fe(\003)121 4567
y Ff(+3)72 4593 y Fd(X)62 4751 y Fg(i)p Ff(=)p Fg(j)159
4737 y Fe(\003)210 4664 y Fq(\001)p Fm(2)p Fl(H)333 4672
y Fg(n)393 4664 y Fq(\001)442 4615 y Fl(d)p Fm(\()p Fl(u;)13
b(v)s Fm(\))p 442 4647 218 4 v 479 4715 a(2)517 4693
y Fg(i)p Fo(\000)p Ff(1)686 4664 y Fq(\001)18 b Fm(2)763
4628 y Fg(i)p Ff(+2)884 4664 y Fm(+)147 4845 y Fg(\016)106
4868 y Fd(X)57 5026 y Fg(i)p Ff(=)p Fg(j)154 5012 y Fe(\003)189
5026 y Ff(+4)266 4939 y Fm(\()p Fl(H)360 4948 y Fg(k)394
4931 y Fc(u)393 4968 y(i)454 4939 y Fm(+)f Fl(H)595 4948
y Fg(k)629 4931 y Fc(v)628 4968 y(i)685 4939 y Fq(\000)g
Fl(H)826 4948 y Fg(k)860 4931 y Fc(u)859 4971 y Fb(\()p
Fc(i)p Fe(\000)p Fb(2\))1024 4939 y Fq(\000)g Fl(H)1165
4948 y Fg(k)1199 4931 y Fc(v)1198 4971 y Fb(\()p Fc(i)p
Fe(\000)p Fb(2\))1346 4939 y Fm(\))g Fq(\001)1441 4890
y Fl(d)p Fm(\()p Fl(u;)c(v)s Fm(\))p 1441 4921 V 1479
4989 a(2)1517 4968 y Fg(i)p Fo(\000)p Ff(1)1686 4939
y Fq(\001)18 b Fm(2)1763 4903 y Fg(i)p Ff(+2)-77 5133
y Fq(\024)74 b Fm(8)p Fl(d)p Fm(\()p Fl(u;)14 b(v)s Fm(\)\(4)j
Fq(\001)g Fm(2)p Fl(H)539 5141 y Fg(n)599 5133 y Fm(+)g
Fl(H)740 5142 y Fg(k)774 5125 y Fc(u)773 5164 y(\016)834
5133 y Fm(+)f Fl(H)974 5142 y Fg(k)1008 5125 y Fc(u)1007
5164 y(\016)1068 5133 y Fm(+)h Fl(H)1209 5142 y Fg(k)1243
5125 y Fc(u)1242 5166 y Fb(\()p Fc(\016)q Fe(\000)p Fb(1\))1414
5133 y Fm(+)g Fl(H)1555 5142 y Fg(k)1589 5125 y Fc(v)1588
5166 y Fb(\()p Fc(\016)q Fe(\000)p Fb(1\))1742 5133 y
Fm(\))-77 5266 y Fq(\024)74 b Fm(8)p Fl(d)p Fm(\()p Fl(u;)14
b(v)s Fm(\)\(12)p Fl(H)484 5274 y Fg(n)526 5266 y Fm(\))-77
5378 y(=)74 b(96)14 b(ln)f Fl(n)k Fq(\001)h Fl(d)p Fm(\()p
Fl(u;)13 b(v)s Fm(\))2040 1817 y(The)26 b(third)f(to)g(last)h
(inequalit)n(y)f(follo)n(ws)j(b)r(ecause)e(alternate)g(terms)2040
1905 y(of)h(the)f(summation)2659 1848 y Fd(P)2740 1927
y Fg(i)2767 1905 y Fm(\()p Fl(H)2861 1914 y Fg(k)2895
1897 y Fc(u)2894 1934 y(i)2955 1905 y Fq(\000)17 b Fl(H)3096
1914 y Fg(k)3130 1897 y Fc(u)3129 1937 y Fb(\()p Fc(i)p
Fe(\000)p Fb(2\))3277 1905 y Fm(\))26 b(telescop)r(e.)74
b(Th)n(us,)27 b(w)n(e)2040 2012 y(ha)n(v)n(e)i(sho)n(wn)h(that)g(for)g
(an)n(y)f(edge)h(\()p Fl(u;)13 b(v)s Fm(\),)31 b(the)e(exp)r(ected)g(v)
l(alue)h(of)2040 2099 y Fl(d)2080 2068 y Fg(T)2129 2099
y Fm(\()p Fl(u;)13 b(v)s Fm(\))25 b(is)h Fl(O)r Fm(\(log)16
b Fl(n)p Fm(\))h Fq(\001)g Fl(d)p Fm(\()p Fl(u;)c(v)s
Fm(\).)35 b(Hence,)2123 2332 y Fa(Theorem)41 b Fm(1.)d
Fj(The)26 b(distribution)i(over)f(tr)l(e)l(e)g(metrics)g(r)l(esulting)
2040 2419 y(fr)l(om)39 b(our)g(algorithm)g Fl(O)r Fm(\(log)16
b Fl(n)p Fm(\))p Fj(-pr)l(ob)l(abilistic)l(al)t(ly)39
b(appr)l(oximates)2040 2506 y(the)29 b(metric)f Fl(d)p
Fj(.)2040 2739 y Fm(W)-6 b(e)35 b(note)g(that)g(b)n(y)f(c)n(ho)r(osing)
i(a)f(sligh)n(tly)h(di\013eren)n(t)f(distribution)2040
2826 y(for)30 b Fl(\014)t Fm(,)g(w)n(e)f(can)h(ensure)e(that)h(for)h
(an)n(y)e Fl(x)h Fm(\(not)f(just)i(in)e([1)p Fl(;)14
b Fm(2]\),)31 b(the)2040 2914 y(probabilit)n(y)c(that)f(there)g(is)h
(some)g Fl(\014)3112 2922 y Fg(i)3165 2914 y Fm(in)g([)p
Fl(x;)13 b(x)k Fm(+)g Fl(dx)p Fm(\))26 b(is)h(\()3804
2883 y Ff(1)p 3751 2897 138 4 v 3751 2939 a Fg(x)10 b
Ff(ln)g(2)3898 2914 y Fm(\))p Fl(dx)p Fm(.)2040 3011
y(This)27 b(then)f(mak)n(es)h(the)f(analysis)h(simpler)3289
2979 y Ff(3)3325 3011 y Fm(,)f(and)h(w)n(e)f(do)h(not)f(ha)n(v)n(e)2040
3098 y(to)34 b(deal)f(with)h(the)f(corner)h(cases)g(ab)r(o)n(v)n(e.)58
b(W)-6 b(e)33 b(omit)h(the)f(details)2040 3185 y(from)27
b(this)e(extended)g(abstract.)2040 3384 y Fn(2.4)99 b(HSTs)2040
3475 y Fm(A)31 b(tree)h Fl(T)42 b Fm(is)32 b(said)g(to)g(b)r(e)f
Fl(k)r Fm(-)p Fj(hier)l(ar)l(chic)l(al)t(ly)j(wel)t(l)e(sep)l(ar)l(ate)
l(d)i Fm(if)f(on)2040 3563 y(an)n(y)h(ro)r(ot)i(to)e(leaf)i(path)f(the)
f(edge)h(lengths)g(decrease)g(b)n(y)f(a)h(fac-)2040 3650
y(tor)h(of)h Fl(k)h Fm(in)e(eac)n(h)h(step.)65 b(Bartal)38
b([7,)i(8])c(constructed)g(distribu-)2040 3737 y(tions)j(o)n(v)n(er)f
(trees)g(whic)n(h)g(w)n(ere)h(hierarc)n(hically)g(w)n(ell)h(separated,)
2040 3824 y(and)27 b(suc)n(h)g(trees)i(are)f(more)g(conduciv)n(e)f(to)h
(design)g(of)g(divide-and-)2040 3911 y(conquer)k(t)n(yp)r(e)f
(algorithms.)55 b(The)33 b(fact)g(that)f(the)f(trees)i(are)f(w)n(ell)
2040 3998 y(separated)38 b(has)g(b)r(een)f(used)h(in)f(applications)i
(suc)n(h)e(as)h(metrical)2040 4086 y(task)28 b(system[10])i(and)d
(metric)i(lab)r(eling)g([32].)43 b(W)-6 b(e)28 b(note)g(that)g(the)2040
4173 y(trees)22 b(w)n(e)h(construct)e(are)i(2-HSTs.)33
b(Bartal)23 b([8])g(also)g(observ)n(ed)f(that)2040 4260
y(a)i(2-HST)e(can)i(b)r(e)f(con)n(v)n(erted)f(to)i(a)f(k-HST)f(with)i
(distortion)g Fl(O)r Fm(\()p Fl(k)r Fm(\),)2040 4347
y(later)k(impro)n(v)n(ed)e(to)h Fl(O)r Fm(\()p Fl(k)r(=)14
b Fm(log)h Fl(k)r Fm(\))26 b([11].)39 b(This)28 b(com)n(bined)f(with)g
(our)2040 4434 y(result)32 b(implies)h(a)f(probabilistic)h(em)n(b)r
(edding)f(in)n(to)f(k-HSTs)g(with)2040 4521 y(distortion)c
Fl(O)r Fm(\()p Fl(k)15 b Fm(log)g Fl(n=)f Fm(log)h Fl(k)r
Fm(\).)36 b(In)25 b(fact,)j(a)e(sligh)n(t)h(mo)r(di\014cation)g(of)2040
4609 y(our)h(tec)n(hnique)g(\(details)h(omitted\))f(can)h(b)r(e)f(used)
g(to)h(directly)f(get)2040 4696 y Fl(k)r Fm(-HSTs)k(for)h(an)n(y)e
Fl(k)r Fm(,)k(with)d(distortion)h Fl(O)r Fm(\()3337 4663
y Fg(k)12 b Ff(log)g Fg(n)p 3337 4679 173 4 v 3362 4721
a Ff(log)g Fg(k)3520 4696 y Fm(\).)54 b(This)32 b(can)h(b)r(e)2040
4783 y(useful)26 b(in)g(some)g(applications,)i(e.g.)35
b(min-sum)25 b Fl(k)r Fm(-clustering.)2040 4982 y Fn(2.5)99
b(Derandomization)2040 5073 y Fm(The)25 b(problem)g(of)g(probabilistic)
h(appro)n(ximation)f(b)n(y)e(tree)i(metrics)2040 5160
y(asks)33 b(for)g(a)g(distribution)f(o)n(v)n(er)h(tree)f(metrics)h(suc)
n(h)f(that)g(the)g(ex-)2040 5247 y(p)r(ected)25 b(stretc)n(h)f(of)i
(eac)n(h)f(edge)g(is)g(small.)36 b(A)24 b(dual)h(problem)g(is)h(\014nd)
p 2040 5292 797 4 v 2044 5346 a Ff(3)2078 5378 y Fm(But)g(somewhat)h
(less)g(in)n(tuitiv)n(e.)p eop
%%Page: 6 6
6 5 bop -152 -69 a Fm(a)25 b(single)g(tree)f(suc)n(h)g(that)g(the)g
(\(w)n(eigh)n(ted\))g(a)n(v)n(erage)h(stretc)n(h)f(of)h(the)-152
19 y(edges)j(is)g(small.)39 b(More)28 b(precisely)-6
b(,)28 b(giv)n(en)f(w)n(eigh)n(ts)h Fl(w)1431 27 y Fg(uv)1532
19 y Fm(on)f(edges,)-152 106 y(\014nd)e(a)h(tree)g(metric)g
Fl(d)499 74 y Fg(T)573 106 y Fm(suc)n(h)f(that)g(for)i(all)g
Fl(u;)13 b(v)29 b Fm(in)c Fl(V)17 b Fm(,)-41 339 y Fq(\017)38
b Fl(d)75 307 y Fg(T)124 339 y Fm(\()p Fl(u;)13 b(v)s
Fm(\))21 b Fq(\025)g Fl(d)p Fm(\()p Fl(u;)13 b(v)s Fm(\).)-41
486 y Fq(\017)35 430 y Fd(P)116 508 y Fg(u;v)r Fo(2)p
Fg(V)312 486 y Fl(w)367 494 y Fg(uv)458 486 y Fq(\001)18
b Fl(d)537 454 y Fg(T)585 486 y Fm(\()p Fl(u;)13 b(v)s
Fm(\))22 b Fq(\024)f Fl(\013)928 430 y Fd(P)1009 508
y Fg(u;v)r Fo(2)p Fg(V)1205 486 y Fl(w)1260 494 y Fg(uv)1351
486 y Fq(\001)c Fl(d)p Fm(\()p Fl(u;)c(v)s Fm(\).)-152
729 y(Charik)l(ar)18 b(et.al.[17])i(sho)n(w)n(ed)d(that)g(solving)h
(this)f(problem)h(is)f(enough)-152 816 y(for)30 b(most)f(applications,)
j(and)d(moreo)n(v)n(er)g(can)g(giv)n(e)g(deterministic)-152
903 y(algorithms.)61 b(The)34 b(algorithm)h(of)f(the)g(previous)f
(section)i(clearly)-152 990 y(giv)n(es)28 b(a)g(randomized)g(algorithm)
h(that)e(solv)n(es)i(the)e(dual)h(problem)-152 1077 y(for)21
b Fl(\013)h Fm(=)f Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\).)33
b(W)-6 b(e)19 b(w)n(ere)i(ho)n(w)n(ev)n(er)e(lo)r(oking)i(for)g
(deterministic)-152 1165 y(algorithms.)34 b(The)20 b(ab)r(o)n(v)n(e)g
(algorithm)g(can)g(actually)g(b)r(e)f(derandom-)-152
1252 y(ized)26 b(b)n(y)f(the)g(metho)r(d)h(of)g(conditional)h(exp)r
(ectation)f(as)g(follo)n(ws.)-152 1426 y(The)32 b(algorithm)h(describ)r
(ed)f(ab)r(o)n(v)n(e)g(tosses)h(coins)f(to)g(c)n(ho)r(ose)h
Fl(\014)j Fq(2)-152 1513 y Fm([1)p Fl(;)14 b Fm(2])27
b(and)f(a)g(p)r(erm)n(utation)g Fl(\031)s Fm(.)36 b(Since)26
b(there)g(are)h(only)f Fl(n)1528 1482 y Ff(2)1589 1513
y Fm(distinct)-152 1600 y(distances,)34 b(there)e(are)g(only)f(that)g
(man)n(y)g(v)l(alues)h(of)g Fl(\014)k Fm(that)31 b(mat-)-152
1688 y(ter.)k(F)-6 b(or)26 b(eac)n(h)g(of)h(them,)f(supp)r(ose)g(w)n(e)
g(can)g(compute)f(exactly)h(the)-152 1775 y(exp)r(ected)g(cost)g(of)h
(the)e(tree)h(when)g Fl(\031)j Fm(is)d(c)n(hosen)g(randomly)-6
b(.)35 b(Then)-152 1862 y(w)n(e)c(can)g(\014nd)e(one)i(for)g(whic)n(h)f
(this)h(exp)r(ectation)f(is)h(smaller)h(than)-152 1949
y(the)h(a)n(v)n(erage)g(\(whic)n(h)f(is)i Fl(O)r Fm(\(log)15
b Fl(n)p Fm(\)\).)55 b(W)-6 b(e)33 b(then)e(c)n(ho)r(ose)j(the)e(p)r
(er-)-152 2036 y(m)n(utation)k Fl(\031)j Fm(one)d(v)n(ertex)f(at)h(a)g
(time.)66 b(T)-6 b(o)37 b(use)f(the)f(metho)r(d)h(of)-152
2123 y(conditional)c(exp)r(ectation)f(again,)j(w)n(e)d(need)f(to)h(b)r
(e)g(able)g(to)g(com-)-152 2211 y(pute,)26 b(ha)n(ving)f(\014xed)g
Fl(\014)30 b Fm(and)c(a)g(pre\014x)f(of)h(the)g(p)r(erm)n(utation)f
Fl(\031)s Fm(,)h(the)-152 2298 y(exp)r(ected)35 b(cost)h(of)g(the)f
(tree,)k(where)d(the)f(exp)r(ectation)g(is)h(tak)n(en)-152
2385 y(o)n(v)n(er)24 b(random)f(c)n(hoices)h(of)h(the)e(rest)g(of)i
Fl(\031)s Fm(.)33 b(Assuming)23 b(w)n(e)h(could)g(do)-152
2472 y(this)31 b(in)g(p)r(olynomial)h(time,)g(w)n(e)f(simply)g(try)f
(all)i(p)r(ossible)g(c)n(hoices)-152 2559 y(for)k(the)f(next)f(v)n
(ertex)g(in)h(the)f(p)r(erm)n(utation,)k(and)d(pic)n(k)f(the)h(one)-152
2647 y(whic)n(h)26 b(maximizes)h(the)e(conditional)i(exp)r(ectation.)
-152 2821 y(It)i(remains)h(to)f(sho)n(w)h(ho)n(w)f(to)h(compute)f(the)f
(conditional)i(exp)r(ec-)-152 2908 y(tations.)65 b(Giv)n(en)35
b Fl(\014)40 b Fm(and)35 b(some)i(\(p)r(ossibly)f(empt)n(y\))e
(pre\014x)h(of)h Fl(\031)s Fm(,)-152 2995 y(eac)n(h)28
b(edge,)i(at)e(eac)n(h)g(lev)n(el)g(is)h(either)f(settled)g(or)g(not.)
42 b(In)27 b(the)g(for-)-152 3082 y(mer)33 b(case,)i(the)c(cost)i(at)f
(that)g(lev)n(el)h(is)f(already)h(determined.)53 b(In)-152
3170 y(the)30 b(latter)h(case,)h(w)n(e)e(kno)n(w)g(the)g(set)g(of)h(v)n
(ertices)f(that)g(can)g(settle)-152 3257 y(the)f(edge)g(and)f(the)g
(set)h(of)h(v)n(ertices)f(that)f(can)h(cut)f(the)h(edge)g(at)f(a)-152
3344 y(particular)c(lev)n(el.)34 b(Th)n(us)23 b(w)n(e)h(can)f(compute)g
(exactly)h(the)e(exp)r(ected)-152 3431 y(cost)35 b(of)g(a)g(particular)
g(edge)f(at)g(a)h(particular)g(lev)n(el.)60 b(By)34 b(linear-)-152
3518 y(it)n(y)26 b(of)h(exp)r(ectation)f(then,)g(w)n(e)h(can)f(compute)
g(the)f(total)i(exp)r(ected)-152 3605 y(cost.)54 b(Hence)31
b(w)n(e)h(can)g(solv)n(e)g(the)g(dual)f(problem)h(in)g(determinis-)-152
3693 y(tic)k(p)r(olynomial)g(time.)64 b(In)34 b(fact,)39
b(the)c(computation)g(ab)r(o)n(v)n(e)h(can)-152 3780
y(b)r(e)24 b(simpli\014ed,)h(replacing)h(the)d(exact)h(v)l(alue)g(of)h
(the)f(exp)r(ected)f(cost)-152 3867 y(ab)r(o)n(v)n(e)30
b(b)n(y)f(the)g(upp)r(er)g(b)r(ounds)g(used)g(in)h(the)f(analysis)i
(\(and)e(th)n(us)-152 3954 y(using)d(the)g(metho)r(d)f(of)h(p)r
(essimistic)i(estimators)f([42]\).)-152 4153 y Fn(3.)100
b(APPLICA)-9 b(TIONS)-152 4244 y Fm(Man)n(y)35 b(problems)f(are)h(easy)
g(on)g(trees.)61 b(The)34 b(partitioning)i(algo-)-152
4332 y(rithm)20 b(w)n(e)h(giv)n(e)g(pro)r(duces)f(a)h(tree)f(suc)n(h)g
(that)g(the)g(exp)r(ected)g(stretc)n(h)-152 4419 y(of)32
b(eac)n(h)e(edge)h(is)g(at)g(most)g Fl(O)r Fm(\(log)15
b Fl(n)p Fm(\).)49 b(By)31 b(using)f(our)h(result,)h(the)-152
4506 y(appro)n(ximation)c(ratios)g(of)g(v)l(arious)g(problems)g(can)f
(b)r(e)g(impro)n(v)n(ed.)-152 4593 y(The)f(follo)n(wing)i(is)f(a)f
(list)g(of)h(some)f(our)g(fa)n(v)n(orite)g(applications.)-152
4767 y Fj(The)j(metric)f(lab)l(eling)g(pr)l(oblem)h(:)34
b Fm(The)27 b(previous)f(result)g(of)h(Klein-)-152 4855
y(b)r(erg)18 b(and)f(T)-6 b(ardos)17 b([32])i(giv)n(es)f(an)f
Fl(O)r Fm(\(log)e Fl(k)g Fm(log)g(log)g Fl(k)r Fm(\)-appro)n(ximation)
-152 4942 y(algorithm)26 b(based)f(on)g(a)g(constan)n(t)g(factor)g
(appro)n(ximation)h(for)f(the)-152 5029 y(case)20 b(that)e(the)g
(terminal)i(metric)f(is)g(an)f(HST.)h(Our)f(result)h(impro)n(v)n(es)
-152 5116 y(this)26 b(to)g Fl(O)r Fm(\(log)15 b Fl(n)p
Fm(\).)-152 5290 y(W)-6 b(e)25 b(also)i(note)f(that)f(Arc)n(her,)g(T)-6
b(alw)n(ar)27 b(and)e(T)-6 b(ardos)27 b([2])f(sho)n(w)g(that)-152
5378 y(the)i(earthmo)n(v)n(er)f(linear)i(program)f(of)g(Chekuri)g
(et.al.[19])i(is)e(in)n(te-)2040 -69 y(gral)20 b(when)e(the)g(input)f
(graph)i(is)g(a)f(tree.)33 b(Using)18 b(this)h(result,)h(the)e(ap-)2040
19 y(pro)n(ximation)26 b(ratio)h(can)f(b)r(e)f(impro)n(v)n(ed)g(to)h
Fl(O)r Fm(\(min)q(\(log)14 b Fl(k)r(;)g Fm(log)h Fl(n)p
Fm(\)\).)2040 193 y Fj(Buy-at-bulk)30 b(network)f(design)g(:)k
Fm(Aw)n(erbuc)n(h)25 b(and)h(Azar)f([4])i(giv)n(e)f(a)2040
280 y Fl(O)r Fm(\(1\)-appro)n(ximation)32 b(algorithm)h(on)e(trees.)53
b(Th)n(us,)33 b(w)n(e)f(can)f(get)2040 367 y(an)26 b
Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\)-appro)n(ximation)26
b(algorithm.)2040 542 y Fj(Minimum)20 b(c)l(ost)k(c)l(ommunic)l(ation)e
(network)i(pr)l(oblem)e(:)31 b Fm(This)20 b(prob-)2040
629 y(lem)34 b([28,)i(40,)g(46])f(is)f(essen)n(tially)g(the)f(dual)g
(problem)g(de\014ned)g(in)2040 716 y(section)27 b(2.5)f(and)g(hence)f
(w)n(e)h(get)g(an)g Fl(O)r Fm(\(log)15 b Fl(n)p Fm(\))26
b(appro)n(ximation.)2040 890 y Fj(The)20 b(gr)l(oup)h(Steiner)g(tr)l(e)
l(e)g(pr)l(oblem)f(:)30 b Fm(Garg,)20 b(Konjev)n(o)r(d,)f(and)e(Ra)n
(vi)f([24])2040 977 y(giv)n(e)h(an)h Fl(O)r Fm(\(log)d
Fl(k)g Fm(log)g Fl(n)p Fm(\)-appro)n(ximation)i(algorithm)i(for)f
(trees;)j(th)n(us,)2040 1065 y(w)n(e)33 b(obtain)f(an)g
Fl(O)r Fm(\(log)2708 1033 y Ff(2)2755 1065 y Fl(n)13
b Fm(log)i Fl(k)r Fm(\)-appro)n(ximation)32 b(algorithm,)k(im-)2040
1152 y(pro)n(ving)17 b(on)g(the)g Fl(O)r Fm(\()p Fl(\025)c
Fm(log)i Fl(n)e Fm(log)i Fl(k)r Fm(\))i(result)h(b)n(y)e(Bartal)i(and)f
(Mendel)g([12],)2040 1239 y(where)26 b Fl(\025)21 b Fm(=)g
Fl(O)r Fm(\(min)q Fq(f)p Fm(log)15 b Fl(n)e Fm(log)i(log)g(log)g
Fl(n;)f Fm(log)h(\001)e(log)i(log)g(\001)p Fq(g)p Fm(\).)2040
1413 y Fj(Metric)l(al)33 b(T)-6 b(ask)34 b(system)g(:)45
b Fm(Impro)n(ving)31 b(on)g(the)g(result)h(of)g(Bartal,)2040
1500 y(Blum,)e(Burc)n(h)f(and)f(T)-6 b(omkins)30 b([10],)h(Fiat)e(and)g
(Mendel)g([22])h(ga)n(v)n(e)2040 1588 y(an)d Fl(O)r Fm(\(log)15
b Fl(n)e Fm(log)i(log)g Fl(n)p Fm(\)-comp)r(etitiv)n(e)27
b(algorithms)h(on)e(HSTs.)37 b(Bar-)2040 1675 y(tal)32
b(and)e(Mendel's)i([12])h(m)n(ultiem)n(b)r(edding)d(result)i(th)n(us)e
(giv)n(es)i(an)2040 1762 y Fl(O)r Fm(\()p Fl(\025)13
b Fm(log)i Fl(n)e Fm(log)i(log)g Fl(n)p Fm(\)-comp)r(etitiv)n(e)30
b(ratio,)i(where)d Fl(\025)h Fm(is)g(as)g(de\014ned)2040
1849 y(ab)r(o)n(v)n(e.)61 b(Our)33 b(result)i(impro)n(v)n(es)f(this)h
(to)f(an)h Fl(O)r Fm(\(log)3600 1817 y Ff(2)3648 1849
y Fl(n)13 b Fm(log)i(log)g Fl(n)p Fm(\)-)2040 1936 y(comp)r(etitiv)n(e)
26 b(ratio)h(against)g(oblivious)f(adv)n(ersaries.)2040
2111 y(The)c(result)h(also)g(impro)n(v)n(es)f(the)g(p)r(erformance)h
(guaran)n(tees)g(of)g(sev-)2040 2198 y(eral)34 b(other)f(problems)h
(suc)n(h)e(as)i(v)n(ehicle)f(routing)g([16],)k(min)c(sum)2040
2285 y(clustering)18 b([11,)i(9],)g(co)n(v)n(ering)e(steiner)f(tree)g
([33],)k(hierarc)n(hical)e(place-)2040 2372 y(men)n(t)e([35],)j(top)r
(ology)e(aggregation)i([6,)g(44],)g(mirror)e(placemen)n(t)f([29],)2040
2459 y(distributed)22 b Fl(K)5 b Fm(-serv)n(er)22 b([13],)j
(distributed)c(queueing)h([27])i(and)e(mo-)2040 2547
y(bile)k(user)g([5].)35 b(W)-6 b(e)25 b(refer)i(the)e(reader)h(to)f(to)
h([8])h(and)e([17])i(for)f(more)2040 2634 y(detailed)g(descriptions)h
(of)f(these)g(problems.)2040 2854 y Fn(4.)99 b(A)-5 b(CKNO)g
(WLEDGEMENTS)2040 2945 y Fm(W)f(e)22 b(w)n(ould)g(lik)n(e)g(to)h(thank)
e(Y)-6 b(air)22 b(Bartal)h(for)g(helpful)f(commen)n(ts)h(on)2040
3033 y(a)i(previous)f(draft)h(of)h(the)e(pap)r(er,)h(and)f(for)h(p)r
(oin)n(ting)g(us)f(to)h(sev)n(eral)2040 3120 y(of)i(the)e(aforemen)n
(tioned)i(applications.)2040 3340 y Fn(5.)99 b(REFERENCES)2078
3491 y Fm([1])39 b(N.)25 b(Alon,)h(R.)g(M.)g(Karp,)g(D.)f(P)n(eleg,)j
(and)d(D.)g(W)-6 b(est.)26 b(A)2197 3579 y(graph-theoretic)g(game)g
(and)g(its)g(application)h(to)e(the)2197 3666 y Fl(k)r
Fm(-serv)n(er)g(problem.)i Fj(SIAM)f(Journal)j(on)f(Computing)p
Fm(,)2197 3753 y(24\(1\):78{100,)h(F)-6 b(eb.)26 b(1995.)2078
3921 y([2])39 b(A.)25 b(Arc)n(her,)h(K.)f(T)-6 b(alw)n(ar,)28
b(and)d(E.)h(T)-6 b(ardos.)27 b(P)n(ersonal)2197 4008
y(Comm)n(unication,)g(2003.)2078 4176 y([3])39 b(Y.)25
b(Aumann)g(and)g(Y.)h(Rabani.)g(An)f Fl(O)r Fm(\(log)15
b Fl(k)r Fm(\))26 b(appro)n(ximate)2197 4263 y(min-cut)f(max-\015o)n(w)
g(theorem)h(and)f(appro)n(ximation)2197 4350 y(algorithm.)i
Fj(SIAM)g(J.)g(Comput.)p Fm(,)g(27\(1\):291{301,)j(1998.)2078
4518 y([4])39 b(B.)26 b(Aw)n(erbuc)n(h)f(and)g(Y.)h(Azar.)g
(Buy-at-bulk)e(net)n(w)n(ork)2197 4606 y(design.)i(In)f
Fj(38th)k(A)n(nnual)f(Symp)l(osium)f(on)h(F)-6 b(oundations)29
b(of)2197 4693 y(Computer)g(Scienc)l(e)p Fm(,)e(pages)f(542{547,)j
(Miami)e(Beac)n(h,)2197 4780 y(Florida,)g(20{22)h(Oct.)d(1997.)2078
4948 y([5])39 b(B.)25 b(Aw)n(erbuc)n(h)e(and)h(D.)h(P)n(eleg.)g
(Concurren)n(t)g(online)f(trac)n(king)2197 5035 y(of)i(mobile)h(users.)
f(In)f Fj(SIGCOMM)p Fm(,)g(pages)i(221{233,)i(1991.)2078
5203 y([6])39 b(B.)26 b(Aw)n(erbuc)n(h)f(and)g(Y.)h(Sha)n(vitt.)f(T)-6
b(op)r(ology)27 b(aggregation)2197 5290 y(for)f(directed)g(graphs.)g
(In)f Fj(Pr)l(o)l(c)l(e)l(e)l(dings)30 b(of)d(IEEE)g(ISCC)2197
5378 y(\(A)n(thens,)i(Gr)l(e)l(e)l(c)l(e\))p Fm(,pp.)f(47{52,)g(1998.)p
eop
%%Page: 7 7
7 6 bop -113 -69 a Fm([7])38 b(Y.)26 b(Bartal.)h(Probabilistic)h(appro)
n(ximations)e(of)h(metric)5 19 y(spaces)g(and)e(its)h(algorithmic)i
(applications.)f(In)e Fj(IEEE)5 106 y(Symp)l(osium)j(on)g(F)-6
b(oundations)29 b(of)e(Computer)i(Scienc)l(e)p Fm(,)5
193 y(pages)e(184{193,)h(1996.)-113 363 y([8])38 b(Y.)26
b(Bartal.)h(On)e(appro)n(ximating)h(arbitrary)g(metrics)g(b)n(y)f(tree)
5 451 y(metrics.)i(In)e Fj(STOC)p Fm(,)h(1998.)-113 621
y([9])38 b(Y.)26 b(Bartal.)h(A)e(constan)n(t)h(factor)h(appro)n
(ximation)f(for)g(min)5 708 y(sum)g(clustering)g(on)g(HSTs.)g
Fj(Personal)i(Communic)l(ation)p Fm(,)5 795 y(2003.)-152
966 y([10])39 b(Y.)26 b(Bartal,)h(A.)f(Blum,)g(C.)g(Burc)n(h,)g(and)f
(A.)h(T)-6 b(omkins.)26 b(A)5 1053 y(p)r(olylog\()p Fl(n)p
Fm(\)-comp)r(etitiv)n(e)h(algorithm)g(for)g(metrical)f(task)5
1140 y(systems.)g(In)f Fj(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(the)i(Twenty-Ninth)g(A)n(nnual)5 1228 y(A)n(CM)e(Symp)l(osium)h
(on)g(The)l(ory)h(of)e(Computing)p Fm(,)f(pages)5 1315
y(711{719,)j(El)d(P)n(aso,)h(T)-6 b(exas,)27 b(4{6)f(Ma)n(y)g(1997.)
-152 1485 y([11])39 b(Y.)26 b(Bartal,)h(M.)f(Charik)l(ar)h(and)e(R.)g
(Raz.)h(Appro)n(ximating)5 1572 y(min-sum)f Fl(k)r Fm(-clustering)i(in)
e(metric)h(spaces.)h(In)e Fj(Pr)l(o)l(c)l(e)l(e)l(dings)5
1660 y(of)i(the)i(Thirty-Thir)l(d)g(A)n(nnual)e(A)n(CM)g(Symp)l(osium)h
(on)5 1747 y(The)l(ory)h(of)e(Computing)p Fm(,)g(pages)f(11{20,)i
(Hersonissos,)5 1834 y(Crete,)f(Greece)f(6{8)h(July)f(2001.)-152
2004 y([12])39 b(Y.)26 b(Bartal)h(and)e(M.)h(Mendel.)h(Multi-em)n(b)r
(edding)e(and)g(path)5 2092 y(appro)n(ximation)h(of)h(metric)f(spaces.)
h(In)e Fj(Symp)l(osium)j(on)5 2179 y(Discr)l(ete)h(A)n(lgorithms)p
Fm(,)e(2003.)-152 2349 y([13])39 b(Y.)26 b(Bartal)h(and)e(A.)h(Rosen.)f
(The)h(distributed)f(k-serv)n(er)5 2437 y(problem-a)h(comp)r(etitiv)n
(e)g(distributed)f(translator)i(for)5 2524 y(k-serv)n(er)e(algorithms.)
j(In)d Fj(IEEE)i(Symp)l(osium)g(on)5 2611 y(F)-6 b(oundations)29
b(of)f(Computer)g(Scienc)l(e)p Fm(,)f(pages)g(344{353,)5
2698 y(1992.)-152 2869 y([14])39 b(J.)27 b(Bourgain.)g(On)e(lipsc)n
(hitz)h(em)n(b)r(eddings)g(of)g(\014nite)f(metric)5 2956
y(spaces)i(in)e(hilb)r(ert)h(space.)h Fj(Isr)l(ael)h(Journal)g(of)f
(Mathematics)p Fm(,)5 3043 y(52\(1-2\):46{52,)i(1985.)-152
3213 y([15])39 b(G.)26 b(Calinescu,)i(H.)d(Karlo\013,)i(and)e(Y.)h
(Rabani.)5 3301 y(Appro)n(ximation)f(algorithms)j(for)e(the)g
(0-extension)5 3388 y(problem.)g(In)f Fj(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(the)i(twelfth)f(annual)5 3475 y(A)n(CM-SIAM)f(symp)l(osium)h(on)
g(Discr)l(ete)h(algorithms)p Fm(,)e(pages)5 3562 y(8{16,)h(2001.)-152
3733 y([16])39 b(M.)26 b(Charik)l(ar,)h(C.)f(Chekuri,)g(A.)g(Go)r(el,)h
(and)e(S.)h(Guha.)5 3820 y(Rounding)f(via)h(trees:)35
b(deterministic)26 b(appro)n(ximation)5 3907 y(algorithms)h(for)g
(group)f(Steiner)f(trees)h(and)g Fl(k)r Fm(-median.)g(In)5
3994 y Fj(STOC)p Fm(,)g(pages)g(114{123,)j(1998.)-152
4165 y([17])39 b(M.)26 b(Charik)l(ar,)h(C.)f(Chekuri,)g(A.)g(Go)r(el,)h
(S.)e(Guha,)h(and)g(S.)f(A.)5 4252 y(Plotkin.)h(Appro)n(ximating)g(a)g
(\014nite)f(metric)h(b)n(y)f(a)h(small)5 4339 y(n)n(um)n(b)r(er)f(of)h
(tree)g(metrics.)h(In)e Fj(IEEE)i(Symp)l(osium)h(on)5
4426 y(F)-6 b(oundations)29 b(of)f(Computer)g(Scienc)l(e)p
Fm(,)f(pages)g(379{388,)5 4513 y(1998.)-152 4684 y([18])39
b(C.)25 b(Chekuri,)g(A.)f(Gupta,)h(I.)f(Newman,)i(Y.)e(Rabino)n(vic)n
(h,)g(and)5 4771 y(A.)i(Sinclair.)g(Em)n(b)r(edding)g
Fl(k)r Fm(-outerplanar)g(graphs)g(in)n(to)g Fl(`)1733
4779 y Ff(1)1767 4771 y Fm(.)5 4858 y(In)f Fj(SOD)n(A)p
Fm(,)h(2003.)-152 5029 y([19])39 b(C.)27 b(Chekuri,)e(S.)h(Khanna,)f
(J.)i(Naor,)f(and)f(L.)h(Zosin.)5 5116 y(Appro)n(ximation)f(algorithms)
j(for)e(the)g(metric)g(lab)r(eling)5 5203 y(problem)f(via)h(a)f(new)g
(linear)h(programming)h(form)n(ulation.)f(In)5 5290 y
Fj(Symp)l(osium)i(on)g(Discr)l(ete)h(A)n(lgorithms)p
Fm(,)d(pages)h(109{118,)5 5378 y(2001.)2040 -69 y([20])39
b(G.)26 b(Ev)n(en,)g(J.)g(Naor,)g(S.)g(Rao,)g(and)f(B.)i(Sc)n(hieb)r
(er.)2197 19 y(Divide-and-conquer)d(appro)n(ximation)i(algorithms)h
(via)2197 106 y(spreading)f(metrics)h(\(extended)d(abstract\).)i(In)f
Fj(IEEE)2197 193 y(Symp)l(osium)j(on)g(F)-6 b(oundations)29
b(of)e(Computer)i(Scienc)l(e)p Fm(,)2197 280 y(pages)d(62{71,)i(1995.)
2040 432 y([21])39 b(J.)26 b(F)-6 b(ak)n(c)n(haro)r(enphol,)26
b(C.)h(Harrelson,)f(S.)g(Rao,)g(and)2197 520 y(K.)g(T)-6
b(alw)n(ar.)27 b(An)e(impro)n(v)n(ed)g(appro)n(ximation)h(for)h(the)
2197 607 y(0-extension)f(problem.)g(In)f Fj(Symp)l(osium)j(on)f(Discr)l
(ete)2197 694 y(A)n(lgorithms)p Fm(,)g(2003.)2040 846
y([22])39 b(A.)25 b(Fiat)i(and)e(M.)h(Mendel.)h(Better)f(algorithms)h
(for)g(unfair)2197 934 y(metrical)g(task)e(systems)h(and)g
(applications.)h(In)e Fj(Pr)l(o)l(c)l(e)l(e)l(dings)2197
1021 y(of)i(the)i(32nd)f(STOC)p Fm(,)d(pages)i(725-734,)h(2000.)2040
1173 y([23])39 b(U.)25 b(F)-6 b(eige.)27 b(Appro)n(ximating)e(the)h
(bandwidth)f(via)h(v)n(olume)2197 1260 y(resp)r(ecting)g(em)n(b)r
(eddings)g(\(extended)e(abstract\).)j(In)e(A)n(CM,)2197
1347 y(editor,)h Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)d(the)i(thirtieth)g
(annual)f(A)n(CM)2197 1435 y(STOC)p Fm(,)e(pages)g(90{99,)i(1998.)2040
1587 y([24])39 b(N.)23 b(Garg,)i(G.)e(Konjev)n(o)r(d,)h(and)f(R.)g(Ra)n
(vi.)g(A)g(p)r(olylogarithmic)2197 1674 y(appro)n(ximation)j(algorithm)
h(for)g(the)e(group)h(steiner)g(tree)2197 1761 y(problem.)g
Fj(Journal)i(of)g(A)n(lgorithms)p Fm(,)e(37,)h(2000.)2040
1914 y([25])39 b(A.)25 b(Gupta.)h(Steiner)g(p)r(oin)n(ts)g(in)f(tree)h
(metrics)g(don't)g(\(really\))2197 2001 y(help.)g(In)f
Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)f(the)g(twelfth)g(annual)g(A)n
(CM-SIAM)2197 2088 y(symp)l(osium)g(on)g(Discr)l(ete)h(algorithms)p
Fm(,)e(pages)f(220{227.)2197 2175 y(A)n(CM)g(Press,)h(2001.)2040
2328 y([26])39 b(A.)25 b(Gupta,)h(I.)g(Newman,)g(Y.)g(Rabino)n(vic)n
(h,)f(and)g(A.)h(Sinclair.)2197 2415 y(Cuts,)g(trees)g(and)g
Fl(l)2759 2423 y Ff(1)2793 2415 y Fm(-em)n(b)r(eddings)f(of)i(graphs.)f
(In)f Fj(40th)2197 2502 y(F)n(OCS)p Fm(,)h(pages)g(399{408,)j(1999.)
2040 2654 y([27])39 b(M.)26 b(Herlih)n(y)-6 b(,)25 b(S.)h(Tirthapura,)g
(and)g(R.)f(W)-6 b(attenhofer.)2197 2742 y(Comp)r(etitiv)n(e)26
b(concurren)n(t)f(distributed)h(queueing.)f(In)2197 2829
y Fj(Pr)l(o)l(c)l(e)l(e)l(dings)30 b(of)d(the)h(20th)h(A)n(CM)e(Symp)l
(osium)h(on)2197 2916 y(Principles)g(of)f(Distribute)l(d)i(Computing)d
Fm(2001.)2040 3068 y([28])39 b(T.)26 b(C.)h(Hu.)e(Optim)n(um)g(comm)n
(unication)h(spanning)g(trees.)2197 3156 y Fj(SIAM)h(J.)g(Computing)p
Fm(,)g(3:188{195,)i(1974.)2040 3308 y([29])39 b(S.)26
b(Jamin,)g(C.)h(Jin,)f(Y.)g(Jin,)g(D.)g(Raz,)g(Y.)f(Sha)n(vitt,)g(and)
2197 3395 y(L.)h(Zhang.)g(On)f(the)g(placemen)n(t)h(of)g(in)n(ternet)
2197 3482 y(instrumen)n(tation.)g(In)f Fj(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(IEEE)g(INF)n(OCOM)2197 3569 y(\(T)-6 b(el-A)n(viv,)28
b(Isr)l(ael\))p Fm(,)e(2000.)2040 3722 y([30])39 b(R.)25
b(Karp.)h(A)f(2)p Fl(k)r Fm(-comp)r(etitiv)n(e)i(algorithm)g(for)f(the)
f(circle.)2197 3809 y(Man)n(uscript,)h(August)f(1989.)2040
3961 y([31])39 b(P)-6 b(.)26 b(N.)f(Klein,)h(S.)g(A.)f(Plotkin,)i(and)e
(S.)h(Rao.)g(Excluded)2197 4049 y(minors,)h(net)n(w)n(ork)e(decomp)r
(osition,)i(and)f(m)n(ulticommo)r(dit)n(y)2197 4136 y(\015o)n(w.)g(In)f
Fj(A)n(CM)i(Symp)l(osium)h(on)g(The)l(ory)h(of)e(Computing)p
Fm(,)2197 4223 y(pages)f(682{690,)j(1993.)2040 4375 y([32])39
b(J.)26 b(M.)h(Klein)n(b)r(erg)f(and)f(E.)h(T)-6 b(ardos.)27
b(Appro)n(ximation)2197 4463 y(algorithms)g(for)g(classi\014cation)h
(problems)e(with)g(pairwise)2197 4550 y(relationships:)36
b(Metric)26 b(lab)r(eling)h(and)f(mark)n(o)n(v)f(random)2197
4637 y(\014elds.)h(In)f Fj(IEEE)i(Symp)l(osium)h(on)g(F)-6
b(oundations)29 b(of)2197 4724 y(Computer)g(Scienc)l(e)p
Fm(,)e(pages)f(14{23,)i(1999.)2040 4876 y([33])39 b(G.)26
b(Konjev)n(o)r(d)g(and)f(R.)g(Ra)n(vi.)h(An)f(appro)n(ximation)2197
4964 y(algorithm)g(for)g(the)f(co)n(v)n(ering)g(steiner)h(problem.)f
Fj(Symp)l(osium)2197 5051 y(on)k(Discr)l(ete)h(A)n(lgorithms)p
Fm(,)d(pp.)g(338{344,)i(2000.)2040 5203 y([34])39 b(G.)26
b(Konjev)n(o)r(d,)g(R.)f(Ra)n(vi,)h(and)f(F.)h(Salman.)h(On)2197
5290 y(appro)n(ximating)f(planar)g(metrics)h(b)n(y)d(tree)i(metrics.)h
Fj(IPL:)2197 5378 y(Information)g(Pr)l(o)l(c)l(essing)j(L)l(etters)p
Fm(,)e(80,)f(2001.)p eop
%%Page: 8 8
8 7 bop -152 -69 a Fm([35])39 b(M.)26 b(R.)g(Korup)r(olu,)g(C.)g(G.)g
(Plaxton,)h(and)e(R.)h(Ra)t(jaraman.)5 19 y(Placemen)n(t)h(algorithms)g
(for)f(hierarc)n(hical)h(co)r(op)r(erativ)n(e)5 106 y(cac)n(hing.)g(In)
e Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)f(the)g(10th)h(A)n(nnual)5
193 y(A)n(CM-SIAM)e(Symp)l(osium)h(on)g(Discr)l(ete)h(A)n(lgorithms)5
280 y Fm(pp.)c(586{595,)k(1999.)-152 427 y([36])39 b(T.)27
b(Leigh)n(ton)e(and)h(S.)f(Rao.)i(An)d(appro)n(ximate)i(max-\015o)n(w)5
514 y(min-cut)f(theorem)h(for)g(uniform)h(m)n(ulticommo)r(dit)n(y)e
(\015o)n(w)5 601 y(problems)h(with)g(application)h(to)f(appro)n
(ximation)5 689 y(algorithms.)i(In)d Fj(IEEE)i(Symp)l(osium)h(on)f(F)-6
b(oundations)30 b(of)5 776 y(Computer)f(Scienc)l(e)p
Fm(,)e(pages)f(422{431,)j(1988.)-152 923 y([37])39 b(N.)26
b(Linial,)h(E.)f(London,)g(and)f(Y.)g(Rabino)n(vic)n(h.)h(The)5
1010 y(geometry)g(of)h(graphs)f(and)f(some)i(of)f(its)g(algorithmic)5
1097 y(applications.)i Fj(COMBINA)-6 b(T:)26 b(Combinatoric)l(a)p
Fm(,)h(15,)f(1995.)-152 1244 y([38])39 b(J.)27 b(Matousek.)f(Lectures)g
(on)g(discrete)g(geometry)-6 b(.)26 b(Springer,)5 1331
y(in)g(press.)-152 1478 y([39])39 b(I.)26 b(Newman)g(and)f(Y.)g(Rabino)
n(vic)n(h.)h(A)f(lo)n(w)n(er)i(b)r(ound)d(on)i(the)5
1565 y(distortion)h(of)f(em)n(b)r(edding)f(planar)h(metrics)h(in)n(to)f
(euclidean)5 1652 y(space.)h(In)e Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)f
(the)g(eighte)l(enth)i(annual)5 1740 y(symp)l(osium)e(on)g
(Computational)g(ge)l(ometry)p Fm(,)g(pages)f(94{96.)5
1827 y(A)n(CM)f(Press,)h(2002.)-152 1974 y([40])39 b(D.)26
b(P)n(eleg)g(and)g(E.)g(Reshef.)g(Deterministic)h(p)r(olylog)5
2061 y(appro)n(ximation)f(for)h(minim)n(um)e(comm)n(unication)i
(spanning)5 2148 y(trees.)g Fj(L)l(e)l(ctur)l(e)i(Notes)g(in)e
(Computer)i(Scienc)l(e)p Fm(,)5 2235 y(1443:670{681,)i(1998.)2040
-69 y([41])39 b(Y.)25 b(Rabino)n(vic)n(h)g(and)h(R.)f(Raz.)h(Lo)n(w)n
(er)h(b)r(ounds)e(on)g(the)2197 19 y(distortion)h(of)h(em)n(b)r(edding)
e(\014nite)g(metric)i(spaces)f(in)g(graphs.)2197 106
y Fj(GEOMETR)-6 b(Y:)27 b(Discr)l(ete)i(&)e(Computational)i(Ge)l
(ometry)p Fm(,)2197 193 y(19,)e(1998.)2040 340 y([42])39
b(P)-6 b(.)26 b(Ragha)n(v)l(an.)f(Probabilistic)j(construction)e(of)
2197 427 y(deterministic)g(algorithms:)37 b(Appro)n(ximating)25
b(pac)n(king)2197 514 y(in)n(teger)h(programs.)h Fj(Journal)i(of)e
(Computer)h(and)g(System)2197 601 y(Scienc)l(es)p Fm(,)f
(37\(2\):130{143,)j(Oct.)c(1988.)2040 748 y([43])39 b(S.)26
b(Rao.)g(Small)g(distortion)h(and)e(v)n(olume)g(preserving)2197
835 y(em)n(b)r(eddings)h(for)g(planar)g(and)f(euclidean)i(metrics.)f
(In)2197 923 y Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)d(the)h(\014fte)l
(enth)h(annual)f(symp)l(osium)g(on)2197 1010 y(Computational)g(ge)l
(ometry)p Fm(,)g(pages)f(300{306.)h(A)n(CM)e(Press,)2197
1097 y(1999.)2040 1244 y([44])39 b(Y.)25 b(Sha)n(vitt)g(T)-6
b(op)r(ology)27 b(aggregation)h(for)f(net)n(w)n(orks)e(with)2197
1331 y(hierarc)n(hical)i(structure:)34 b(A)25 b(practical)i(approac)n
(h.)f(In)2197 1418 y Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)d(36th)h(A)n
(nnual)g(A)n(l)t(lerton)g(Confer)l(enc)l(e)h(on)2197
1505 y(Communic)l(ation,)e(Contr)l(ol,)h(and)g(Computing)g(\(A)n(l)t
(lerton)2197 1593 y(Park,)g(Il)t(linois\))p Fm(,)c(1998.)2040
1740 y([45])39 b(P)-6 b(.)26 b(D.)f(Seymour.)h(P)n(ac)n(king)g
(directed)f(circuits)i(fractionally)-6 b(.)2197 1827
y Fj(Combinatoric)l(a)p Fm(,)27 b(15\(2\):281{288,)j(1995.)2040
1974 y([46])39 b(B.)26 b(Y.)g(W)-6 b(u,)25 b(G.)h(Lancia,)h(V.)e
(Bafna,)j(K.)d(Chao,)i(R.)f(Ra)n(vi,)2197 2061 y(and)f(C.)i(Y.)e(T)-6
b(ang.)27 b(A)e(p)r(olynomial)i(time)f(appro)n(ximation)2197
2148 y(sc)n(heme)g(for)g(mimim)n(um)g(routing)g(cost)g(spanning)g
(trees.)g(In)2197 2235 y Fj(A)n(CM-SIAM)h(Symp)l(osium)h(on)g(Discr)l
(ete)h(A)n(lgorithms)p Fm(,)d(1998.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
