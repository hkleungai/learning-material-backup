COMP104 : Quiz 10

Dynamic Objects

1.	List out the usage of the first "delete p", identify the problem located on the following program
	and state the reason.

	#include <iostream>
	using namespace std;
	int main( ){
		int x =20;
		int* p;
		p = new int;
		*p = 30;
		cout << *p << " " << x << endl;
		delete p;
		p = &x;
		delete p;
		cout << *p << " " << x << endl;
		return 0;
	}



2. 	What is wrong in the following code? 

	#include <iostream>
	using namespace std;
	void main( ){
		const int SIZE = 10000000;
		int i;
		int A[SIZE];
		for(i=0; i<SIZE; i++)
			A[i] = i;
		int *B;	
		B = new int[SIZE];
		for(i=0; i<SIZE; i++)
			B[i] = A[i];
		for(i=0; i<SIZE; i++)
			cout << A[i] << " " << B[i] << endl; 
	}



3.	What is the output of the following code? 

	#include <iostream>
	using namespace std;
	int main(){
        	int i, *p, *r, t[4]={0,1,2,3};

        	p = new int[4];
        	for(i=0; i<4; i++)
               	 p[i] = 6*(i+1);
        	r = t;
        	for(i=3; i>=0; i--)
                	r[i] -= 1;
        	r[2] = 8;
        	for(i=0; i<4; i++)
                	t[i] = p[i] + r[i];
        	for(i=0; i<4; i++)
                	cout << t[i] << " ";    
        	delete [] p; 
        	return 0;
	}


4.	What is the output of the following code?

	#include <iostream>
	using namespace std;
	void F1(int* temp){ 
		*temp = 99;
	}
	int main( ){
		int *p1, *p2;
		p1 = new int;
		*p1 = 50;
		p2 = p1;
		F1(p2);
		cout << *p1 << " " << *p2 << endl;
		p1 = new int;
		*p1 = 88;
		cout << *p1 << " " << *p2 << endl;
		delete p1;
		delete p2;
		return 0;
	}



5. 	What is wrong in the following code? 

	#include <iostream>
	using namespace std;
	int main(){
		int *p, *r;
		p = new int;
		r = new int;
		*p = 1;
		r = p; 
        	. . .
		return 0;
	}



Answer 1:	
	The first "delete p" deletes what p points to
	The second "delete p" is invalid
	Dangling pointer problem
Answer 2:  	
	Windows may not have enough memory and return a NULL pointer (which is not tested for).
	Need a delete operation. 
Answer 3: 	5 12 26 26

Answer 4:	99 99	
		88 99
Answer 5:	
	It results in an inaccessible object (memory leak).
	(The new object created for r cannot be accessed or deleted after r is set to p)

