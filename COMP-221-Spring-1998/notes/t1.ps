%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: t1.dvi
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSCommandLine: dvips -o t1.ps t1.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.02.10:0720
%%BeginProcSet: thicken.ps
% Increase the strokewidth of a stroked (PaintType 1 or 3) font.
% If the font is not of the right PaintType or does not have a 
% StrokeWidth entry, does nothing.

% Mario Wolczko, 10 Sep 92

/ThickenFont {  % factor ThickenFont
20 dict begin
  /factor exch def
  /StrokeWidth where {
    /fdict exch def
    PaintType dup
    1 eq exch 3 eq or
      { StrokeWidth factor mul
	fdict /StrokeWidth 3 2 roll put
      } if
  } if
end
} def
%%EndProcSet
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (t1.dvi)
@start /Fa 25 122 df<953801FFF0A260A24E7F60A260A260A295387FDFFCA2F0FF9F
5F191F5F18FE170706FC7F170F18F8171F94383FF00FA2EF7FE086EFFFC0A24C13805E18
005E4D7F040F825F161F5F163F4C5A5F04FF824D7F5D5F5D94C7FC5D4B5A874B5A4C8015
3F5E157F5E03FF834A5BA24A4980A24A90C9FC5D4AB9FC875C5CA25CA291BAFC03C0C912
7F49855D5B4990CA123FA2495AA24948845C133F4948171FA2495AA2485B87485B91CBFC
4885485AA2485A1C80485AA2485A498412FF51647CE35A>65 D<913807FF80A44A90C8FC
A44A5AA54A5AA54A5AA44A5AA5495BA5495BA4495BA54990C9FCA5495AA5495AA4495AA5
495AA5485BA4485BA5485BA54890CAFCA5485AA4485AA390B9FCA24817FEA5B912FCA238
6474E349>76 D<912607FFFC4EB5FCA265A24A5013FE8265A24A5013FC65A203FDF17FDF
1E9F91263FF9FF9538FFBFF8A252133F641DFEDA7FF10607EB7FF01DFC71160F1DF8DAFF
E1061FEBFFE0651C3F525AA24901C06DDCFFC113C0A2511381A251130149494D4913801C
FE1B0F7116FC4949051F491300047F17F8F33FF0A2F37FE0494806FF495A7116C0621C80
624948013F4D485A62631A0F714A5A49484E495A1A3F63041F157F49484E495A1AFF6371
5B6349484C90C7485A61040F5D190F624849041F4A5B6271133F62484901074A48495BA2
4F5AA24E5B4890C74E90C7FC4E90C7FCA2706C485A614848040F4B5A61181F61183F4848
6E4A4A5A4E5AA24E5A4848505A96C8FCA2705BA248484C4B5A60A260A2484892CA485AA2
706473E376>I<0207B712F8F1FF801AF01AFC4A83747E87874A48C880070F7F07037F19
00747E4A48163F747E861C80864A5A86A21CC04A5AA549491880A3621C00495B62631A1F
49495F1A3F631A7F505A4990C9485B614F5B4F5B073F90C7FC4948EEFFFE06035B060F5B
4DB55A91B912C049604FC8FC6119F04917C04EC9FC18E002F8CDFCA2495AA5485BA4485B
A5485BA54890CEFCA5485AA4485AA5485AA5485AA2526474E356>80
D<923807FF80037F13F00207B512FC021F80027FECFF8049B712C0010716E0A218F0EDE0
034AC713F802F8147F02C0EC3FFC91C8FC010E151F90C9FCA9EF3FF8A4EE01FF030FB512
F04AB6FC141F91B7FC010316E0130F133F90B6128048ECE0004849C64813C04813F04813
804890C7FCEA3FFC494A1380127F5BA25E484816006D5CA25E6DEC7FFE16FF01FE130739
7FFF803F91B6FC5F7E16DF6C151F6C14FC6C9138E03FF86C1400C601E090C8FC364177BF
41>97 D<EC07FFA44A5AA44A5AA54A5AA54A5AA44A5AA5495BA5495BA44990CAFC4CB47E
041F13F093B57E03078090260FFE1F804B8092B7128091B812C0A249020014E003F8131F
03E0010713F003807F92C77E49486E13F85C4A157FA24948153F19FCA4495AA319F8A248
5BA44849ED7FF0A4F0FFE04890C9FCA24D13C0A24D1380485A4D13005F60171F001F4C5A
4D5A6D15FF04035B486D495B6E011F5B6E017F5BDAF807B5C7FC91B65A485E01F75D01F3
5D01F115C0D9F07F5C48486C49C8FC020F13F0C813803E6576E345>I<EEFFF8030FEBFF
80037F14E04AB612F8020715FE4A81023F16805C91B8120001039038FE003F4901F01303
4901C0EB00FE4990C8123E4948151C4A150C494892C7FC495A485B5C485B5A91CBFC485A
A2485AA3485AA2485AA4485AAC7FA2127F6D150217066C6C151E6D153E001F16FE6D6C13
036C6D131F9138F801FF6C90B65A7E6C5E6C16E06D5D011F4AC8FC6D14F8010114C09026
003FFCC9FC394176BF3C>I<F13FF8A4F17FF0A4F1FFE0A54E13C0A54E1380A44E1300A5
4E5AA54E5AA44E5AED1FF892B5FC020314E0020F14F8023F6E485A4A14FE91B8FC13035B
4902005C4901F0133F03C0130F4990C77E494880D9FFF85E4A80485B485B4D5B485B91C8
FC5A5B48484B90C7FCA2123F5BA2007F4C5A5BA348484B5AA54D5AA54D5AA37F17FF4C5B
6D5C007F5D6D5C6D4A5B6C6C147F02C090B5FC6CEBF80791B7FC6C5F6C15F36C15E36C15
836CECFE036DD9F80790C8FC011F13E0D907FECBFC456576E345>I<ED03FF033F13E092
B512F8020380020F804A80027F158091B712C05B49D9F80F13E049EBE00149D9800013F0
4948C7127F4948143F494815F84948141F5C485B4849140FA24890C8FC5B120F5B121F90
B8FC5AA218F05AA4D8FFE0CAFCA35BA57FA56C7EA27F17026C6C150E6D153E6C6C15FE6E
13036C01E0131F9138F801FF6C90B65A7E6C5E6C16E06D1580011F4AC7FC6D14F8010114
C09026003FF8C8FC354176BF3C>I<DC07FCEC1FE0933A3FFF8003FF93B5EAE01F03036E
B5FC030F91B6FC5D157F92B9FC4AEBF80F4AD9C0030180C7FC4C6C7F4A48C7FC4A5A4A48
6E7EA24A5AA24A5AA24A5AA449494A5AA34D5BA34D90C8FC4D5A6D7F4D5A6F495A173FDA
7FF8EBFFF0DBFE075B91B75A495E494BC9FC5FD907FB5CD90FF114E0DAF07F90CAFC9138
E00FF8011F90CCFCA3133FA3808091B612E017FF18E06D16F8848484498390B97E5A5A48
01C0C78091C8120F4848150348488149814848167FA2485AA400FF4D5AA24D5B007F5E6D
4B90C8FC6D4B5A6C6C153F01FFEDFFFC6C01C001075B6C01FC017F13E06C90B75A6C5F6C
4CC9FC6C16F8013F15E0010F1580010102F8CAFCD9001F13804B5D7FBE43>103
D<EC07FFA44A5AA44A5AA54A5AA54A5AA44A5AA5495BA5495BA44990CAFCEE03FF043F13
E093B512F803038090260FFE0F804B80157F92B7128091B8FC49EC007F03FC011F13C003
F013075D4B7F495B92C7FC5CA2494816805CA25CA201FF4B13005CA448494A5AA448494A
5AA54890C8485AA548484B5AA548484B5AA448484A5BA548484A5BA548484A90C7FCA23A
6476E345>I<EC1FFEA3EC3FFCA5EC7FF8A491C7FCB3A3EB07FFA3495AA5495AA5495AA4
495AA5495AA5485BA4485BA54890C7FCA5485AA5485AA4485AA5485AA5485AA21F5F76DE
20>I<943801FFE0A34D13C0A54D1380A494C8FCB3A3EF7FF0A34D5AA54C5BA54C5BA44C
90C7FCA54C5AA54C5AA44C5AA54C5AA54C5AA54B5BA44B5BA54B90C8FCA54B5AA44B5AA5
4B5AA45E157FA24B5A00085B0018495B001E5B003F011F5B01F1B5C9FC48B6FC5DB65A5D
6C5C001F14C000075C000149CAFC38001FF03B7C8EDE24>I<EC07FFA44A5AA44A5AA54A
5AA54A5AA44A5AA5495BA5495BA44990CAFCA2F07FFEF0FFF84D13F04948020713E04D13
C04D13804D13004D5A4948ECFFF84C5B04075B4C5B4C5B49484990C7FCEE7FFC4C5A0303
5B4948485B4B5B4B5B4B90C8FCED7FFC4948485A02E35B14E714EF91B57E5A82A2825AED
CFFF158FECFE0F4A6C7F4813F84A6C7F14E04A6C7F14804848C77FA2707EA348486E7EA2
707EA248486E7EA2707FA2707F485AA2707FA2707F485A717E3F6476E342>I<EC07FFA4
EC0FFEA4EC1FFCA5EC3FF8A5EC7FF0A4ECFFE0A54913C0A5491380A4491300A5495AA549
5AA5495AA4495AA5495AA5485BA4485BA54890C7FCA5485AA5485AA4485AA5485AA5485A
A2206476E320>I<932603FF80EC0FFED907FF011F01F091387FFFC093B500FC0103B512
F003036E010F8090260FFE0F6E013F804B6F4880037F0381B6FC92B700C38191B812C749
DA007F9038CFFC0103FC010F9027FFF0003F138003F06D02C07F4B6D4A7F4B6D91C77E49
495D92C75C4A5EA249484C16004A5EA34A5E01FF4B4C5A4A5EA448494A90C8485AA44849
4A484B5AA54890C848484B5AA548484B484B5AA548484B484A5BA448484B484A5BA54848
4A494A90C7FCA548484A494A5AA2613F76BE6C>I<EE03FFD907FF013F13E093B512F803
038090260FFE0F804B80157F92B7128091B8FC49EC007F03FC011F13C003F013075D4B7F
495B92C7FC5CA2494816805CA25CA201FF4B13005CA448494A5AA448494A5AA54890C848
5AA548484B5AA548484B5AA448484A5BA548484A5BA548484A90C7FCA23A3F76BE45>I<
EEFF80030F13F8037F13FE4AB67E020781021F814A814A8149B77E49D9FE017F499039E0
007FFF490180131F4990C76C1380D93FFC804A8049486E13C0495A485B7113E0485B4890
C9FCA24848167FA2485AA25B123F18FF5B127FA300FF4C13C05BA34D1380A25F1900A24D
5AA24D5A6D153F60007F4C5A6D15FF4C5B6C6C4A5B6D4A5B161F6C6C6C4990C7FC6EEBFF
FE6CD9F80713F86C90B65A6C5E6C5E6C93C8FC6D5C6D14F8010F14E0010391C9FC903800
3FF03B4176BF43>I<EF07FEDA1FFC90387FFFC00403B57E041F8091263FF87F8093B67E
03FB8192B8FCA24AD9FC0314809338E0007F04806D13C04BC77E4B804A486E13E04B805D
84495B1AF084A3495BA31AE0A24990C9FCA449484B13C0A44E1380495A601A0060614948
151F61183F4E5A18FF017F4B5B4D5B6E5C4D5B496C023F5B6E91B5C7FCDB80035BDBE01F
5B92B65A485F02DF5D02CF5D02C792C8FC02C15C48018014F8033F13C0DB03FEC9FC92CB
FC4890CCFCA5485AA5485AA4485AA5485AA5485AA2445B7CBE45>I<177CD907FEEB07FC
163F16FF90260FFC0313F85D151F5D5D4948B512F002F9EBFE0002FB13F091B512804BC7
FC495B15F05D5D495B92C8FC5C5CA2495A5CA25CA25A5CA3485BA54890C9FCA5485AA548
5AA4485AA5485AA5485AA22E3F76BE2E>114 D<92380FFF8092B512F8020714FF021F15
804A15E04A15F049B7FC5B18E049EBC0034990C7EA3FC0D91FFC140F4A14034948EC0180
94C7FC5C137FA313FFA38080EB7FFEECFFC015FE6DEBFFE016FC6D14FF6D816D816D816D
816D6C80141F020180EC000F03007F163F161F160FA21607A44C5AA21208001C4B5A001E
153FD81F805DD83FE014FF01F801035B277FFF800F5B91B6FC5FB8C7FC6C5D001F15F800
075D000115C0D8003F49C8FC010113E034417BBF34>I<EC7FF04A5AA5495BA5495BA449
90C8FCA2003FB712C0A3481680A5B8120026001FFCC8FCA4495AA4495AA5495AA5485BA4
485BA54890C9FCA5485AA5121F5BA26D801503150F153F9038FF01FF91B5FCA37E4BC7FC
6C14F815C06C49C8FCC613C02A5073CE31>I<D91FFCEDFFE0A349484A13C0A549484A13
80A549484A1300A448494A5AA548494A5AA54890C8485AA448484B5AA548484B5AA54848
4A5BA35EA248484A5B5E5E5E4C90C7FC4BB5FC486C130701FE133F6CB8FC5F16EF168F6C
ECFE0F15F86C9138C01FFC0007EBFE00000101C090C9FC3B3F74BD45>I<D8FFF0923803
FF804D1300A2007F4C5AA24D5A173F6D5E4D5AA2003F4C5AA24C5B5E6D5E4C90C7FCA200
1F4B5AA24C5AA26D4A5A4C5AA2000F4B5AA24B5BA24B5B6D92C8FC5D6C4A5AA24B5AA24B
5A5E6C147F5EEC80FF5E14815E028390C9FC7EEC87FEA2EC8FFCA2EC9FF85D7EECBFE0A2
ECFFC0A25D92CAFC7F5CA25C393E71BD3E>I<DAFFF0923803FF804F1300147F4F5A191F
6F5E193F62023F4C5AA26F4B5A6062021F4B5BA24E90C7FC814E5A140F4E5A4E5AA26F4A
5AA26E4B5AA24D5B61705A6E4A90C8FCA24D5A60171F6E5D173F60EEC07F604D5A8004C1
5BA295C9FC16C3037F5BEEC7FCA2EECFF8A2033F5BEEDFE0A25F16FF5F8194CAFC5EA25E
150F4B5AA24B5A5E157F4B5AA24A5B93CBFC5C5D14074A5AA24A5A4A5AA24A5A0060495A
D87E035B007FB5FC92CCFC5CB55A5C5C14C05CD81FFCCDFC495B81BD3E>121
D E /Fb 1 16 df<913803FF80021F13F091B512FE01036E7E4981011F15F04981498190
B77E48824817804817C0A24817E0A24817F04817F8A34817FCA3B912FEAC6C17FCA36C17
F8A36C17F06C17E0A26C17C0A26C17806C17006C5E6D5D6D5D6D5D010715C06D5D01004A
C7FC021F13F002031380373878BF48>15 D E /Fc 39 122 df<EA03F0EA0FFC487E487E
48138014C0B5FCA214E0A314F07EA27EEA1FFEEA0FFCEA03F0C7FCA6130114E0A3130314
C0A21307A21480130F14005B131E133E133C137C5B5B1201485A485A485A48C7FC5A123E
121814336EF737>39 D[<EE0780160F161FEE3E005E4B5A4B5A15074B5A4B5A4B5A93C7
FC157E15FE4A5A4A5A4A5AA24A5A141F4A5A5D147F4AC8FCA2495AA2495A13075C130F5C
131F5C133FA25C137FA2495AA34890C9FCA25A5BA21207A25BA2120FA25BA2121FA35B12
3FA6485AA812FFA35BB37FA3127FA86C7EA6121F7FA3120FA27FA21207A27FA21203A27F
7EA26C7FA36D7EA2133F80A2131F80130F8013078013036D7EA26D7EA26E7E143F816E7E
140F6E7EA26E7E6E7E6E7E157E81826F7E6F7E6F7E15036F7EED007C82EE1F80160F1607
>41 171 108 256 75 I[<127012F8127C7E7EEA0FC06C7E7F6C7E6C7E6C7E137E7F806D
7E6D7E6D7EA26D7E806D7E1300806E7EA26E7EA26E7E81140F81140781140381A2140181
A26E7FA36F7EA282153FA282A2151FA282A2150FA282A3150782A66F7EA81780A381B35D
A31700A84B5AA65E150FA35EA2151FA25EA2153FA25EA2157F5EA24B5AA34A90C7FCA25D
1403A25D14075D140F5D141F5D4A5AA24A5AA24AC8FC5C1301495A5C495AA2495A495A49
5A91C9FC137E13FE485A485A485A5B485A48CAFC123E5A5A1270>41
171 116 256 75 I<B812FEAA2F0A7CA941>45 D<EA03F0EA0FFC487E487E481380A2B5
12C0A66C1380A26C13006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E487E481380A2
B512C0A66C1380A26C13006C5A6C5AEA03F0124A6EC937>58 D<193F4F7EA34F7EA24E7F
A34E7FA34E7FA34E7FA26086A24E7FA34E80F07E7FA206FE804E7EA20501814E7E050381
18F08505078118E085050F814E7EA2051F814E7E053F81A295C7FC4D82177E8605FE824D
80A20401834D80A20403834D800407835F86040F834D80A2041F834D80A2043F8394C9FC
4C84167E8704FE845E870301854C82A20303854C82A24BBA7EA24B85A34B850480C91201
A2033F8593CBFCA24B86037E8403FE865D880201875D880203874B84A20207874B84020F
87A24B84021F875D023F858A027F858102FF885B496D87010F01F84E80013F6D4E800003
B66C053F14FEB700FC043FB812C0A67A7C78FB8C>65 D<952603FFF8163895B600C01578
050703F815F8053F03FE14014CB87E040705E01303041FDAE00301F81307047F01FCC7EA
1FFC4BB500C0DA07FF130F030791C80001EB801F4B01F89238007FC0033F01E093381FE0
3F4B018093380FF07F92B5CAEA03F84A01FC943801FCFF02074971B5FC4A49844A01C084
4A49844A90CC7E4A5A49874B85494985495B49875D49491A7F5B49491A3FA290B5CE121F
A2485B1E0F485BA2481D075C5A1E03A2485BA3481D015CA35A9BC7FCA35CA2B5FCB07EA2
80A47E1FF8A2807EA36C7FA21E016C1EF0807E1E036C7F1FE06C7F1E076D6D1BC01E0F6D
6D1B806D1C1F6D7F6FF23F007F6D6D1A7E6D6D62816D515A6E6C4F5A6E6D18076E01E04E
5A6E6D4E5A6E6D4E5A02016D4EC7FC6E01FF18FE6F01C0EE03FC6F6D4C5A030F01F8EE1F
F06F01FFEE7FE0030102C0913803FF806F6C01FC021F90C8FC041F903AFFE001FFFC0407
91B612F004015FDC003F93C9FC050715FC050015C0060301FCCAFC6D7E74F987>67
D<BC7E1BFCF3FFC01CF01CFE767ED8000702F0C8000F14E001004ADB007F13F86E49040F
7F6E060313FFE1007F7F767F0A0F13F0767F0A017F767F777E777F777F777F89777F8B77
7F898B787EA2787FA2787FA2787FA28C8A8CA3787FA38CA28AA28CA62180B02100A66866
A268A3545BA3686668A2545BA2545BA25490C7FCA2545A6765535B535B67535B535B5390
C8FC535A52485A525B525B0A1F5B0A7F5B51B5C9FC4A060F5B91B56C047F13F801076E03
0FB512E0BE128052CAFC1CF81CC009FCCBFC1B80797678F58F>I<BF12F8A48AA2D80007
02F0C9121F01004AEE007F6E4917076E1901F4007F1D3FF50FFE1D07A21D031D01A21D00
1E7E1E7FA28AA38AA21F80A21E0FA5F203E0F607C0A49BC7FCA41A07A31A0FA21A1FA21A
3F1AFF1903193F93B8FCA604C0C7123F190319001A3F1A1FA21A0FA21A07A31A03A21F3E
A31F7CA497CAFCA21FFC1FF8A41E01A21FF01E03A31E07A21FE01E0FA21E1FA21E3F1E7F
1FC01EFF651D0765650B7F13804A0703B5FC91B56C171F01076E0407B6FCC0FCA31F00A3
6F7678F580>I<952601FFFC161C067FD9FFC0153C0507B600FC157C053F03FF15FC4CB8
12C0040705F01301041FDAE00101FC1303047F01FCC7EA1FFE4BB500E0DA03FF13074B91
C9EBC00F030F01FCEE3FE04B01F093380FF01F037F01C0933807F83F92B5CAEA01FC4A49
943800FE7F4A01F8F07FFF4A49844A4984023F49844C844A90CCFC4A4885494985495B49
4985491C7F5D49491A3F5B4B1A1F5B90B5CE120FA2485B1E075A5C481D035C5A1E01A248
5BA3481D005CA35A9CC8FCA35CA2B5FCB07EA28050B912C0A37EA28097C8EDC0006C0A0F
49C7FC89775B6C7FA36C7FA27E807EA26C7FA26D7F7F816D7F7F816D7F7F6D7F6D7F6E6C
616E7F82020F6D606E6D606E13FC6E6D606E6D6CEF7FBF6F6DEFFF1F031F01F0933801FE
0F6F01FC933807FC070303D9FF8092381FF8036F02F092387FF0016F6C01FE913903FFE0
00041FD9FFF0017F0180137C040791B648C7123C040105F8141CDC003F04E091C8FC0507
93CBFCDD007F14F8060149CCFC7A7E74F993>71 D<B912F8A6D800074AC7FC010014F06E
5B6E5BB3B3B3B3B3AA4A7F91B57E010714FEB912F8A6357678F546>73
D<BB12FEF2FFF01BFF1CE01CF81CFED8000702F0C8001F6D7E01004A030114E06E49DB00
3F7F6E060713FC757F09007F767F767F767F767F888A767FA28A888AA21F8088A31FC0A9
1F80A3641F00A2666466A2525B66525B525B525B5290C7FC525A09035B090F5B093F13E0
50B51280083F91C8FC93B912F81CE099C9FC1BF850CAFC04C0CEFCB3B3A94A7F91B57E01
0714FEB912F0A66A7678F580>80 D<BB7E1AFEF2FFE01BFCF3FF801CE0D8000702F0C700
0314F801004ADA000F13FE6E4903016D7E6E716C7F091F13F009077F757F09007F767E8A
767F767F8A888A767FA38A88A28AA966A26466A2666466525B66525B5290C9FC525A515B
515B5113E0091F5B097F90CAFC973801FFFC081F13F00703B512C093B848CBFC1BF01BC0
1BF004C0C7000713FE07006D7E081F7F080713F0747F080013FE757E757F89757F878975
7FA2757FA3757FA789A78AA87814F8A387A37813018821F04A6D717F91B56C1B03010702
FE7116E0B900F06F6D13077616C0766D130F766DEB1F80766C6CEB3F0077EBC0FED0000F
EBFFFC0B035CE3007F13E00C0313807D7A78F58A>82 D<92260FFFC0EC01C092B500FE14
030207DAFFC01307021F15F0027F03FC130F91B76C131F0103903AFC007FFF804901E001
07EBC03F4990C8EBE07FD91FFCED1FF8494892380FFCFF49480303B5FCD9FFC08148717E
4849824890CA7E4983000F845B001F844983123F85A24848187FA21A3FA212FF1A1FA36D
180FA47F1A077FA26C7E806E94C7FC806C7F8014FE6C6D7E15E06C14FE6CECFFE016FE6C
EDFFE06C16FF18F06C17FE6DEEFFC06D17F06D17FC6D830103717E6D846D84023F83020F
83020183DA003F82030382ED003F04011680DC001F15C01701DD001F14E01807060114F0
727E7313F8190FA27313FC8585A27313FE127800F8197FA21A3FA41A1F7EA46C1AFCA37E
1A3F6D19F8A27FF27FF07F6D19E01AFF6D19C06D5F6D4D13806D190002C04C5A6E160F02
F84C5AD9C7FE4C5A902683FF80EDFFF0018101F002035B010001FE020F13804890263FFF
F8017F90C7FC020F90B65A48010316F848010016E0031F15804802034AC8FC48DA000F13
E04F7E74F969>I<001FC012C0A692C86C01F8C712074801F06F49DA007F13E002806F49
150F49C91803491C0001F01D7F491D3F1F1F5B491D0FA290CA1907A3481FF0007E1E03A4
007C1E01A848F600F8A6CB1A00B3B3B3AE4E7FA295B512FC050FECFFC0033FBA12F0A675
7578F487>I<B900F092B812C0A6D800074ACBEDC000010002F0061F49C7FC6E49060713
F86E49060113E0775B785AA278C8FCB3B3B3B166A26E1B7E82A21EFE806670180180661D
036E7F535A6E7F535A806F6C4E5A70183F6F4F5A6F6D95C9FC6F6D5F525A6F6D4C5A6F6D
4C5A6F6DEE1FF09226007FFE4C5A706CEEFFC07001C002035B040701F0020F90CAFC7001
FEEC7FFC0400903AFFC007FFF87190B612E0051F168005074BCBFC050015F8061F14C006
0001FCCCFC7A7A78F58C>I<EF0F804D7EA24D7EA34D7EA34D7EA24C7FA34C7FA24C7F17
DFA2040F80178FA2DC1F0F7F83043F80EE3E03A2047E80EE7C0104FC804C7EA20301814C
137FA24B4880183F0307814C7FA2030F824C7F031F8293C77EA24B82033E80037E82157C
8403FC824B80A20201834B157F0203834B153FA24AB9FCA24A84A3DA1F80C8000F7F92C9
7EA24A84023E82027E84027C82A202FC844A820101854A177F1303870107183FA2010F85
A2011F727F496C5F01FF86486D4D7F000F01FF4CB512FCB600E0033FECFFF8A55D5B7ADA
6A>97 D<B912FEF0FFF019FE737E1AE0C602C0C7000F13F8011F4902017F92C96C7E6D71
7E070F13C08587737F737FA2737FA3747EA8505AA34F5B63614F5B4F5B4F5B4F90C7FC4F
5A953801FFF806075B063F13C092B748C8FC19F019FCF1FF8092C8000713E0060013F8F1
3FFE96380FFF80737F737F737F737F87747EA2747EA21C8086A21CC0A81C80A262A25013
00A2505A63614F5B4F5B071F5B494D5B6F92B55A90B56C020749C7FCBB5A1AF01A804FC8
FC19C0525878D764>I<DDFFFC15E0041FD9FFC0130193B600F01303030703FC1307031F
15FF037FD9F003EBC00F4AB5C7383FE01F4A01F891380FF03F020F01C0EC03FC4A90C9EA
FE7FDA7FFEEE7FFFDAFFF8824949824949824949824949824990CA7E494883495A1B7F49
5A4849183FA24849181F5A1B0F485BA24A18075AA25A91CC1203A25AA398C7FC5B12FFAE
127F7FA3F303E07EA2807EA26C1A07801CC06C7F1B0F6C1B806C7F1B1F6C6D19006D6C60
1B3E6D6C187E6D6C606D7F6D6D4C5A6D6D4C5A6D6D4C5A6D6D4C5ADA7FFEEE3F8091261F
FF804BC7FC6E6DEC01FE020301F8EC07FC6E01FFEC3FF86E6C9039F001FFE0031F90B612
80030793C8FC030015F8041F14C0040001FCC9FC535C77D966>I<BAFC19F019FE737E1A
F0C602E0C7001F7F011F49020113FE4B9138003FFF6D050F13C007037F07007F747E747E
747E747E747F747FA2747F747FA2757EA2881B3F88A2757EA21D80A287A21DC0A51DE0AE
1DC0A41D80A263A21D00A2515AA2641B7F641BFF646264505B505B625090C7FC505A505A
505A070313E04F5B49053F5B6FDBFFFEC8FC90B56C020F5BBB12F01AC04FC9FC19F096CA
FC5B5879D76C>I<BC12F0A5C602E0C86C7F011F4915074B15006D183F1A1F1A0F1A071A
03A21A01871A00A41B7CA5061F80A598C7FCA260A360A2601703171F92B7FCA592388000
1F1703170084A284A384F303E0A3F307C0A395C8FCA31B0F1C80A31B1FA31B3F1C0063A2
6362A262F20FFE1A1F49187F6FED03FF90B56C153FBCFCA263A3535879D760>I<BC12C0
A5C602E0C7000114E0011F49EC000F4B15036D17001A7F1A3F1A1F1A0FA21A071BF01A03
A41A01A5F200F8183EA41B00A3187EA318FEA217011707173F92B6FCA5923880003F1707
17011700A2187EA3183EA795C9FCB3497F8190B512FCB8FCA54D5879D75C>I<DDFFFC15
E0041FD9FFC0130193B600F01303030703FC1307031F15FF037FD9F003EBC00F4AB5C738
3FE01F4A01F891380FF03F020F01C0EC03FC4A90C9EAFE7FDA7FFEEE7FFFDAFFF8824949
824949824949824949824990CA7E494883495A1B7F495A4849183FA24849181F5A1B0F48
5BA24A18075AA25A91CC1203A25AA398C8FC5B12FFAE127F6D0407B712F0A47E95C76CEB
FC006E050F13F06C735BA26C6D83A36C7FA26C7F7E807E6D7EA26D7E6D7E6D7F6D6D5E6D
7F6D7F6D01FC5E6E6C5E91261FFF805D6E01E0EDFF3F020301F8913801FE1F6E01FF9138
0FFC0F6E6C01F89038FFF807031F90B6EAE0030307EE800103004BC7FC041F02F091C7FC
040049CAFC5C5C77D96E>I<B700F80103B712E0A5C602F8C80003ECE000011F01C0DB00
7F90C7FCA26D49705AB3AE92B9FCA50380C9123FB3B1496D4C7EA290B500F80303B512E0
B700F80103B712E0A55B5879D76A>I<B712FEA5C66CEBFC00011F13F06D5B6D5BB3B3B3
B2497F497F017F13FCB712FEA527587AD734>I<B700F8037FB512F0A5C602F8C96C1400
011F01C07013F81CE06D49188051C7FC1BF8505A63F27F8050C8FC4F5A4F5A4F5A4F5AF1
1FC04F5A07FFC9FC4E5A4E5A4E5A4E5A4E5AF03F804ECAFCEF01FE4D5A4D5A4D5A4D5A4D
5A4D7E17FF04037F4C7F4C7F5E4C7F4C7FEEFE3FDB81FC80922687F81F7F92268FF00F7F
92389FE007DBBFC0809226FF80037F4C6C7F15FC4B6D7F4B6E7E4B6E7F5D4B6E7F727F72
7FA2727F727F8486737E737F8587737F737FA2737F737F737FA2747E88747F8888496D84
8890B500F893B61280B700F8020715FCA55E5879D76D>107 D<B8FCA5C602FCCBFC011F
13E05D6D5BB3B3AAF20F80A51A1F1B00A562A462A21AFEA21901A219031907190F191F19
7F49EE01FF6F140790B56C027F5BBBFCA5495879D758>I<B66C0603B6FC6F606F60A3C6
6E4E1400011F1CF8DABFF8183E010F64A2DA9FFC60A2DA8FFE60A3DA87FF4D5AA202836D
4C5AA302816D4C5AA202806D4C5AA36F6C4C5AA26F6C163EA36F6C5EA26F6C5EA36F6C4B
5AA26F6D4A5AA36F6D4A5AA26F6D4A5AA3706C4AC7FCA2706C143EA3706C5CA2706C5CA3
706C495AA2706D485AA2706D485AA3706D485AA2716C48C8FCA394383FF83EA2716C5AA3
716C5AA2716C5AA2497E715B497E715B496C4F7F3801FFFC000FD9FF806D49020F13FFB6
00F8050FB7FC72C7FCA3183E705878D781>I<B66C0303B612E08181A281D8003F6DDB00
3FEBFE00010F060713F06F040113C06F705B8102BF72C7FC82029F6D163E028F7FA20287
7F02837F02817FA202807F6F7E6F7FA26F7F6F7F81836F7F6F7F8183707E707F8284707F
707FA2707F707F707FA2717E717F717FA2717F717F8385717F717F187F857213807213C0
A27213E07213F07213F8A27213FC7213FEF17FFFA27313BE7313FE85A2858585A2851A7F
1A3F497E1A1F496C170FA2496C17072601FFFC1703000FD9FF801601B612F81A001B7E1B
3E1B1C5B5879D76A>I<933803FFF0043F13FF0303B612F0030F15FC033F9038003FFFDB
FFF0010313C0020301C0010013F0020F90C8EA3FFCDA1FFCED0FFE4A486F7E4A486F7F49
48486F13E049496F7F4949707E4990CA6C7E4948717E4A170F013F854948717F4948717F
A24849717F4887A24849717FA24849727EA24887A291CC123F4887A4481C804985A400FF
1CC0AD007F1C806D61A46C1C00A26E606C63A36C6D4E5AA26C6D4D5BA26C636E5F6C636E
5F6C636D6C4D5B6D6C4D90C7FCA26D6C4D5A6D6D4C5A6D6D4C5A6D6D4B5B6D6D4B5B6D6D
4B5BDA7FFE031F5BDA1FFF4B48C8FC6E01C0ECFFFC020301F8010713F0020001FF013F13
C06F90B65A030F03FCC9FC030315F0DB003F91CAFC040313F05A5C77D96D>I<B912FCF0
FFC019F819FF1AC0C602E0C7003F7F011F49020313F84B02007F6DEF3FFE737E73138073
13C07313E01BF0851BF8A27313FCA31BFEA91BFCA34F13F8A21BF04F13E0A24F13C04F13
804F13004F5AF1FFFC060313F0063F5B92B812804FC7FC19F096C8FC0380CBFCB3AE497F
A290B512F8B712F8A54F5879D760>I<B97E18FEF0FFC019F819FEC69126E000016D7E01
1F49D9000F13E04B02037F6D040013FCF13FFE737E737F87737F8587A28785A287A763A2
6163A24F5B634F5B98C8FC4F5AF17FFC4F5A060313E0061F13804DB5C9FC92B712F819E0
96CAFC19E0922680000313F89438007FFCF01FFF727F727F727F727F8486737EA3737EA5
86A587A51D1C75133EA38575137EA2496D6F157C7513FC90B500F881B700F86E9038F801
F8739038FC03F09639007FFE0F74B512E0080F1480CD000114009738001FFC5F5A79D768
>114 D<912607FF80EB0380027F01F8130749B6130F010715C0011FEDF01F90263FFC00
EBF83FD97FE090380FFC7FD9FF80903803FEFF4848C8B5FC4848153F4848814848814848
818348488183127F49167FA2183F12FFA2181FA27FA26D160FA27FA26C6C93C7FC7F13FF
6C13C014F014FF6C14F06C14FF16F86CEDFF806C16F06C16FC6C826D6F7E6D826D820107
82010182D9003F81020781DA003F801503DB003F14801601706C13C0171F050713E08383
A27113F0187F127800F8173FA3181FA27EA319E07EA26CEF3FC0A27FF07F807F6DEEFF00
6D4B5A01FC15036D4B5A6D6C4A5A02E04A5AD91FFCEC7FE03CFE0FFFE003FFC0D8FC0390
B6C7FC48C65D023F14F848010714E0489026003FFEC8FC3C5C77D94F>I<003FBC12FEA5
9126C0000F9038F8000149C76C49EB003F01F86E49140FD87FE0F103FF4985498590C884
A3007E87A3007C87A600FC1C80481B0FA6C995C7FCB3B3AC4C7FA24C7F047F13FF0207B8
12F0A559577AD666>I<B700F80203B612E0A5C602F8C9003FEBFE00011F01C0040713F0
080113C06D49705BA275C7FCA21B3EB3B3AF1B7EA26D6D177CA21BFC7F6F4C5AA26D616F
16036D18076E6C5F505A6E6C161F6E6C4C5A6E6C4CC8FC6E6D15FE6E6D4A5A6E6DEC07F8
6E01F8EC1FF0DB3FFEECFFE092271FFFE00F1380030790B6C9FC030115FC6F6C14F0040F
14809326007FF8CAFC5B5A79D76A>I<B700E00303B61280A5000102FCCA6CEBF8006C6C
01F0051F13C0011F49715B4B96C7FC6DF107FCA26D6D60647F6F607F6F601B0F6D626F17
1F027F96C8FC6F5F023F183E811B7E6E187C7016FC6E607015016E60A27015036E607015
076E60821A0F6E6070151F037F94C9FC705D033F163E821A7E6F167C7114FC6F5E831901
6F5E7113036F5E7113076F5E83190F6F5E71131F047F92CAFC8361043F143E71137E7014
7CF080FC705C18C018C1705C18E3705C18F318F7705C18FF705CA27190CBFCA3715AA271
5AA3715AA2715AA2715A615A7CD76A>I<B700C0011FB600F8020FB512FEA5000302F0C8
003F91C8000114F0C66C01C0030F01FC6F6C13804B6F49041F13006D71495F6D785A7361
75705A6D836F657F746C4C5A816D4E6C5FA26F1C1F6D4D6D94C7FCA26F646D4D6E153E1A
EF6F1C7E027F04076E157C1AC76E6C64070F806F048316016E65DF1F017F701A036E043F
60DF3E007F701A076E047E6E5D077C137F701A0F6E04FC6E5D4F133F701A1F6E03016F92
C8FC4F7F70626E030370133E4F7F6F6C62060782704A6D15FC033F634E486D7F7019016F
021F6096C76C13F0058018036F4A04F85B063E8005C018076F027E04FC5B067C157F05E0
180F6F02FC04FE5B4E153F05F0181F6F01F105FF90C9FC4E816F01F9183E05FB18BEDDFF
E06F13FE70614E81A270614E81A2706195C97EA270614D82A20407614D177FA20403614D
173F040196CAFC7048171E875A7CD790>I<003FB600F8021FB61280A5D8003F02E00207
ECF000010F02806E1480010391C86C49C7FC6D7113F86D19E0636E6D5E6E95C8FC6E6D4A
5A6E5F704A5A6E6D5D6E6D4A5A6E160F705D6E6D4A5A6F6C4AC9FC616F6D137E6F6D5B6F
4A5AEFE0036F01F05B6F6D485A4E5A6F13FC6F6D485A706C48CAFC607013FE705B705BA2
705B707FA2707F707F717EA294B57E855E4C80DC07F77F05E37FEE0FC3DC1F817FDC3F80
7F4D6C7E167E4C6D7F727F4B487F4B488103076E7F4C6D7F4B5A4B486D7F033F6E7F93C8
127F037E824B6F7F0201707F4B814A48834A486F7F020F707F4A5A023F707F737FDAFF80
834984496D844986011F8690B56C93B512F800076E030314FEB600FC030FECFFFEA55F58
7BD76A>I<B700F093B612E0A5C692CA003FEBFE00011F01FC050F13F06D4919C06D98C7
FC6D6D715A1CF86D6D4D5A6D626E7E515A6E6D5F6E6D4CC8FC1B7E6E7F6E6D5E505A6E7F
6E6D4B5A505A6E7F6F6C4B5A505A6F7F6F6D4AC9FC1A7E6F7F6F6D5C4F5A6F7F6F6D495A
4F5A6F7F706C495A4F5A701380706D48CAFCF0E07E7014FE706D5AF0F9F870EBFBF07013
FF61705C83617190CBFC83B3AA5F854CB512E04BB712F0A563587DD76A>I
E /Fd 15 118 df<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E00
7FB6FCA3204278C131>49 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE4848
6C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F
7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A
5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B
485A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<DB0FFE
146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03
C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A49160712034848
1603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F7F
A2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E6D
6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203
B512F0020014C0DB0FFEC8FC3B487BC546>67 D<B612F0A3C6EBF0006D5A6D5AB3B3B3A4
497E497EB612F0A31C447DC323>73 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE
1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C
1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037F
EB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7
FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77
D<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0FC049486E7E49
486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA24848707EA200
0F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C1300A4003F606D
1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A000060017F4CC7FC6E
5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013FC91
3907F007F00201B512C09126001FFCC9FC41487BC54C>79 D<B712FCEEFFC017F8000190
39C0000FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218
FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F0
17800280C9FCB3AA3801FFE0B612C0A338447CC342>I<EC7F80903803FFF090380FC07C
90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1F
C0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14
C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7D
AC2B>99 D<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E
1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA2
6C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0
F8903803FFE09026007F0013002F467DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0
C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>105
D<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FD
C07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>110
D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D
7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600
A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC9038
1FC0FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F
0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA320
2C7DAB26>114 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2
C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E09038
01FFC09038007F001E3E7EBC26>116 D<D801FC147F00FFEC3FFFA30007140100038000
0181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC07890
3803FFF09026007F8013002F2D7DAB36>I E /Fe 12 118 df<EA07E0EA1FF8EA3FFCEA
7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8EA07E01010638F4A>46 D<4BB47E031F13F092B5
12FE020380020F15C04A81027F8191B77E5B4902007F4901F0EB3FFE4901C0130F49496D
7E4948C77E4A6E1380D97FF0804948D907F013C04A90383FFE7F484990B6FC48494815E0
150748485B495B000F18F0495B001F91387FFC1F49ECF0074B487E484848497E4C7E93C7
EA7FF848484848143FA24A48141F1380A24B140F12FF140F13004B1407AA6F140F138002
0716F0127F6F141FA213C06E6CEC3FE0A26C6C6C6CEC7FC07013FF705A6C6C6C6D481380
6F6C4813006DECFC1F000F6EB55A6D6D5C12076D6D5C6C6C6D5C030114C06C6D6C5C6C6D
D93FFEC7FC6EEB07F06D6C90C7EA0FF0D93FFC151F6EED3FF86D6C6C14FF6D6D13036D01
F0010F13F06D01FF137F6D91B612E06D17806E1600021F5D6E15F8020315E00200158003
1F01FCC7FC030113C03D5A7AD84A>64 D<92387FFFC00203B512FC021F14FF027F15C049
B712E013074916F04916F85B49EBE00090B5C7127F4813FC14F0485B4849EC3FF04AEC1F
E04890C8EA0FC0484892C7FC5BA2485AA2485AA25BA212FFA25BA97FA2127FA27FA26C7E
A27F001FEE03FC7F6C6CED07FE806C6D140F6C13F06EEC1FFC6C01FE147F6C6D6CEBFFF8
6DD9F80713F06D90B6FC6D16E06D16C06D16800101EDFE006D5D021F14F0020714809126
007FF8C7FC374176BF4A>99 D<F00FF8912601FFC0EB7FFE020FD9F803B51280023FEBFE
0F91B6009F14C0010392B612E05B5B5B4916F84901809138C07FC09126FE003F1300D9FF
F8010F9038803F804A6DEC040048496D6DC7FC4A7F48496D7FA291C8127F4883A249153F
A66D157FA26C5F6E14FFA26C6D495B6E5B6C6D495B6E5BD97FFE013F90C8FC6E6CB5FC92
B55A90B75A5F5F485E1780D9FE3F49C9FC020F13F8020113C091CCFCA47FA26C7F14E46D
B612E017FF6D16F04916FC90B9FC000318C08548844801C0C7003F7F4848C81201499238
003FFCD83FF0EE0FFE4916074848707E84498200FF1980A290CB127FA56D17FFA26D5E00
7F19006D5ED83FF8EE0FFE6D161F6CB4EE7FFC6C01C04A485A6C01F8020F5B9126FFC001
B5FC000191B712C06C606D94C7FC011F16FC6D5E010316E0D9007F92C8FC020F14F8DA00
7F90C9FC43627CBF4A>103 D<383FFFF0487F80B5FCA37EA27EEA000FB0EE1FFC93B57E
030714E0031F14F84B8092B67E14FD91B8FC85EEE01FDC00077F03FC7F4B7F4B7F4B815D
4B147FA292C8FCA25CA45CB3AC003FB690B612F848038115FCA2B700C315FEA36C038115
FCA26C030015F847587FD74A>I<383FFFC0487FB57EA57E7EEA000FB1043FB512FC4C80
93B7FCA5705C705C9326003FF8C7FC4D5A4D5A4C5B4C5B4C90C8FC4C5A4C5AEE7FF84C5A
4B5B4B5B4B5B4B90C9FC4B5AED3FF8157F4B7E14F102F37F02F77F91B67E15FD03F87F4B
6C7E4B6C7E15C04B6C7E4B6C7E4A6D7E5C4A6D7E4A6D7F707FA2717E717EA2717E717E71
7EA2717E717F003FB500FC013FEBFF80486E4914C0B790B612E0A56C4A6D14C06C4A6D14
8043587DD74A>107 D<EE1FFC263FFFF090B57E48D9F80714E0DAFC1F14F8B5498092B6
7E14FD6C90B8FC856CEDE01FD8000FDA00077F03FC7F4B7F4B7F4B815D4B147FA292C8FC
A25CA45CB3AC003FB690B612F848038115FCA2B700C315FEA36C038115FCA26C030015F8
473F7FBE4A>110 D<EDFF80020F13F8023F13FE91B67E010315E049814981013F15FE49
8190B50080809138FC001F4801F001077F48496D7F48018001007F91C8127F488349153F
48486F7E49150F003F83491507A2007F834981A3498100FF1880AA6D5DA2007F1800A26D
5DA2003F5F6D150FA26C6C4B5AA26C6C4B5A6D157F6C6D4A5A6E5B6C6D495B6C6D495B02
FC131F6CD9FF80B55A6D90B6C7FC6D5D6D5D010715F06D5D010015806E91C8FC020F13F8
02001380394178BF4A>I<EE0FFC263FFFF090B57E48D9F80714E0DAFC1F14F8B54914FE
92B7FC02FD826C90B87E856CDBE01F7FD8000FEC000703FC01017F4B6D7F03E0143F4B6E
7E4B140F8592C87E4A6F1380A34A6F13C0A284A21AE0A2197FAA19FFA21AC0A26E5DA24E
138080606F1600606F4A5A6F143F6F4A5A6F4A5A6F130303FF010F5BDCC03F5B93B65A61
02FD93C7FC02FC5D6F5C031F14F0030714C0030191C8FC9238003FF093CAFCB3A4003FB6
FC4881A2B77EA36C5DA26C92CAFC435F7FBE4A>I<913A1FFF800F800103B5EAF81F011F
9138FF3FC0017F15FF48B8FC5A5A5A5A48EBE00049C7121FD87FF880491403D8FFC080A2
5B82A37FEF7F806C7E01F892C7FC13FE383FFFC06C13FE6CEBFFF86CECFFE06C15FC6CED
FF806C6C15F0011F81010315FED9007F8002011580DA000F14C0DB003F13E01607040113
F0D83F809138007FF8007F163F486CED1FFC170F7F1707A27FA26D150FA27F6DED1FF86D
157F02C0ECFFF06E130302FC013F13E091B712C0A2188001BF1600019F15FC010F15F001
0315C0267E007F49C7FC007C010713E0364176BF4A>115 D<EC0FC04A7E4A7EAF003FB8
12FC4883BAFCA56C5F6C5FC7D83FF0C9FCB3ABF00FC0F01FE0F03FF0A76F147FA2F0FFE0
6E6C5B6F4913C06F5B6ED9E03F138093B61200806E5D6E15F86E5D6F5C6F1480030F01FC
C7FC030013C03C507DCE4A>I<263FFFF049B57E486D49806E82B55CA36C81A26C81D800
0F91C7127FB3B118FFA35F5F6E5C5F6E5C6D6D137FDBF003B612F86D90B812FCA26D18FE
7F6E4A7E6E02FC14FC6EECE03F0207DA801F13F89126007FF8C9FC473F7FBD4A>I
E /Ff 56 123 df<DB1FFEED7FF892B500E00103B512800203160F4A163F021F5E4A4BB6
FC4A5D91B65B5BDBF00349EBC00F499028C000201FFEC7FC4990C8484814004A5E010F4C
5A4A5EA249484B5AA3013F5DB3A2B700F091B57EA926003FF8C702C0C8FCB3B3B151657D
E44F>11 D<923AFF8003FFC0020313F0140F5C5C5C91B5FC5B5B158049EB00104A130001
0F92C8FC5CA2495AA4133FB3A2B739F001FFC0A926003FF8C7FCB3B3B13A657DE448>I<
D87FF8EB1FFEAC000714014848EB03FCA34914F8001F14074914F0A34848EB0FE0A390C7
13C048141FA2007E1580A200FE143F271E7DE343>34 D<ED7FC0EDFF804A13004A5A4A5A
140F4A5A5D4A5A147F4A5A5D5B4990C7FCA2495A495AA2495AA2495AA2137F5CA2495AA2
5A5CA25A91C8FCA25A5BA2120FA25BA2121FA35B123FA55B127FA85B12FFB3A7127F7FA8
123F7FA5121F7FA3120FA27FA21207A27F7EA2807EA2807EA26D7EA280133FA26D7EA26D
7EA26D7E6D7EA26D7F7F816E7E143F6E7E816E7E14076E7E6E7E6E1380ED7FC0228F76EA
34>40 D<B47E6C7E6C7E6C7E6C7E7F6C7E12036C7E806C7F137F806D7EA26D7E6D7EA26D
7EA26D7EA2817FA26D7FA281147FA281143FA281141FA281A2140FA281A3140781A58016
80A88016C0B3A716805CA816005CA55D140FA35DA2141FA25DA2143F5DA2147F5DA214FF
5DA2495BA25B92C7FCA2495AA2495AA2495A495AA2495A5C13FF485B91C8FC485A120748
5A5B485A485A485A485A228F79EA34>I<EA7FF8AC1207EA0FF0A313E0121F13C0A3EA3F
80A313005AA2127EA212FE0D1E758B25>44 D<B712F0A924097FA32D>I<EAFFF0AC0C0C
748B25>I<157015F014011407140F143F14FF1307137FB6FCA6147F13F81380C7FCB3B3
B3AFB812F8A92D6074DF43>49 D<0003B812E0A90280C9FCB3A7ED7FE0913883FFFC028F
13FF02BF8091B612E0838383839238C07FFFDB001F138002FC13074A6D13C002E06D13E0
A24A6D13F05CEF7FF891C8FCCA123F18FCA4171F18FEACEF3FFCA31208001CEE7FF8A212
3E003FEEFFF0486C5C6D16E0486C5C6C6C4A13C001FC4A13806C6C4A1300261FFFC0137F
6C9039F803FFFE6C90B65A6C5E6C5E6C6C15C06D5D010F4AC7FC010314F8D9007F13E0DA
07FEC8FC37607CDD43>53 D<ED07FF033F13F092B512FC020314FF140F5C147F91B7FC5B
49EBFC004901E0130F4949130392C9FC495A495A495A5C495A5C5A485BA24890CAFCA25B
120F5B121FA25B123FED0FF892B5FCD9F00380007F010F14E0023F804A8001F1B6FC01F3
814981D8FFEF01007FD9FFF8133F4A010F138002C07F4A6D13C091C7FC7013E049804916
F0177F5BEF3FF8A25BA3EF1FFCA6127FA7123FA36D16F8001F163FA36D16F0000F167FA2
6DEDFFE012076D4A13C07E6E4913806C6D5B6E4913006C6D495A6D6C133F9139FF01FFFC
6D90B55A6D5D6D5D6D5D6D5D01004AC7FC6E5B021F13F0020190C8FC36627ADF43>I<B9
12FCA9CA1207EF0FF8EF1FF0173FEF7FE018C017FF4C138018005E4C5A4C5AA24C5AA24C
5A167F5F16FF5F5D4B5BA24B90C7FCA24B5AA24B5AA24B5AA34B5AA24B5AA25C5EA25C5E
A25C93C8FCA25C5DA2141FA25D143FA35D147FA45D14FFA55D5BA8495BAC365F7ADD43>
I<EC03FF021F13E0027F13F849B512FE4980010F81498149814981DAFE017F903AFFF800
7FFC4801E0131F48496D7E4849130791C77F484880188048488018C0484880A24916E000
7F167FA218F05B00FF163FA318F8A718FCA66C7EA3177FA26C6C15FFA27F001F5D6D5C6C
7E5E6C6D5B6E133F6C01F05B9139FC03FFDF6C90B6EA9FF86C163F6D14FE16F86D14F06D
14C00107020013F06D13FC9026007FC0137F91C8FC18E0A217FF18C0A25E18805E18005E
5F160F5F161F4C5A6D4A5A486C14FF6D495B486C495B01FC010F5B3907FF807F91B6C7FC
485D6C15F86C5D6C5D6C6C14806D91C8FC010713F8010013C036627ADF43>57
D<EAFFF0ACC7FCB3B3A2EAFFF0AC0C3E74BD25>I<EE3FFEA24C7EA393B57EA34B80A34B
487FA2177F03078016FCA2030F6D7EA216F8031F80171FDB3FF07FA2170F037F8016E083
03FF8116C0A24A6E7F1680A24A6E7F1600A24A6E7F5DA2020F6F7E5DA2021F6F7E5DA202
3F6F7E5DA2027F6F7EA24A488284A2494982845D49848492C8FC4984845C49B97EA34984
A34984A202F0C9121F017F84855C01FF8585484984A285484984A2854890CA80A2854848
851A7FA24848851A3FA24848851A1FA2484885865B00FF1B808651647CE35A>65
D<B712FEEEFFF017FE717E18F08418FE8401F0C7001F80040114E0DC003F7F050F7F1703
05007F727E183F727E84721380A2841AC084A6601A80A2601A00604E5A183F4E5A4E5A4D
5B05075B051F5B057F5B0407B5C7FC90B812FC6018E095C8FC17F8EFFF8018F018FC18FF
9026F0000181DB000114E0DC001F7F050713FC05017F716C7E84060F13807213C07213E0
847213F0A2F17FF8A2193F1AFCA2191FA5193FA21AF8197FA219FF1AF0604E13E0604E13
C04E1380187F4DB5120005075B051F5B0403B55A90B912E06196C7FC6018F818C04DC8FC
17E0466474E35A>I<933807FFF0047FEBFF800303B612F8031F15FF4B16C092B812F014
035C4A17E0023F9038FC003F4A01E0130391B5C8127F4949151F4901F815074949ED03C0
4901C015004B16404990CBFC495A495AA2495A5C5A485B5CA2485BA24890CCFCA25A5BA2
123F5BA3485AA6485AB06C7EA66C7EA37F121FA27F7EA26C7FA26C7FA2806C7F7E806D7E
A26D7E6D6C17106D6D16306F16F06D01F015016D6D15036D01FEED0FF86D6D153F6E01E0
EB01FF6E01FC131F020F90B7FC6E17F06E17C002001780033FEDFE006F15F8030315E0DB
007F91C7FC040713F0456877E556>I<B812C017FCEFFF8018E018F88418FF8501F0C700
0314E0DC003F7F050F7F05037F05007F727E061F7F84727F727F727F8486197F737E8619
1F737EA2851B80A27313C0A2851BE0A3851BF0A41A7FA21BF8B01BF01AFFA41BE061A31B
C061A24F1380A24F1300A261624F5AA24F5A19FF4E5B4E5B604E5B4E5B4E90C7FCF0FFFE
05035B050F5B053F5B0403B55A90B95A96C8FC6018F818E0188005FCC9FC17C04D6474E3
61>I<BA12F0A901F0CBFCB3B090B9FCA901F0CBFCB3B3A290B912F8AA3D6474E350>I<BA
12C0A901F0CBFCB3B290B812F8A901F0CBFCB3B3AA3A6474E34D>I<D8FFF0EF3FFCB3B3
A790BAFCA901F0CA123FB3B3AC466474E35F>72 D<EAFFF0B3B3B3B3B3AA0C6474E325>
I<D8FFF094381FFF804F13004F5A4F5A4E5B4E5B4E5B4E5B4E5B97C7FC604E5A4E5A4D5B
4D5B4D5B4D5B4D5B4D90C8FC60177F4D5A4C5B4C5B4C5B4C5B4C5B4C90C9FC4C5A5F16FF
4B5B4B5B4B5B4B5B4B5B4B90CAFC4B5A4B5A5E5C4A7F4A7F5C4A7F4A805C91B67E13F103
F37F01F38101F713E190B500C07F5D4B6C7E4A804A133F4A6D7E4A814A7F4A81824A6D7F
91C7804980496E7F5B496F7E84173F717E85838583717F8583717FA2727E85183F727EA2
727F8684727F8684727FA2737E86193F737EA27313801BC04A6474E35D>75
D<EAFFF0B3B3B3B3B390B812FCA9366474E349>I<B8FC17F017FE717E18E018F8848401
F0C700076D7EDC007F7F051F7F05077F8305007F727E183F727EA2727E841A80A284A21A
C0A284A660A21A80A260A21A00604E5AA24E5A187F4E5A5F05075B051F5B057F5B0407B5
5A90B9C7FC6018F86018C095C8FC17FC17C001F0CCFCB3B3A6426474E356>80
D<B712FEEEFFF017FEEFFFC018F018FC84727E01F0C7000380DC003F7F050F7F05037F05
007F727E181F8584721380841AC084A21AE0A284A560A21AC0A260A24E1380601A0060F0
7FFE4E5A05035B5F053F5B0403B55A90B9128096C7FC6018F86018C04DC8FC17F0A201F0
C76C7E163F83707E160F83828482848284707FA2717EA2717E171F84170F84717FA2717F
A2717FA2717F187F85183F85727EA2727EA2721380A27213C0A27213E07213F0A2F17FF8
A2F13FFC466474E357>82 D<ED7FFE0207B512E0021F14FE91B77E4916E0010716F84916
FE49825B5B90B5D8C0035B4849C7123F4801F8140F4801E014034A14004849153E91C912
1C4848160C491604003F94C7FC5BA3485AA77FA2123F7FA27F6C7E806C7F806C13F814FE
6CEBFFC06C14FC6CECFFC016F86DECFF80011F15E06D15F86D15FE0101816D16C0021F81
020781DA007F80030F80030080160F04017F706C138083050F13C0837113E0A27113F083
A2187F19F8A2183FA9F07FF0A21220003017FF003818E0007C5E007F4C13C07F01E04B13
806D5D01FE033F1300B56C4A5A02F0EB01FF9126FF801F5B6C91B65A001F5F6C5F00035F
C694C7FC013F5D010F15F8010115E0D9001F91C8FC020013F03D687AE54B>I<BD1280A9
C9D81FFECAFCB3B3B3B3B351647BE35C>I<D8FFF0EFFFE0B3B3B3B36C6C4C13C0A4003F
4D13807FA26C6C4C1300A2000F4D5A7F6C6D4B5A183F6C6D5E6E157F6C6D4B5A6C6D4A5B
6D6C02075B6DB44A5B6D01C0017F90C7FC6D9039F803FFFE6D90B65A6D5E01005E6E15C0
021F92C8FC020714FC020014E0DB0FFEC9FC436674E35C>I<D803F814FE4914FCA20007
1401A24914F8000F1403A34848EB07F0A3003F140F4914E0007F141FA348C7EA3FC001F0
14FCAC271E68E343>92 D<EC1FFE0103B512C0011F14F0017F14FC48B67E000781481680
17C017E0DAC00313F049C713F8D807F0147F01C0EC3FFC5B0006C8EA1FFE0004150FC9FC
A2EE07FFAA163F92B6FC141F91B7FC1307133F5B48B8FC48ECFC074814004813F0481380
4848C7FC485A5B5B485AA55E7F5E6C6C5C6D91B5FC01FF13036CEBC01F91B7FC7EA26C15
F76C15C76C15076C14FC6C6C13E0D91FFCC8FC30417ABF41>97 D<EAFFE0B3B3ED3FF091
3803FFFE021F7F027F14C001E1B67E01E78101EF8190B77E83DAF8077FECC00091C7003F
1380498001F8020713C0A2496E13E049807013F0A2177F18F8A2173FA318FC171FACEF3F
F8A4177F18F017FFA24C13E07F4C13C06D5C6D4A13805E01FF027F13006E48485AECF00F
91B65A5F01EF5D01E75D01E3158001E092C7FC023F13FC020F13F0C81380366576E345>
I<EDFFF80207EBFF80023F14F091B612FC4915FF010716C04916E05B5B49D9800713C0D9
FFFCC7FC4849141F4801E014074A14034849140091CAFC485A121F5BA2485AA3485AA448
5AAC6C7EA46C7EA27F121F7F000F17406D16C06C6D14016E14076C6D141F6C01F8EC7FE0
6C6DEB01FF90397FFF801F6D90B6FC7F6D16C06D16006D5D010015F8023F14E0020F91C7
FC020013F033417CBF3C>I<EF1FFCB3B3EC0FF891387FFF8049B512F0010714FC4914FF
49159F4915FF5B90B8FC48ECC03F489038FE000702F813014801E07F4849147F4A143F48
90C8121F5BA2485AA25B127F5BA312FF5BAC7F127FA37F123FA27F121F6D153F6D157F6C
7F6E14FF6C6D5B6C6D130702FC5B6C9038FF807F6C91B6FC6D15DF6D159F6D151F6D14FC
6D14F8010114E06D6C1300DA1FF890C7FC36657CE345>I<4AB4FC021F13E0027F13FC49
B57E01076E7E498149814981498190B51201489039F8007FFC4849EB1FFE02C0130F4849
6D7E91C77E5A496E1380485A82484816C0177F5B127FA24916E090B8FCB9FCA701C0CAFC
A37FA3127FA27FA2123F7FA26C7E7F120F6D16406C6DEC01C06E14036C6D140F6C01F814
3F6C01FE903801FFE090397FFF801F6D90B6FC7F6D16C06D16006D5D010015F8023F14C0
020F49C7FC020013E033417CBF3C>I<ED1FFE92B512C01403140F5C5C5C91B6FC5BEDF0
07499038C000404990C8FC5C130F5C131F5CA3133FB3A2B712E0A926003FF8C8FCB3B3B1
2A657DE429>I<DA07FCEC1FE0913A3FFF8003FF91B5EAE01F010302F8B5FC4991B6FC5B
4917F05B90387FFC079026FFF00101E0C7FC489039C0007FF04A133F488291C7121F4848
6E7EA448486E7EA96C6C4A5AA46C6C4A5A6E133F6C5E6E137F6C9039F001FFE0DAFC075B
91B65A4893C8FC485D5ED807FB5C01F814E0023F13809026F007FCC9FC000F90CBFCA37F
A37F6CB4FC91B512FCEEFFE06C16FC17FF6C17C06C834883488348834883488349C71203
4848DA003F138049150F48488149817113C0485A83A56D5D007F18806D5DA2D83FFC030F
13006C6C4B5A6D6C147F6C01E049485A6C01FE011F5B6C90B75A6C5F6C6C16806D93C7FC
010F15FC010115E0D9003F91C8FC020313F03C5D7CBE43>I<EAFFE0B3B3ED7FE0913807
FFFC021F13FF027F14C091B612E001E315F013E701EF15F890B712FCECF807ECC0004AEB
7FFE91C7121F5B49EC0FFFA25B82A25BA35BB3B3A5306476E345>I<EAFFF0ACC7FCB3A3
EA7FF0B3B3B3A80C5F77DE20>I<913803FFC0AC91C8FCB3A3913801FFC0B3B3B3B3A44A
1380122000305B007C491300007E133F397FE1FFFE90B5FCB65A5DA26C5C001F14C00007
5CC649C7FCEB0FF8227C89DE24>I<EAFFE0B3B3A293380FFFC04C13804C13004C5A4C5A
4B5B4B5B4B5B4B5B4B5B4B90C7FC4B5A5E4B5A4A5B4A5B4A5B5C4A5B4A90C8FC4A5A4A5A
01E15B01E35B13E701EF7F90B5FC8181A28102F77F14E702E37F02C17F148102007F496D
7E5B496D7E496D7E5B6F7E6F7FA26F7F6F7FA26F7F707EA2707E707EA2707E701380A270
13C07013E0A27013F0EF7FF8356476E342>I<EAFFE0B3B3B3B3B3AA0B6476E320>I<DB7F
E04AB47E28FFE003FFFE020F13F8021F6D6C017F13FE027F6E48B6FC91B66C48158001E1
6F4815C001E7DBF81F15E001EF6F4815F090B76C4815F8DAF803EDE00F9126E0007F9038
FF800102806D6C48C713FC91C76C49147F496E49143F70161F494C15FE495E70160FA249
5EA3495EB3B3A5573F76BE6C>I<ED7FE03AFFE007FFFC021F13FF027F14C091B612E001
E315F013E701EF15F890B712FCECF807ECC0004AEB7FFE91C7121F5B49EC0FFFA25B82A2
5BA35BB3B3A5303F76BE45>I<EDFFC0020F13FC023F13FF91B612C0010315F049814981
4981498149D9807F7F9027FFFC000F7F4801F001037F48496D7F4A7F48496E7E4890C86C
7E49151F48486F7EA2491507003F83A24981007F1880A3498100FF18C0AB6D5D007F1880
A46C6C4B1300A26D5D001F5F6D151F000F5F6D153F6C6D4A5A6E14FF6C6D495B6C6D495B
02FC130F6C9026FF807F5B6D90B65A6D93C7FC6D5D010715F86D5D010015C0023F91C8FC
020F13FC020013C03A417CBF43>I<ED3FF03AFFE003FFFE021F7F027F14C001E1B67E01
E78101EF8190B77E83DAF8077FECC00191C76C138049141F01F86E13C082496E13E05B70
13F082A2EF7FF8A3173FA218FCA2171FAA173F18F8A3177FA2EFFFF0A25E18E06D5C4C13
C06D5C6D4A13805E01FF91B51200DA80035BECF01F91B65A5F01EF5D01E75D01E3158001
E092C7FC023F13FC020F13F00200138092C9FCB3A9365B76BE45>I<DA07FCEB1FFC9138
3FFFC091B512F0010314FC4914FE011F14FF49159F4915DF90B8FCEDE03F48EC000F4801
FC13034801F07F4A7F485B4A147F4890C8123F5B123F49151FA2485AA25BA312FF5BAA7F
A2127FA27FA2123F7FA26C7E6D153F177F6C7F6E14FF6C6D5B02F813076C01FE5B6C9038
FF807F6C91B6FC17DF6D159F6D151F010F14FC6D14F86D14E001001400EC1FF891C8FCB3
A9365B7CBE45>I<ED1F80D8FFC013FF14075C143F5C01C1B5FC13C313C713CFEDF00001
DF1380D9FFFCC7FC5C14E05C5C91C8FC5BA25BA25BA25BA35BB3B2213F76BE2E>I<ECFF
F8010FEBFF80017F14F090B612FC000315FF4816805A5A170048EB000F01F813014848EB
003F49140F1603484891C7FCA67FA26C7E13FC13FF6C13E014FF6C14F06C14FE6C6E7E6C
15E06C816C15FC013F80010F801303D9003F1480020114C0EC001F030713E0150181EE7F
F0A2163FA512200070157F007C16E0007E15FFD87FC05B01F04913C001FF131FB8128017
00A26C5D001F15F800075DC615C0011F91C7FC010013F02C417CBF34>I<EB1FFCB1B8FC
A926001FFCC8FCB3B3A380178016016D6CEB07C0161FEDC0FF92B5FC6D15E0A27F17806D
ECFE006D14F06E1380DA1FF8C7FC2B507ECE31>I<D8FFE0EC07FFB3B3A95EA25E5EA26D
5C4BB5FC6D13076CB4133F91B7FCA26C15E716C76C15076C14FC6C14F06C148026007FF0
C8FC303F76BD45>I<D8FFE0923803FF806D5D007F18007F5F003F5F7F001F4C5AA27F00
0F4C5AA26D157F6C5FA26E14FF6C5F805E6C5F806C4B5BA280017F4A90C7FCA280013F4A
5AA280011F4A5AA26D6C5C163FA26D6C5C167FA26D5DED80FFA26D5D8115C16D5DA2DA7F
E190C8FC15E3A2023F5B15F315F7021F5BA215FF6E5BA36E5BA26E5BA2393E7EBD3E>I<
D8FFE0912603FF80EC0FFE6D5C007FF21FFC84A26D5C003F71EC3FF8A26DEC1FDF001FF2
7FF08417CF6C6C023FEEFFE084A26DEC7F8F6C4F13C0EF87FCA26C6D01FF1780DD07FE5B
A26E4813036C4F13008416FE6CD9E0036D5D1A0F1980017F02FC5EDAF0077FF1C01FA201
3F4A5EDAF80F147FF1E03F011F4A5EA2DAFC1F143F1A7F010F4A02F05BA2181F902607FE
3F4C5A4C80180F0103615E037F15F902FF15076D05FD90C7FC93C7FC18036D6003FE15FF
A284027F5F5D84023F5F5D573E7EBD5C>I<D87FFC923803FFC06C6C5D001F4C13806C6C
17006E4A5A6C6D4A5A6C167F6C6D5D6C6D4A5A6E495B6D6C5B013F5E6D6C495B6D6C4990
C7FC6D6D485AA26D6D485A6D6D485A6D6D485A6E6C5B15F96EB55A6E5C6E91C8FC6E5BA2
6E5B6E5B6E5B157FA215FF4A7F4A7F824A7F5CDA1FFD7FDA3FF97F03F07F027F6D7E9138
FFE03F4901C07F4B6C7E496E7E4901007F49487F011F6E7F4A6D7F494881017F6E7F4948
6E7E485B4A6E7E48707E48496E7E4890C814808348486F13C0484817E0007F7013F04848
6F13F83D3E80BD3E>I<D8FFF0923803FF805F007F18007F003F4C5A7FA2001F4C5A7F00
0F163F6D5EA26C167F6E5D7E6E4A5AA27E6E495B7EA26E495B137F80013F4A90C7FCA26E
5C011F140FA26D6C5C161FA26D6C5C163F6D5D1580167F6D5D15C07F4C5A81147F5FEC3F
E103F190C8FCA2141F5EEC0FF315FB5E1407A26EB45AA25E80A26E5BA35EA25E5CA293C9
FC5CA25D1407A24A5AA25D141FA24A5A147F00305C383F01FF90B55A5DA292CAFC6C5B5C
5C14E000031380395B7EBD3E>I<003FB81280A718005FC9EA3FFC167F4C5A5F5D4B5B4B
5B5F5D4B90C7FC5E4B5A157F4B5A5E5C4A5B4A5B5E5C4A90C8FC5D4A5A147F4A5A5D5B49
5B495B5D5B4990C9FC5C495A137F495A5C5A485B485B5C5A4890CAFC5B48B812805AB9FC
A7313E7CBD3B>I E /Fg 11 118 df<007FB6FCA2B612FEA520077B9C27>45
D<DD1FFC14030403B500C01307041F02F0130F93B600FC131F03039026F801FE133E030F
903980003F80DB3FFCC7380FC07EDB7FE0913803E0FE4A4848EC01F14A90C912F3DA0FFC
EE7BFC4A48163F4A48161F4A5A4A48160F495B4990CAEA07F8495A49481703495A133F4A
1701494818F013FF5C5A5C5A4890CC12E0A25B120F1A01485A97C7FCA2485AA3127F5BA5
12FF5BA81A0E127F1A1E1A1CA36D183C003F19381A781A706C6C18F062000F18016D6000
0718036D4D5A00034EC7FC6D5F6C6D161E6C6D5E017F17F86D6C4B5AD91FF84B5A6D6CED
0FC06D6C4BC8FC6D6C6C147E010001F0EB03F8DA3FFFEB1FF0020F90B512C002034AC9FC
DA007F13F803071380505674D355>67 D<0107B812F019FF1AC01AF0D9000301E0C713FC
6E49EC0FFEF103FF7313804C6E13C0F27FE0F23FF0A2F21FF85C93C9FC1BFCA45C5DA41B
F8020F173F5D1BF01A7F1BE0A2021FEFFFC04B4B13801B004F5A4F5A4F5A023FEE3FF04B
EDFFE006031380DE3FFEC7FC92B712F819E04A4BC8FC03E0CBFCA514FF5DA55B5DA55B92
CCFCA55B5CA5130F5CA2497E497EB77EA293CBFCA24E527BD150>80
D<0003BB12FCA4489026E0000F90C7127F49C749140F01F8180301E04B1401484818005B
1B7C90C8177848151F001E5E1B38121CA2123C0038153F5FA2481A781B70A2167F485EA2
C91700A316FF5FA55D5FA55D94CAFCA55D5EA5150F5EA5151F5EA5153F5EA5157F5EA24B
7E020313FC017FB712E090B85AA34E5173D055>84 D<EDFFC0020713F8023F13FE91387F
80FF903A01FC003FC0D907F8EB1FE0D90FE0130F4948EB07F0494814F849C712035B4848
EC01FC485AA2485A120F5B121F5B123FA348B7FCA301C0C9FC12FF5BAA127F17E0A21601
6C6C15C016036C6CEC0780000F16006D5C6C6C141E6C6C147C6C6C14F06C6CEB03E09039
3FE01F80010FB5C7FC010313F89038007FC02E3679B434>101 D<F003F0DB07F8EB1FFC
DB7FFFEB7FFE4AB538C1F87E913A07F80FF3C0913B0FE003FF00FE91393FC001FE91267F
8000147C4AC714104A027F1300495A0103825C1307A2495AA417FF95C7FC5CA24C5AA26E
495A01075D4C5A6D6C495A6D6C495A496C495A91267F81FEC8FC9039071FFFFCD90E0713
E0D91E0190C9FC011CCBFCA2133CA5133EA2EB3F8091B512FCEEFFC06D15F817FE6D8118
C0133F01FEC700077FD803F89138007FF04848151FD80FC0150F48481507003F707E90C9
FC5A007E1601170300FE5F5AA26C1607007E4C5A60007F161F6C6C4B5A6C6C03FFC7FC6C
6CEC01FC6C6CEC07F8D803FEEC3FE03B00FFC003FF80013FB548C8FC010714E09026007F
FEC9FC3F4E7FB43B>103 D<EC03FEEB03FF5B5DA2EB001F1407A35DA5140F5DA5141F5D
A5143F5DA4EE07FE027F90381FFFC0DB807F7F923981F80FF8923987C007FC92388F0003
039E6D7EECFFBC1570A24B13005D4B13015B92C7FCA25CA2170313034A5DA4170713074A
5DA4170F130F4A5DA4171F131F4A5DA4173F133F4A5DA2017F157FD9FFF0ECFFF0007F90
26FFE07FEBFFE0B648B612C0A33B537CD241>I<EC03C0EC0FF0EC1FF8143FA2147FA4EC
3FF0EC1FE0EC0F8091C7FCB0EC7FC0EB7FFF1580A290B5FC13031300A21500A55B5CA513
035CA513075CA5130F5CA5131F5CA5133F5CA2137F497E007FEBFFC0B6FC1580A21D507C
CF21>I<91397F8007FE90B590381FFFC0DB007F7F923901F80FF8923907C007FC010390
380F00030100011E6D7E5DECFE70A24B13006E5A4B13015B92C7FCA25CA2170313034A5D
A4170713074A5DA4170F130F4A5DA4171F131F4A5DA4173F133F4A5DA2017F157FD9FFF0
ECFFF0007F9026FFE07FEBFFE0B648B612C0A33B347CB341>110
D<ED7FC0913803FFFC021F13FF91397F807F80903A01FE000FE0D903F86D7ED907E06D7E
D91FC06D7E4948130049C8127E017E157F5B0001EE3F80485A12074916C0120FA2485AA2
003F17E05BA2127FA34848ED7FC0A5EFFF80A390C913005E5FA26C6C4A5AA24C5A003F5E
4C5A6C6C141F5F6C6C4A5A6C6C4AC7FCED01FCD803FC495AC66CEB0FF090397FC07FC001
1FB5C8FC010713F8010013C0333678B43B>I<D97FC0EC7FC0B591B5FC4A1580A3000315
03C61500A291C81300A45E5A495DA416031203495DA416071207495DA4160F120F495DA3
161FA2121F494A5AA2167FA216FF5D4B5B000FEDBFE0ED0F3F6D011E13F86C6C90393C7F
FFE02703FE01F814C0C6B512E06D1380902607FC00EB8000333574B341>117
D E /Fh 15 124 df<16F04B7E1507151F153FEC01FF1407147F010FB5FCB7FCA41487EB
F007C7FCB3B3B3B3007FB91280A6395E74DD51>49 D<EA01FCEA07FF4813804813C04813
E04813F0A2B512F8A76C13F0A26C13E06C13C06C13806C1300EA01FCC8FCB3A4EA01FCEA
07FF4813804813C04813E04813F0A2B512F8A76C13F0A26C13E06C13C06C13806C1300EA
01FC154074BF2D>58 D<F00FE04E7EA24E7EA34E7EA24E7EA34D7FA24D80A24D80A34D80
A24D80A34D80A2DD7FBF7FA2181F05FF8017FE04016D7FA24D7E04038217F804076D80A2
4D7E040F8217E0041F6D80A24D7F043F825F047F6E7FA294C77E4C825E03016F7FA24C80
0303845E03076F80A24C80030F845E031F6F80A24C81033F845E037F707F93B9FCA292BA
7EA24A85A203FCC912070203865D020771805D86020F864B82021F865D87023F864B8302
7F8692CBFC874A864A840101875C496C728090381FFFC0B700E092B812FEA66F647BE37A
>65 D<B912E0A6C702E0C7FCB3B3B3B3AEB912E0A633627CE13C>73
D<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A0349864986A249
1B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3
021FBAFCA663617AE070>84 D<92380FFFF04AB67E020F15F0023F15FC91B77E01039039
FE001FFF4901F8010113804901E0010713C04901804913E0017F90C7FC49484A13F0A248
5B485B5A5C5A7113E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A2
7EA2806C18FCA26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01
E0EC7F806D6DECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580
020102FCC7FCDA000F13C03E437BC148>99 D<F17FF8050FB5FCA6EF000F8484B3A89238
0FFF804AB512F8020F14FE023FECFF8391B712E301039138807FF3499039F8000FFB011F
01E00103B5FC494913004990C87E49488148498148834A815A485BA2485BA25AA3485BA4
B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F6C6D5D6C6D5D017F93B5FC6D6C6C0103806D
6D49806D01F0D91FF7EBFFFE6D9039FE01FFE7010190B612876D6CECFE07021F14F80203
14E09127003FFE00ECC0004F657BE35A>I<EB0FE0EB3FF8497E48B5FCA24880A24880A7
6C5CA26C91C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3
B3AEB712C0A622657BE42C>105 D<902607FF80EB1FFFB691B512F0040714FC041F14FF
4C8193267FE07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC7
8015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>110
D<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E0
4901C001037F49496D7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048
496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8
A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D
495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC03
0713E048437CC151>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC038715
FF038F010114C09227BFF0003F7FC6DAFFC0010F7F6D91C76C7F6D496E7F03F86E7F4B6E
7F4B17804B6F13C0A27313E0A27313F0A21BF885A21BFCA3851BFEAE4F13FCA41BF861A2
1BF0611BE0611BC06F92B512801B006F5C6F4A5B6F4A5B03FF4A5B70495B04E0017F13C0
9226CFFC03B55A03C7B648C7FC03C115F803C015E0041F91C8FC040313E093CBFCB3A3B7
12F0A64F5D7BC05A>I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC
7FFC92390FE0FFFEC6EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB
7FFCEF3FF8EF0FE04B90C7FCA55DB3B0B712F8A638417BC042>114
D<EC07E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FE
B8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16006F5B6D6D137E6D6D
5B6DEBFF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C7DDA3F>116
D<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F60183E6D
6D147E4E7F6D6D4948806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E1500021F5C0203
14F8DA003F018002F0C7FC51427BC05A>I<BDFCA5500580A951>123
D E /Fi 26 118 df<95387FFFE0053FB512FC0403B77E041F8293B812F0030383030FDA
F00113FE033F49C7EA1FFF92B500F002077F4A14804A91C8001F7F020F01FC4B7F4A495D
4A4992B57E4C5C4A5B91B5FC5E5B93C84880A249715C5DA3735CA2745B081F90C8FC745A
F201F097CAFCAC4EB612F8BDFCA8D8000391C97E8686B3B3B3A5003FB7D8F001B81280A8
61797CF86C>12 D<EE01F0EE07F8160F163F167FED01FF150F153F4AB5FC143F010FB6FC
B8FCA54A7E14C0EBF000C8FCB3B3B3B3AE007FBA12F0A8447171F061>49
D<92380FFFE04AB67E020F15F0027F15FE49B87E4917E0010F17F8013F8349D9C01F14FF
9027FFFC0001814801E06D6C80480180021F804890C86C8048486F8048486F8001FF6F80
4801C06E8002F081486D18806E816E18C0B5821BE06E81A37214F0A56C5BA36C5B6C5B6C
5B000313C0C690C9FC90CA15E060A34E14C0A21B80601B0060626295B55A5F624D5C624D
5C4D91C7FC614D5B4D13F04D5B6194B55A4C49C8FC4C5B4C5B4C13E04C5B604C90C9FCEE
7FFC4C5A4B5B4B5B4B0180EC0FF04B90C8FC4B5A4B5A4B48ED1FE0EDFFE04A5B4A5B4A90
C9FC4A48163F4A5ADA3FF017C05D4A48167F4A5A4990CA12FFD903FC160749BAFC5B4919
805B5B90BBFC5A5A5A5A481A005A5ABCFCA462A44C7176F061>I<137F3801FFC0000713
F0487F487F487F487FA2B61280A96C1400A26C5B6C5B6C5B6C5B000113C06C6CC7FC90C8
FCB3A9137F3801FFC0000713F0487F487F487F487FA2B61280A96C1400A26C5B6C5B6C5B
6C5B000113C06C6CC7FC194D72CC36>58 D<F103F84F7E4F7EA24F7EA34F7FA24F7FA396
B57EA24E80A34E80A24E80A34E80A24E80A34E81A24E81A219BFDEFF9F80191F4D6D80A2
18FE05036D8018FC05076D80A218F8050F6D8018F0051F6D80A260053F6E8060057F6E80
A26005FF6E8095C7FC4C6F80A25F04036F805F04076F80A25F040F6F805F041F6F80A25F
043F70805F047F7080A25F04FF708094C9FC4B7180A25E030371805E4BBB7EA34B86A24B
86A3DB3FE0CA6C805E037F7280A25E03FF7280A24A90CB6C80A25D02037380A24A487280
A25D020F7380A24B84021F885D023F7480A24B85027F895D902607FFFC7380B86C031FB9
12E0A8837979F892>65 D<96267FFFE01670063FB6ED01F80503B700F01403053F04FC14
074CB96C130F040706E0131F043F72133F93BA00FC137F0303DC00076D13FF030F03C090
39003FFF814B02FCC8000713C3037F02E0030113F792B600806F6CB5FC02034ACA121F4A
02F8834A02E0834A4A1701027F4A8391B548CC7E494A85495C4C854988494A85494A8549
5C8A4991CDFC90B54886A2484A1B7FA2481E3F5D481E1F5D5A1F0FA2485CA3481E075DA2
F703F0489BC7FCA45DA2B6FCB27EA281A47EA2F703F06FF307F87EA36C80A21F0F7E6F1C
F07E6F1B1F7E20E06C6E1B3F816DF57FC06D80F7FF806D806D6E4F13006D6E616D525A82
6D6E4F5A6D6E4F5A6E6D6C4E5A021F6EF0FFE06E6E4D5B6E02F84D5B6E02FE050F90C7FC
02006E6CEE3FFE6F02F0EEFFFC031F02FE03035B6FDAFFC0021F13E0030303FF0103B55A
030093B7C8FC043F18FC040718F0040118C0DC003F94C9FC050316F8DD003F1580DE007F
01F0CAFC757A75F78C>67 D<BF12FCA48AA4C7003F0280C8123F1B01F3003F1C07767F1C
008989898989A2891F8089A289A31E7FA21FC0A21E3FA3F20FF0A3F61FE0A49BC7FCA21A
1FA31A3FA21A7FA21AFF1903190F197F94B7FCA8943880007F190F190319001A7FA21A3F
A21A1FA31A0FA997CBFCB3A9BBFCA86B757AF47A>70 D<BA12F8A8C7001F02C0C7FCB3B3
B3B3B3ACBA12F8A83D767BF548>73 D<B800C051B8128071637163A37163A27163C7003F
57C8FC71F33FBFA203EF6DF37F3FA303E76E1AFEA203E36EF101FCA203E16EF103F8A203
E06EF107F0A3706DF10FE0A2706DF11FC0A2706DF13F80A2706DF17F00A3706E18FEA270
6E4D5AA2706E4D5AA3706E4D5AA2716D4D5AA2716D4D5AA2716D4D5AA3716D4DC7FCA271
6E16FEA2716E4B5AA2716E4B5AA3716E4B5AA2726D4B5AA2726D4B5AA3726D4B5AA2726D
4BC8FCA2726E14FEA2726E495AA3726E495AA2726E495AA2736D495AA2736D495AA3736D
495AA2736D49C9FCA273EC80FEA2F481FC7314C1A273ECE3F8A273ECF7F0A274EBFFE0A3
745CA2745CA27491CAFCA2745BA3745BA2902603FFFE705BB800F897BA1280745BA2755A
A3755A755AA97679F5B8>77 D<95380FFFFC0503B612F0053F15FF0403B812F0040F17FC
047FEFFF804BBA12E003079126FE001F14F8031F02E0010114FE4B91C8003F7F92B500FC
030F14C04A02F0030380020702C0030014F84A4A707F4A91CA6C7F4A01FC050F7F4A4971
8091B5487180494A71804989494A71804C8449894991CC6C7F4949737FA24949738090B5
89A2484A7380A2484A7380A2488B4B85A2488BA3484A7380A3488BA4484A741480A7B61E
C0B16C2080A36F97B6FCA46C2000A46C6E4F5CA36C676F61A26C67A26C6E4F5CA26C676F
616C676F616D666F616D9BC7FC6D6E4E5BA26D6E95B55A6D6E4D5C6D656D6E4D5C6D6E4D
5C6E6D4D5C6E6D4D91C8FC6E6D4D5B6E02C093B55A6E6E4B5C6E02F803075C02006E4B14
C06FD9FF80027F5C031F02E049B548C9FC030702FE011F14F8030191B812E06F6C188004
1F4DCAFC040317F0DC003F93CBFC050315F0DD000F01FCCCFC7A7A75F791>79
D<BC12FCF3FFF01CFF1DE01DFC1DFF1EC08AC7003F91C8000115F8E0000F80090180756C
6D7E76801C0F76808B7680888B7680A28BA2892080A420C0AB2080A49AB61200A267A267
6467525C64670A1F5C525C5291C7FC51B55A090F14F850B65A94BA12C09BC8FC1DFC1DF0
9AC9FC1CF809FCCAFC0580CEFCB3B3A8BA12E0A872767AF584>I<92383FFFF80207B612
E0027F15FC49B87E010717E0011F83499026F0007F13FC4948C7000F7F90B502036D7E48
6E6D806F6D80727F486E6E7F8486727FA28684A26C5C72806C5C6D90C8FC6D5AEB0FF8EB
03E090CAFCA70507B6FC041FB7FC0303B8FC157F0203B9FC021FECFE0391B612800103EC
F800010F14C04991C7FC017F13FC90B512F04814C0485C4891C8FC485B5A485B5C5A5CA2
B5FC5CA360A36E5DA26C5F6E5D187E6C6D846E4A48806C6D4A4814FC6C6ED90FF0ECFFFC
6C02E090263FE07F14FE00019139FC03FFC06C91B6487E013F4B487E010F4B1307010303
F01301D9003F0280D9003F13FC020101F8CBFC57507ACE5E>97 D<93383FFFF00307B612
C0033F15F84AB712FE0207707E021F17E0027F8391B526FC001F7F010302C001037F4991
C7487F49495C495B4901F04A7F5B90B55A485CA2485C4891C8FCA248715B5C48715B725B
4A6F5B489438007FC0071FC7FC96C8FC5AA25CA3B5FCAF7E80A47E80A27E806CF11F80F2
3FC06C6E167FA26C6EEEFF80816C606C6E17006D6D4B5A6D6D15076D6D4B5A6D6D6C4A5A
6D02E0EC7FF06D02F849485A01009126FF801F5B6E91B6C7FC021F5E020716F8020116E0
6E6C1580030702FCC8FCDB003F13804A507ACE56>99 D<97380FFFE00607B6FCA8F00003
190086B3AD93383FFF800307B512F8033F14FF4AB712C0020716F0021F16FC027F9039FE
007FFE91B500F0EB0FFF01030280010190B5FC4949C87E49498149498149498149498190
B548814884484A8192CAFC5AA2485BA25A5C5AA35A5CA4B5FCAF7EA4807EA37EA2807EA2
6C7F616C6E5D6C606C80616D6D5D6D6D5D6D6D92B67E6D6D4A15FC010301FF0207EDFFFE
6D02C0EB3FFE6D6C9039FC01FFF86E90B65A020F16C002031600DA007F14FC030F14E092
26007FFEC749C7FC5F797AF76C>I<93387FFF80030FB512FC037FECFF804AB712E00207
16F8021F16FE027FD9F8077F49B5D8C000804991C7003F13E04901FC020F7F49496E7F49
498049496E7F49496E7F90B55A48727E92C914804884485B1BC048841BE0485BA27313F0
5AA25C5AA21BF885A2B5FCA391BAFCA41BF002F8CCFCA67EA3807EA47E806CF103F0F207
F86C7F1A0F6C6E17F06C191F6F17E06C6E163F6D6DEE7FC06D6D16FF6D6D4B13806D6D4B
13006D6D6CEC0FFE6D02E0EC3FFC6D02F8ECFFF86D9126FFC00F5B023F91B65A020F1780
02034CC7FC020016F8031F15E0030392C8FCDB000F13E04D507BCE58>I<EF7FFE040FB5
12C093B612F0030715FC031F814B8192B5D8F01F13800203DA803F13C04A9026FC007F13
E04A4990B5FC4A5B4A494814F04A13C091B51280A2491400A2495BA27114E05B4B6E13C0
721380721300F007FC95C8FCB3B912C0A8D8000749CAFCB3B3B3A7007FB712FCA844797A
F83B>I<F37F80922607FFFC913807FFE092B600E0011F13F8020703FC017F13FC021FDB
FF01B512FE027F16C349B800F7EBBFFF49DA803F9038FFF83F010F9026FC000714C04901
F00101EC007F49496D148049496E6D7E90B517E04B6E15FE48F1F01F4891C86C9038F80F
FCF307F098C7FC48496F7FA34885AB6C61A36C6D4B5BA36C6E4A5B6C616F5C6D606D6D91
B55A6D6D4991C8FC6D01FC01075B9226FF803F13F893B65A4917C0D93F1F93C9FC020715
FCD97E0015E0030701FCCAFC01FE90CDFCA412017FA280A280808014FE6C90B812C019FF
1AF01AFC6DF0FF801BE06D851BFC6D856D856D1A806D1AC05B011F1AE0137F48BC12F000
0701FCC9FC4801E0040314F84849EE007F4849171F91CB1207487313FC5B00FF855B86A5
6D60007F1BF86D60A26C6D4D13F06E5F6C6D4D13E06C6D4D13C06C01FC94B512806C01FF
04031400C602C0030F13FC6D01F8037F5B011FD9FFE0011FB512E0010791B8128001014E
C7FC6D6C17F8020F17C0DA007F03F8C8FC03014AC9FC58727BCE61>I<EB01FCEB07FF01
1F13C0497F497F90B57EA24880A24880A76C5CA26C5CA26D5B6D5B6D5B010790C8FCEB01
FC90CAFCB2903801FFFC007FB5FCA8C67E131F7FB3B3B3A5B81280A8297979F835>105
D<903801FFFCB6FCA8C67E131F7FB3B3B3B3B3ABB812C0A82A7879F735>108
D<902601FFF891260FFFE093383FFF80B692B500FE0303B512F805036E6C020F14FE050F
03E0023F6E7E053F03F891B712E04D6F4982932701FFF01F6D0107D9C07F7F4CD900076D
90270FFC001F7FDC07FC6D9126801FF06D7FC66CDA0FF06D9126C03FC06D7F011FDA1FC0
6D4BC77E6D4A48DCE0FE834CC8ECE1FC047E6FD9F1F86E804CEFF3F0DBF9F8EFF7E04C60
03FB7001FF6F804C6015FF4C95C9FCA24C5FA293C95CA44B60B3B3A6B8D8E003B8D8800F
B712FEA8974E79CDA2>I<902601FFF891380FFFE0B692B512FE05036E7E050F15E0053F
15F84D81932701FFF01F7F4CD900077FDC07FC6D80C66CDA0FF06D80011FDA1FC07F6D4A
48824CC8FC047E6F7F5EEDF9F85E03FB707F5E15FF5EA25EA293C9FCA45DB3B3A6B8D8E0
03B81280A8614E79CD6C>I<93381FFFE00303B6FC031F15E092B712FC020316FF020F17
C0023FD9FC0014F091B500C0010F13FC4991C700037F4901FC02007F010F496F13C04949
6F7F49496F7F4B8149496F7F90B5C96C7F4886A24849707F481B80A248497014C0A2481B
E0A348497113F0A3481BF8A5B51AFCAE6C1BF8A46C1BF06E94B5FCA36C1BE0A26C6D4C14
C0A26C1B806E5E6C1B006C6E4B5BA26C6E4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D92B55A
6D01FF02035C6D02C0010F91C7FC010002FC90B512FC6E90B75A021F17E0020717800201
4CC8FCDA003F15F0030392C9FCDB001F13E056507BCE61>I<902601FFF8EB07FEB69138
3FFFC094B512F00403804C14FE4C8093261FFC3F138093263FE07F13C0DC7F80B5FCC66C
5D011FDAFE0114E06DEBF9FC16F815FB16F016E015FF16C07114C05E72138095381FFE00
93C76C5AF001E095C8FCA25DA65DB3B3A2B812F8A8434E7ACD4F>114
D<912603FFFCEB0780027F9039FFE00FC00103B6EAF83F010FEDFEFF013F92B5FC49EB00
0F2601FFF01300480180143F4890C8120F4848814848814981123F83485A187FA212FF6D
163FA37F7F6DEE1F8002C092C7FC14F014FEECFFF06CECFF8016FEEEFFE06C16FC6C16FF
18C06C836C17F86C836C836C83013F17806D17C0010717E0010117F0EB003F020716F8EC
001F030015FC1607EE007F051F13FE1707007E82B482836D167FA2183F7F181FA27F19FC
7FA26D163F6D17F86D167F19F06D16FF6E4A13E002E04A13C06E4A138002FE023F130091
3AFFC003FFFE01E790B65A01C316F0018016C026FE003F92C7FC48010714F80070D9007F
90C8FC3F507ACE4C>I<15FFA75CA55CA45CA25CA25CA25CA25C91B5FCA25B5B5B131F5B
90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE183F7014C07F187F7014806D16FF82
6D4B13006E6D485AEEFE0F6E90B55A020F5D6E5D020115C06E6C5C031F49C7FC030113F0
3B6E7CEC4B>I<DAFFFE933803FFF8B60303B6FCA8C66CEE0001011F717E6D84B3B3A862
A497B5FCA261A2616D5F1ADF6F150F6DEF1F9F073F806D6EDA7F1F13FF6D6ED901FEEDFF
8070EB07FC023F01FEEB3FF86E90B612F06E16C0020316800200EDFE00031F14F8030002
8003C0C7FC614F79CD6C>I E /Fj 4 40 df[<EA7FFEB67E15FE6CECFFF8D80003ECFF80
90C714F80303EBFF80DB000F13F0040013FE94380FFFC0050013F8F01FFE953803FFC095
38007FF0F10FFE963803FF809638007FE0F21FF8F203FE973800FF80F33FE0F30FF0F303
FCF300FFF43FC0767EF407F8F401FCF4007F777EF50FE0777EF501FC777E1E3FF61FC078
7EF603F0787EF600FE1F7FF71F80797E797E797E797E797E207E8CF81FC0200FF803E08D
7A7E7A7E217E8D7B7E7B7E7B7E7B7E21017B7E8E227E8E8E7C7E8F7C7E22037C7E8F2200
237C237E233E8FA17E230F7D7EA27D7EA17E23017D7EA2A1127CA2A17EA2A17EA2A16C7E
A2A16C7EA2A16C7EA2A16C7EA2A16C7EA2A11378A1137CA2A17FA2A1131EA1131FA2A16D
7EA2A11307A180A2A11303A180A2A11301A2A180A2A11300A180A2A11478A2A1147CA2A1
143CA3A1143EA2A1141EA3A1141FA2A180A5A11580A2A11407A7A115C0A2A11403ADA1EC
0180>170 170 294 131 332 36 D[<A1EC0180A1EC03C0ADA11407A2A11580A7A1140F
A2A11500A5A15CA2A1141EA3A1143EA2A1143CA3A1147CA2A11478A2A114F8A2A15CA113
01A2A15CA2A11303A2A15CA11307A2A15CA1130FA2A149C7FCA2A1131EA1133EA2A15BA2
A11378A113F8A2A1485AA2A1485AA2A1485AA2A1485AA2A148C8FCA2A1123EA2A15AA2A1
5AA2595A2303A15A595AA2595A231FA1C9FC233E237E237C6B22016B585A2207585A6B58
CAFC6A227E6A6A575A2103575A575A575A57CBFC217E69565A565A69F80FC0565A56CCFC
207E68555A555A555A555A555A0D7FCDFC1FFEF601F8545AF60FE0545A54CEFC1EFE535A
F507F0535AF53F8053CFFCF401FCF407F8F41FE0525A0AFFD0FCF303FCF30FF0F33FE0F3
FF80E003FED1FCF21FF8F27FE0963803FF80DF0FFED2FCF17FF0953803FFC0DE1FFED3FC
F0FFF8050F13C0DDFFFED4FC040F13F00303B5128092B500F8D5FC0103B61280007FB600
F8D6FCB648D7FC15806C48D7C7FC>170 170 294 297 332 I[<126012F0AD7EA21278A7
127CA2123CA5123EA2121EA3121FA27EA37FA21207A27FA212037FA21201A27FA212007F
A21378137CA27FA2131E131FA26D7EA2130780A26D7EA26D7EA26D7EA2147CA280A280A2
6E7EA26E7EA26E7E8114016E7EA2157C157E153E8182150F6F7E8215036F7E826F7E167C
82163F707E707E1607707E83707E707E177E83717E717E717E717E717E717E187E84727E
727E727E727E727E727E197E737E737EF107E0737EF101FC737E1A3FF21FC0747EF203F8
747EF2007F757EF30FE0F307F8F301FE757EF43FC0F40FF0F403FC76B4FC9938007FC0F5
1FF0F507FE9A3801FF809A38007FF0F61FFC9B3803FF800C0013F0F71FFE9C3807FFC00D
0013FC9D381FFFC00E0313FC9D39007FFFF00F07EBFFC0E7007FEBFFF0100791B51280E8
001F15C0FB007FA1D8001F1380>170 170 128 297 332 I<A190381FFF80A1007FB512
C0111FB6FC1007B71280107F02F0C7FC0F07B500C0C8FC0F7F01F0C9FC9D2603FFFCCAFC
0E1F13C0E6FFFCCBFC0D0713C0E51FFECCFCF7FFF00C031380E41FFCCDFCF67FF09A3801
FF80E307FECEFCF51FF0F57FC05248CFFCF403FCF40FF0F43FC00AFFD0FC515AF307F8F3
0FE0F33F8051D1FCF201FC505AF20FE0505A50D2FC1AFE4F5AF103F04F5AF11FC04F5A07
7ED3FC614E5A4E5A4E5A4E5A4E5A4ED4FC187E604D5A4D5A4D5A4D5A4D5A4DD5FC177E5F
4C5A4C5A5F4C5A160F4C5A4CD6FC163E5E16FC4B5A5E4B5A15075E4B5A151F93D7FC153E
157E157C5DA24A5A14035D4A5AA24A5AA24AD7C6FCA2143EA25CA25CA2495AA2495AA249
5AA25C130FA249D7C7FCA2131E133EA25BA2137813F8A25B1201A25BA21203A25B1207A2
5BA2120FA290D7C8FCA35AA2121EA3123EA2123CA5127CA21278A712F8A25AAD1260AAAA
80834C>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
/setpagedevice where {
pop 1 dict dup /PageSize [ 595 842 ] put setpagedevice
} {
statusdict /a4tray known {
statusdict begin a4tray end
/a4 where { pop a4 } if
} {
/a4 where {
pop a4
} {
statusdict /setpage known {
statusdict begin
595 842 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 1 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 874 118 a Fc(Ar)-11 b(tificial)64
b(Intelligence)135 2158 y Fb(\017)49 b Ff(The)44 b(term)e
(\\Arti\014cial)h(Intelligence)h(\(AI\)")g(w)l(as)g(\014rst)f(coined)h
(in)g(1956.)135 2424 y Fb(\017)49 b Ff(Di\013erence)62
b(in)h(objective)g(b)t(et)l(w)l(een)g(AI)f(and)h(cognitive)g(science)g
(\(in-)256 2606 y(cluding)49 b(philosophy)g(and)f(psychology\))h(to)l
(w)l(a)l(rds)f(the)f(study)h(of)g(intel-)256 2789 y(ligence:)341
3055 y Fh({)g Ff(AI:)470 3237 y(T)-11 b(o)53 b(understand)g(what)e
(intelligence)i(is)f Fa(and)67 b Ff(to)52 b(build)h(intelligent)470
3420 y(a)l(rtifacts.)341 3644 y Fh({)48 b Ff(Cognitive)e(science:)470
3827 y(T)-11 b(o)46 b(understand)g(what)e(intelligence)i(is)e
Fa(only)p Ff(.)12 6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 2 2
2 2 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 772 118 a Fc(AI)65 b(and)f(Computer)h(Science)
135 2183 y Fb(\017)49 b Ff(Computer)c(science:)341 2449
y Fh({)j Ff(T)-11 b(o)36 b(understand)g(the)g(physical)f(and)h
(mathematical)c(limits)h(of)j(com-)470 2632 y(putation.)341
2856 y Fh({)48 b Ff(T)-11 b(o)46 b(imp)l(rove)e(the)h(w)l(a)l(ys)g
(computers)f(a)l(re)h(applied.)135 3121 y Fb(\017)k Ff(Arti\014cial)44
b(intelligence:)341 3387 y Fh({)k Ff(T)-11 b(o)52 b(understand)h(the)f
(mathematical)c(and)53 b(computational)e(limits)470 3570
y(of)46 b(intelligent)f(b)t(ehavio)l(r.)341 3794 y Fh({)j
Ff(T)-11 b(o)45 b(imp)l(rove)f(the)g(abilit)l(y)g(of)h(computers)e(to)i
(b)t(ehave)f(intelligently)-11 b(.)12 6034 y Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 3 3
3 3 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 885 118 a Fc(Some)65 b(Definitions)f(of)i(AI)
3061 5433 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 3061 5433 a @beginspecial 148 @llx 475 @lly
533 @urx 655 @ury 5952 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig01.01.ps
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ ai-is-table.ps ai-is-table
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1246
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
TeXDict begin 40258437 52099154 1000 300 300 (ai-is-table.dvi)
@start /Fa 136[28 2[12 16 4[21 30 3[12 21 2[18 21 18
1[21 97[{}11 41.666668 /Times-Italic rf /Fb 69[18 11[23
3[18 47[18 21 21 30 21 21 12 16 14 21 21 21 21 32 12
21 1[12 21 21 14 18 21 18 21 18 3[14 1[14 3[39 2[25 23
28 4[37 25 30 2[30 3[30 28 28 30 7[21 21 21 1[21 1[21
21 21 21 1[10 14 10 2[14 14 40[{}55 41.666668 /Times-Roman
rf end
TeXDict begin

1 0 bop 322 276 1593 2 v 321 447 2 171 v 362 324 a Fb(\252The)8
b(e)o(xciting)f(ne)o(w)h(ef)o(fort)f(to)g(make)h(computers)362
374 y(think)13 b(.)7 b(.)g(.)17 b Fa(mac)o(hines)e(with)f(minds)p
Fb(,)i(in)f(the)g(full)362 424 y(and)10 b(literal)f(sense\272)j
(\(Haugeland,)e(1985\))p 1116 447 V 1160 324 a(\252The)k(study)e(of)g
(mental)h(faculties)f(through)e(the)1160 374 y(use)h(of)f
(computational)f(models\272)1160 424 y(\(Charniak)h(and)g(McDermott,)h
(1985\))p 1915 447 V 321 667 2 221 v 362 494 a(\252[The)c(automation)g
(of])g(acti)o(vit)o(ies)g(th)o(at)g(we)g(asso-)362 544
y(ciate)g(with)f(human)h(thinking,)f(acti)o(vities)g(such)h(as)362
594 y(decision-making,)f(problem)h(solving,)f(learning)362
644 y(.)h(.)g(.)q(\272)j(\(Bellman,)h(1978\))p 1116 667
V 1160 494 a(\252The)k(study)e(of)g(the)h(computations)f(that)g(make)
1160 544 y(it)d(possible)f(to)h(percei)o(v)o(e,)i(reason,)f(and)f
(act\272)1160 594 y(\(W)n(inston,)g(1992\))p 1915 667
V 322 668 1593 2 v 321 845 2 177 v 362 731 a(\252The)i(art)f(of)g
(creating)h(machines)g(that)f(perform)362 780 y(functions)c(that)f
(require)h(i)o(nt)o(ellig)o(ence)g(when)g(per)o(-)362
830 y(formed)j(by)g(people\272)g(\(K)o(urzweil,)h(1990\))p
1116 845 V 1160 731 a(\252)m(A)j(\256eld)f(of)g(study)g(that)f(seeks)j
(to)d(e)o(xplain)h(and)1160 780 y(emulate)24 b(intelligent)c(beha)o
(vior)i(in)g(terms)h(of)1160 830 y(computational)7 b(processes\272)g
(\(Schalkof)o(f,)f(1990\))p 1915 845 V 321 1015 2 171
v 362 893 a(\252The)15 b(study)f(of)g(ho)o(w)g(to)g(make)h(computers)g
(do)362 943 y(things)10 b(at)i(which,)g(at)g(the)g(moment,)h(people)f
(are)362 993 y(better\272)e(\(Rich)g(and)g(Knight,)f(1991\))p
1116 1015 V 1160 893 a(\252The)d(branch)g(of)g(computer)g(science)g
(that)g(is)g(con-)1160 943 y(cerned)19 b(with)f(the)g(automation)f(of)h
(intelligent)1160 993 y(beha)o(vior\272)11 b(\(Luger)f(and)g
(Stubble\256eld,)g(1993\))p 1915 1015 V 322 1017 1593
2 v eop
end
userdict /end-hook known{end-hook}if
%%EndDocument
 @endspecial 8022 5433 a
 currentpoint grestore moveto
 8022 5433 a 12 6034 a Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 4 4
4 4 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 486 129 a Fc(Some)66 b(Definitions)e(of)i(AI)f
(\(cont'd\))135 2138 y Fb(\017)49 b Ff(Tw)l(o)c(dimensions:)341
2404 y Fh({)j Ff(Thinking)f(\(reasoning\))f(vs.)g(acting)f(\(b)t
(ehavio)l(r\))341 2628 y Fh({)j Ff(Human)d(p)t(erfo)l(rmance)g(vs.)g
(rationalit)l(y)135 2893 y Fb(\017)k Ff(F)l(our)d(app)l(roaches:)341
3159 y Fh({)i Ff(The)32 b(cognitive)g(mo)t(deling)g(app)l(roach)h(\()p
Fa(thinking)48 b Ff(in)31 b(a)h Fa(human)i Ff(w)l(a)l(y\))341
3383 y Fh({)48 b Ff(The)e(T)-11 b(uring)45 b(T)-11 b(est)45
b(app)l(roach)h(\()p Fa(acting)60 b Ff(in)46 b(a)e Fa(human)k
Ff(w)l(a)l(y\))341 3607 y Fh({)g Ff(The)e(la)l(ws)e(of)i(thought)g(app)
l(roach)h(\()p Fa(thinking)61 b Ff(in)45 b(a)g Fa(rational)59
b Ff(w)l(a)l(y\))341 3832 y Fh({)48 b Ff(The)e(rational)e(agent)i(app)l
(roach)g(\()p Fa(acting)60 b Ff(in)46 b(a)e Fa(rational)60
b Ff(w)l(a)l(y\))12 6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 5 5
5 5 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 540 118 a Fc(The)65 b(Ra)-11
b(tional)64 b(A)-5 b(gent)65 b(Appr)l(o)l(a)l(ch)135
2183 y Fb(\017)49 b Ff(AI)c(is)f(the)h(study)g(and)h(construction)g(of)
g(rational)e(agents.)135 2449 y Fb(\017)49 b Ff(Advantage)c(over)g(the)
g(la)l(ws)f(of)i(thought)h(app)l(roach:)341 2715 y Fh({)h
Fa(Less)39 b(restrictive)p Ff(,)h(as)e(making)g(co)l(rrect)i
(\(logical\))g(inferences)g(is)f(not)470 2897 y(necessa)l(rily)69
b(the)h(only)g(means)f(fo)l(r)h(achieving)g(rationalit)l(y)g(\(and)470
3080 y(hence)46 b(intelligence\).)135 3346 y Fb(\017)j
Ff(Advantage)c(over)g(human-centered)g(app)l(roaches:)341
3611 y Fh({)j Fa(Mo)l(re)37 b(objective)p Ff(,)h(as)e(the)g(standa)l
(rd)g(of)h(rationalit)l(y)f(can)g(b)t(e)g(de\014ned)470
3794 y(mo)l(re)45 b(generally)-11 b(.)12 6034 y Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 6 6
6 6 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1047 118 a Fc(Intelligent)65
b(A)-5 b(gents)135 1566 y Fb(\017)49 b Ff(Interactions)c(b)t(et)l(w)l
(een)g(an)g(agent)h(and)f(its)g(environment:)341 1832
y Fh({)j Fa(P)l(erception)i Ff(through)c(senso)l(rs)341
2056 y Fh({)i Fa(Action)h Ff(through)d(e\013ecto)l(rs)603
3306 y @beginspecial 47 @llx 610 @lly 386 @urx 763 @ury
3118 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.01.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.882482 0.740491 -0.740491 0.882482 693.113 1.55746 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 6
396 192
405 168
417 165
418 175
410 196
402 204
6 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 5
390 193
412 229
428 234
430 220
407 186
5 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 7
402 164
414 171
421 170
423 164
414 161
405 156
396 153
7 CBSpl
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.008 0 0 1.008 118.512 322.609 ] concat
%I
217 428 80 39 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 176.535 149.411 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.252 0 0 0.252 64.9997 506.017 ] concat
%I 8
158 463
169 454
188 443
209 440
186 438
170 433
157 424
157 424
8 BSpl
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0624144 0 0 0.0624144 87.8171 608.229 ] concat
%I
321 150 4 17 Elli
End

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.124829 0 0 0.124829 89.6271 579.456 ] concat
%I 4
150 325
144 312
144 301
149 286
4 BSpl
%I 8
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 338.849 764.514 ] concat
%I
[
(?)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1.44 0 0 1.44 68.5609 -236.472 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 6
396 192
405 168
417 165
418 175
410 196
402 204
6 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 5
390 193
412 229
428 234
430 220
407 186
5 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.499316 0 0 0.499316 -32.4555 559.109 ] concat
%I 7
402 164
414 171
421 170
423 164
414 161
405 156
396 153
7 CBSpl
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -0.910052 -0.843109 -0.843109 0.910052 1144.45 462.847 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.223705 -0.123745 0.123745 0.223705 243.904 641.969 ] concat
%I 6
488 241
481 256
484 265
491 257
496 245
496 237
6 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.13672 -0.216019 0.216019 0.13672 266.07 708.048 ] concat
%I 6
488 241
481 256
484 265
491 257
496 245
496 237
6 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.00583046 -0.255583 0.255583 0.00583046 321.987 757.72 ] concat
%I 6
488 241
481 256
484 265
491 257
496 245
496 237
6 CBSpl
End

End %I eop

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ -0.249483 0.00934716 0.00934716 0.249483 422.313 665.188 ] concat
%I 7
549 198
584 206
634 198
672 178
659 164
604 166
559 179
7 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ -0.240597 -0.0666477 -0.0666477 0.240597 435.796 714.74 ] concat
%I 7
442 224
557 166
601 171
571 201
528 224
486 242
445 251
7 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 341.89 740.039 ] concat
%I
[
(agent)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -83.3417 585.93 ] concat
%I 2
759 361
795 361
2 BSpl
%I 2
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.499316 0 0 0.499316 58.464 585.93 ] concat
%I
508 321 630 373 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -96 329.521 ] concat
%I
354 344 364 378 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 170.512 785.255 ] concat
%I
[
(percepts)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 262.5 823 ] concat
%I
[
(sensors)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 179 728.762 ] concat
%I
[
(actions)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 193.538 675.01 ] concat
%I
[
(effectors)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 1.49795 455.001 ] concat
%I
514 437 612 471 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 1.49795 455.001 ] concat
%I
576 713 576 641 Line
%I 2
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 1.49795 455.001 ] concat
%I 5
272 648
323 678
401 684
492 668
534 603
5 BSpl
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 39 329.981 ] concat
%I
67 417 54 54 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 63 751.981 ] concat
%I
[
(environment)
] Text
End

End %I eop

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 1.49795 455.001 ] concat
%I 5
492 521
448 506
399 502
332 516
264 549
5 BSpl
%I 2
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 135 3808 a Fb(\017)j Ff(Rational)c(agents:)341
4074 y Fh({)j Ff(Cho)t(ose)42 b(to)e(tak)l(e)f(the)i(action)f(that)g
(maximizes)c(some)k(\\objective")470 4257 y(p)t(erfo)l(rmance)55
b(measure,)i(given)f(the)f(p)t(ercept)g(sequence)h(seen)f(so)470
4439 y(fa)l(r.)12 6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 7 7
7 7 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1375 118 a Fc(Ra)-11 b(tionality)135
1283 y Fb(\017)49 b Ff(Rationalit)l(y)44 b(dep)t(ends)i(on:)341
1548 y Fh({)i Ff(P)l(erfo)l(rmance)d(measure)341 1773
y Fh({)j Ff(P)l(ercept)e(sequence)341 1997 y Fh({)i Ff(Built-in)e(kno)l
(wledge)g(ab)t(out)f(environment)341 2221 y Fh({)j Ff(Actions)d(that)g
(can)g(b)t(e)g(p)t(erfo)l(rmed)135 2487 y Fb(\017)k Ff(Limited)44
b(rationalit)l(y:)341 2752 y Fh({)k Ff(T)-11 b(rying)49
b(to)f(do)h(the)g(b)t(est)e(\(i.e.)j(most)d(rational\))h(under)i
(limited)d(re-)470 2935 y(sources.)135 3201 y Fb(\017)i
Ff(P)l(erfo)l(rming)42 b(actions)e(which)i(lead)f(to)g(the)g(p)t
(erception)h(of)g(useful)f(info)l(r-)256 3383 y(mation)32
b(\(which)i(otherwise)e(w)l(ould)i(not)g(b)t(e)f(available\))f(is)g(an)
h(imp)t(o)l(rtant)256 3566 y(asp)t(ect)44 b(of)i(rationalit)l(y)-11
b(.)135 3832 y Fb(\017)49 b Ff(Autonomous)c(agents:)341
4097 y Fh({)j Ff(Do)h(not)g(rely)f(entirely)g(on)g(built-in)h(kno)l
(wledge)h(\(i.e.)f(not)g(entirely)470 4280 y(p)l(re-p)l(rogrammed\).)
341 4504 y Fh({)f Ff(Adapt)56 b(to)g(the)g(environments)f(through)i
(exp)t(erience)f(\(i.e.)h(lea)l(rn-)470 4687 y(ing\).)12
6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p eop
%%Page: 8 8
8 8 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1009 118 a Fc(Examples)63 b(of)j(A)-5
b(gents)3641 5433 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 3641 5433 a @beginspecial 148 @llx
385 @lly 533 @urx 655 @ury 5952 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.03.ps
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ agent-type-table.ps agent-type-table
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1243
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
TeXDict begin 40258437 52099154 1000 300 300 (agent-type-table.dvi)
@start /Fa 81[18 51[15 17 17 24 17 17 9 13 11 1[17 17
17 26 9 17 9 9 17 17 11 15 17 15 17 15 12[20 18 22 24
18 24 1[30 3[11 24 2[20 1[22 7[9 13[11 8 4[11 39[{}41
33.333332 /Times-Roman rf /Fb 134[21 2[21 1[12 16 14
1[21 21 21 32 12 2[12 1[21 1[18 1[18 1[18 12[25 3[23
8[30 1[25 3[30 65[{}20 41.666668 /Times-Roman rf end
TeXDict begin

1 0 bop 322 276 1593 2 v 321 341 2 65 v 355 321 a Fb(Agent)10
b(T)m(ype)p 639 341 V 648 341 V 132 w(Percepts)p 964
341 V 177 w(Actions)p 1281 341 V 187 w(Goals)p 1598 341
V 220 w(En)n(vironment)p 1915 341 V 322 342 1593 2 v
321 558 2 216 v 355 428 a Fa(Medical)d(diagnosis)355
468 y(system)p 639 558 V 647 558 V 681 428 a(Symptoms,)681
468 y(\256ndings,)g(patient')n(s)681 507 y(answers)p
964 558 V 998 428 a(Questions,)g(tests,)998 468 y(treatments)p
1281 558 V 1315 428 a(Healthy)g(patient,)1315 468 y(minimize)g(costs)p
1598 558 V 1632 428 a(Patient,)h(hospital)p 1915 558
V 322 560 1593 2 v 321 776 2 216 v 355 646 a(Satellite)h(image)355
685 y(analysis)e(system)p 639 776 V 647 776 V 681 646
a(Pixels)h(of)f(v)o(arying)681 685 y(intensity)n(,)g(color)p
964 776 V 998 646 a(Print)h(a)998 685 y(categorization)d(of)998
725 y(scene)p 1281 776 V 1315 646 a(Correct)1315 685
y(categorization)p 1598 776 V 1632 646 a(Images)i(from)1632
685 y(orbiting)g(satellite)p 1915 776 V 322 778 1593
2 v 321 954 2 177 v 355 863 a(Part-picking)g(robot)p
639 954 V 647 954 V 83 w(Pixels)h(of)f(v)o(arying)681
903 y(intensity)p 964 954 V 998 863 a(Pick)h(up)f(parts)h(and)998
903 y(sort)g(into)g(bins)p 1281 954 V 1315 863 a(Place)g(parts)g(in)
1315 903 y(correct)f(bins)p 1598 954 V 1632 863 a(Con)o(veyo)o(r)f
(belt)1632 903 y(with)i(parts)p 1915 954 V 322 956 1593
2 v 321 1171 2 216 v 355 1041 a(Re\256nery)g(controller)p
639 1171 V 647 1171 V 73 w(T)n(emperature,)681 1081 y(pressure)e
(readings)p 964 1171 V 998 1041 a(Open,)h(close)998 1081
y(v)o(alves;)g(adjust)998 1120 y(temperature)p 1281 1171
V 1315 1041 a(Maximize)g(purity)n(,)1315 1081 y(yield,)h(safety)p
1598 1171 V 1632 1041 a(Re\256nery)p 1915 1171 V 322
1173 1593 2 v 321 1389 2 216 v 355 1259 a(Interacti)o(ve)f(English)355
1298 y(tutor)p 639 1389 V 647 1389 V 681 1259 a(T)m(yped)g(words)p
964 1389 V 145 w(Print)h(exercises,)998 1298 y(suggestions,)998
1338 y(corrections)p 1281 1389 V 1315 1259 a(Maximize)1315
1298 y(student')n(s)f(score)g(on)1315 1338 y(test)p 1598
1389 V 1632 1259 a(Set)h(of)g(students)p 1915 1389 V
322 1391 1593 2 v eop
end
userdict /end-hook known{end-hook}if
%%EndDocument
 @endspecial 8602 5433 a
 currentpoint grestore moveto
 8602 5433 a 12 6034 a Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 9 9
9 9 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 364 118 a Fc(An)65 b(Example:)84
b(A)65 b(Texi)g(Driver)f(A)-5 b(gent)2353 5433 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 2353
5433 a @beginspecial 148 @llx 585 @lly 533 @urx 655 @ury
5952 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.06.ps
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ taxi-table.ps taxi-table
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1244
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
TeXDict begin 40258437 52099154 1000 300 300 (taxi-table.dvi)
@start /Fa 81[18 51[15 1[17 1[17 17 9 13 11 1[17 17 17
26 9 17 1[9 17 17 11 15 17 15 17 15 12[20 18 22 1[18
8[24 3[22 22[8 44[{}30 33.333332 /Times-Roman rf /Fb
134[21 2[21 1[12 16 14 1[21 21 21 32 12 2[12 1[21 1[18
1[18 1[18 12[25 3[23 8[30 1[25 3[30 65[{}20 41.666668
/Times-Roman rf end
TeXDict begin

1 0 bop 322 276 1593 2 v 321 341 2 65 v 355 321 a Fb(Agent)10
b(T)m(ype)p 639 341 V 648 341 V 132 w(Percepts)p 964
341 V 177 w(Actions)p 1281 341 V 187 w(Goals)p 1598 341
V 220 w(En)n(vironment)p 1915 341 V 322 342 1593 2 v
321 558 2 216 v 355 428 a Fa(T)m(axi)f(dri)o(ver)p 639
558 V 647 558 V 180 w(Cameras,)681 468 y(speedometer)o(,)d(GPS,)681
507 y(sonar)o(,)h(microphone)p 964 558 V 998 428 a(Steer)o(,)h
(accelerate,)998 468 y(brake,)f(talk)h(to)998 507 y(passenger)p
1281 558 V 1315 428 a(Safe,)g(fast,)g(legal,)1315 468
y(comfortable)e(trip,)1315 507 y(maximize)h(pro\256ts)p
1598 558 V 1632 428 a(Roads,)g(other)1632 468 y(traf)o(\256c,)h
(pedestrians,)1632 507 y(customers)p 1915 558 V 322 560
1593 2 v eop
end
userdict /end-hook known{end-hook}if
%%EndDocument
 @endspecial 7313 5433 a
 currentpoint grestore moveto
 7313 5433 a 12 6034 a Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 10 10
10 10 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1163 118 a Fc(A)-5 b(gent)65
b(Pr)l(ograms)135 2673 y Fb(\017)49 b Ff(An)35 b Fa(agent)g(p)l(rogram)
j Ff(is)d(a)g(function)i(that)d(implements)f(the)i(agent)h(map-)256
2856 y(ping)46 b(from)f(p)t(ercepts)f(to)h(actions.)135
3121 y Fb(\017)k Ff(Di\013erent)f(t)l(yp)t(es)f(of)i(agent)f(p)l
(rogram)g(a)l(re)f(required)i(to)f(deal)g(with)g(dif-)256
3304 y(ferent)d(environment)g(t)l(yp)t(es)g(e\013ectively)-11
b(.)12 6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 11 11
11 11 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 764 118 a Fc(A)-5 b(gent)65 b(Pr)l(ogram)f
(Skeleton)2527 5433 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 2527 5433 a @beginspecial 148 @llx
339 @lly 533 @urx 436 @ury 5952 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.04.ps
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ skeleton-agent-algorithm.ps skeleton-agent-algorithm
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1210
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
TeXDict begin 40258437 52099154 1000 300 300
(skeleton-agent-algorithm.dvi) @start /Fa 1 33 df<0180000001800000030000
000300000006000000060000000C0000001800000030000000FFFFFFFFFFFFFFFF300000
00180000000C00000006000000060000000300000003000000018000000180000020147D
9226>32 D E /Fb 134[17 4[10 1[15 1[19 19 19 27 3[10 3[17
1[17 1[19 52[9 44[{}12 37.500000 /Times-Italic rf /Fc
166[22 4[18 17 20 1[17 22 22 27 18 22 1[10 22 22 1[18
22 20 1[22 65[{}17 29.999987 /Times-Roman rf /Fd 134[19
1[27 2[10 15 12 2[19 19 29 10 2[10 19 19 12 17 19 17
1[17 11[27 1[21 5[33 9[25 25 27 6[10 12[12 9 2[12 12
12 39[{}29 37.500000 /Times-Roman rf /Fe 138[21 12 15
17 2[19 21 4[10 2[12 17 1[17 1[19 97[{}11 37.500000 /Times-Bold
rf end
TeXDict begin

1 0 bop 322 1190 1593 2 v 322 1581 2 392 v 362 1256 a
Fe(function)9 b Fd(S)p Fc(KELET)o(ON)p Fd(-A)o Fc(GENT)p
Fd(\()e Fb(per)o(cept)p Fd(\))g Fe(r)o(etur)o(ns)i Fd(action)399
1302 y Fe(static)p Fd(:)14 b Fb(memory)p Fd(,)8 b(the)h(agent')n(s)f
(memory)h(of)h(the)f(world)399 1377 y Fb(memory)c Fa( )i
Fd(U)p Fc(PD)o(A)m(TE)p Fd(-M)p Fc(EMOR)n(Y)n Fd(\()p
Fb(memory,)f(per)o(cep)o(t)p Fd(\))399 1423 y Fb(action)g
Fa( )h Fd(C)p Fc(HOOSE)p Fd(-B)p Fc(EST)m Fd(-A)o Fc(CTION)o
Fd(\()p Fb(memory)p Fd(\))399 1469 y Fb(memory)e Fa( )i
Fd(U)p Fc(PD)o(A)m(TE)p Fd(-M)p Fc(EMOR)n(Y)n Fd(\()p
Fb(memory,)f(action)p Fd(\))399 1514 y Fe(r)o(etur)o(n)j
Fb(action)p 1914 1581 V 322 1583 1593 2 v eop
end
userdict /end-hook known{end-hook}if
%%EndDocument
 @endspecial 7487 5433 a
 currentpoint grestore moveto
 7487 5433 a 12 6034 a Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Page: 12 12
12 12 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 868 118 a Fc(A)66 b(Simple)f(Reflex)g(A)-5
b(gent)130 4081 y @beginspecial 81 @llx 311 @lly 469
@urx 558 @ury 4252 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.07.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
152 403
152 411
168 427
176 427
504 427
512 427
528 411
528 403
528 147
528 139
512 123
504 123
176 123
168 123
152 139
152 147
16 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
552 403
552 411
568 427
576 427
608 427
616 427
632 411
632 403
632 147
632 139
616 123
608 123
576 123
568 123
552 139
552 147
16 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1.44 0 0 1.44 127.42 680.08 ] concat
%I
[
(Agent)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -6.29444e-08 -1.44 1.44 -6.29444e-08 554.08 605.92 ] concat
%I
[
(Environment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 368 669 ] concat
%I
[
(Sensors)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 366.5 421 ] concat
%I
[
(Effectors)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 285 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -1 0 0 1 1000 37 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -23.5 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.84753 0 0 1.03655 -49.4666 240.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 629 ] concat
%I
[
(What the world)
(is like now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -29.5 -6 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.71673 0 0 1.00606 -9.98224 115.799 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 493 ] concat
%I
[
(What action I)
(should do now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 205 386 204 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -99 124 ] concat
%I 12
248 339
240 347
240 355
248 363
256 363
384 363
392 363
400 355
400 347
392 339
384 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 149.5 480 ] concat
%I
[
(Condition-action rules)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 190.256 326.43 ] concat
%I
432 684 432 636 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 199.914 326.43 ] concat
%I
412 273 412 219 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 197.983 330.776 ] concat
%I
416 556 416 332 Line
%I 2
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 12 6034 a Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 13 13
13 13 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 253 118 a Fc(A)65 b(Reflex)g(A)-5
b(gent)65 b(with)f(Internal)g(St)-11 b(a)g(te)130 4081
y @beginspecial 81 @llx 311 @lly 469 @urx 558 @ury 4252
@rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.09.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
152 403
152 411
168 427
176 427
504 427
512 427
528 411
528 403
528 147
528 139
512 123
504 123
176 123
168 123
152 139
152 147
16 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
552 403
552 411
568 427
576 427
608 427
616 427
632 411
632 403
632 147
632 139
616 123
608 123
576 123
568 123
552 139
552 147
16 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1.44 0 0 1.44 127.42 430.08 ] concat
%I
[
(Agent)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -6.29444e-08 -1.44 1.44 -6.29444e-08 554.08 605.92 ] concat
%I
[
(Environment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 368 669 ] concat
%I
[
(Sensors)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 366.5 421 ] concat
%I
[
(Effectors)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 285 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -1 0 0 1 1000 37 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -23.5 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.84753 0 0 1.03655 -49.4666 240.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 629 ] concat
%I
[
(What the world)
(is like now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -29.5 -6 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.71673 0 0 1.00606 -9.98224 115.799 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 493 ] concat
%I
[
(What action I)
(should do now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 379 384 363 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -11 -24 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -48 321 ] concat
%I 12
248 347
248 355
256 363
264 363
296 363
304 363
312 355
312 347
304 339
296 339
264 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 677 ] concat
%I
[
(State)
] Text
End

End %I eop

End %I eop

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 347 384 347 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -41 273 ] concat
%I 12
248 339
240 347
240 355
248 363
256 363
384 363
392 363
400 355
400 347
392 339
384 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 208 629 ] concat
%I
[
(How the world evolves)
] Text
End

End %I eop

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
328 299 384 339 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58.5 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -40.5 273 ] concat
%I 12
256 291
248 299
248 307
256 315
264 315
376 315
384 315
392 307
392 299
384 291
376 291
264 291
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 581 ] concat
%I
[
(What my actions do)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 205 386 204 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -99 124 ] concat
%I 12
248 339
240 347
240 355
248 363
256 363
384 363
392 363
400 355
400 347
392 339
384 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 149.5 480 ] concat
%I
[
(Condition-action rules)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 190.256 326.43 ] concat
%I
432 684 432 636 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 199.914 326.43 ] concat
%I
412 273 412 219 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 197.983 330.776 ] concat
%I
416 556 416 332 Line
%I 2
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 12 6034 a Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 14 14
14 14 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 547 118 a Fc(An)65 b(A)-5 b(gent)65
b(with)g(Explicit)f(Go)l(als)130 4081 y @beginspecial
81 @llx 311 @lly 469 @urx 558 @ury 4252 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.11.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
152 403
152 411
168 427
176 427
504 427
512 427
528 411
528 403
528 147
528 139
512 123
504 123
176 123
168 123
152 139
152 147
16 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
552 403
552 411
568 427
576 427
608 427
616 427
632 411
632 403
632 147
632 139
616 123
608 123
576 123
568 123
552 139
552 147
16 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1.44 0 0 1.44 127.42 430.08 ] concat
%I
[
(Agent)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -6.29444e-08 -1.44 1.44 -6.29444e-08 554.08 605.92 ] concat
%I
[
(Environment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 368 669 ] concat
%I
[
(Sensors)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 366.5 421 ] concat
%I
[
(Effectors)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 285 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -1 0 0 1 1000 37 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -32 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.10852 0 0 1.03655 -107.78 192.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 581 ] concat
%I
[
(What it will be like)
(  if I do action A)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -23.5 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.84753 0 0 1.03655 -49.4666 240.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 629 ] concat
%I
[
(What the world)
(is like now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -29.5 -6 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.71673 0 0 1.00606 -9.98224 115.799 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 493 ] concat
%I
[
(What action I)
(should do now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 379 384 363 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -11 -24 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -48 321 ] concat
%I 12
248 347
248 355
256 363
264 363
296 363
304 363
312 355
312 347
304 339
296 339
264 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 677 ] concat
%I
[
(State)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 347 384 347 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 347 376 307 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -41 273 ] concat
%I 12
248 339
240 347
240 355
248 363
256 363
384 363
392 363
400 355
400 347
392 339
384 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 208 629 ] concat
%I
[
(How the world evolves)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 299 376 299 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
328 299 384 339 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58.5 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -40.5 273 ] concat
%I 12
256 291
248 299
248 307
256 315
264 315
376 315
384 315
392 307
392 299
384 291
376 291
264 291
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 581 ] concat
%I
[
(What my actions do)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 190.256 326.43 ] concat
%I
432 684 432 636 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 199.914 326.43 ] concat
%I
412 273 412 219 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 200.88 326.43 ] concat
%I
410 467 410 341 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.241442 0 0 0.241442 291.179 536.485 ] concat
%I
446 264 446 202 Line
%I 4
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -57 124 ] concat
%I 12
248 347
248 355
256 363
264 363
296 363
304 363
312 355
312 347
304 339
296 339
264 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 204.5 480 ] concat
%I
[
(Goals)
] Text
End

End %I eop

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 162.732 368.441 ] concat
%I
191 219 372 219 Line
%I 2
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 12 6034 a Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 15 15
15 15 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 397 118 a Fc(A)65 b(Complete)h(Utility-based)e
(A)-5 b(gents)130 4081 y @beginspecial 81 @llx 311 @lly
469 @urx 558 @ury 4252 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.12.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
152 403
152 411
168 427
176 427
504 427
512 427
528 411
528 403
528 147
528 139
512 123
504 123
176 123
168 123
152 139
152 147
16 CBSpl
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I 16
552 403
552 411
568 427
576 427
608 427
616 427
632 411
632 403
632 147
632 139
616 123
608 123
576 123
568 123
552 139
552 147
16 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1.44 0 0 1.44 127.42 430.08 ] concat
%I
[
(Agent)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ -6.29444e-08 -1.44 1.44 -6.29444e-08 554.08 605.92 ] concat
%I
[
(Environment)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 368 669 ] concat
%I
[
(Sensors)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 366.5 421 ] concat
%I
[
(Effectors)
] Text
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 285 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -1 0 0 1 1000 37 ] concat
%I
568 379 480 379 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -32 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.10852 0 0 1.03655 -107.78 192.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 581 ] concat
%I
[
(What it will be like)
(  if I do action A)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -23.5 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.84753 0 0 1.03655 -49.4666 240.732 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 376 629 ] concat
%I
[
(What the world)
(is like now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -44 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.2353 0 0 1.00606 -128.237 155.799 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 533 ] concat
%I
[
(How happy I will be)
(   in such a state)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -29.5 -6 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.71673 0 0 1.00606 -9.98224 115.799 ] concat
%I
224 347 288 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 493 ] concat
%I
[
(What action I)
(should do now)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 379 384 363 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -11 -24 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -48 321 ] concat
%I 12
248 347
248 355
256 363
264 363
296 363
304 363
312 355
312 347
304 339
296 339
264 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 677 ] concat
%I
[
(State)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 347 384 347 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 347 376 307 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -41 273 ] concat
%I 12
248 339
240 347
240 355
248 363
256 363
384 363
392 363
400 355
400 347
392 339
384 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 208 629 ] concat
%I
[
(How the world evolves)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
336 299 376 299 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
328 299 384 339 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -58.5 -7 ] concat

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -40.5 273 ] concat
%I 12
256 291
248 299
248 307
256 315
264 315
376 315
384 315
392 307
392 299
384 291
376 291
264 291
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 216 581 ] concat
%I
[
(What my actions do)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -48 269 ] concat
%I
296 251 368 251 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -59 170 ] concat
%I 12
248 347
248 355
256 363
264 363
296 363
304 363
312 355
312 347
304 339
296 339
264 339
256 339
12 CBSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 204.5 526 ] concat
%I
[
(Utility)
] Text
End

End %I eop

End %I eop

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 190.256 326.43 ] concat
%I
432 684 432 636 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 199.914 326.43 ] concat
%I
412 273 412 219 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.241442 0 0 0.241442 291.179 536.485 ] concat
%I
446 264 446 202 Line
%I 4
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 155.489 367.958 ] concat
%I
504 381 504 349 Line
%I 2
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.482884 0 0 0.482884 155.489 367.958 ] concat
%I
504 283 504 255 Line
%I 2
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 12 6034 a Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 16 16
16 16 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 692 118 a Fc(Pr)l(oper)-11 b(ties)64
b(of)i(Envir)l(onment)135 2471 y Fb(\017)49 b Ff(Accessible)44
b(vs.)60 b(inaccessible)135 2737 y Fb(\017)49 b Ff(Deterministic)43
b(vs.)60 b(nondeterministic)135 3003 y Fb(\017)49 b Ff(Episo)t(dic)d
(vs.)60 b(nonepiso)t(dic)135 3268 y Fb(\017)49 b Ff(Static)44
b(vs.)60 b(dynamic)135 3534 y Fb(\017)49 b Ff(Discrete)44
b(vs.)60 b(continuous)12 6034 y Fd(COMP221)2798 b(In)m(tro)s(duction)p
eop
%%Page: 17 17
17 17 bop -92 -235 a Fj(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 714 118 a Fc(Examples)64 b(of)i(Envir)l
(onments)2823 5433 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 2823 5433 a @beginspecial 148 @llx
512 @lly 533 @urx 655 @ury 5952 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig02.13.ps
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ environment-type-table.ps environment-type-table
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1243
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
TeXDict begin 40258437 52099154 1000 300 300
(environment-type-table.dvi) @start /Fa 81[23 52[21 21
30 21 21 12 16 14 1[21 21 21 32 12 21 1[12 21 21 1[18
21 18 21 18 7[30 4[25 23 28 1[23 1[30 37 3[14 3[25 30
28 28 30 19[14 45[{}37 41.666668 /Times-Roman rf end
TeXDict begin

1 0 bop 322 276 1593 2 v 321 341 2 65 v 344 321 a Fa(En)n(vironment)p
814 341 V 304 w(Accessible)62 b(Deterministic)f(Episodic)g(Static)g
(Discrete)p 1915 341 V 322 342 1593 2 v 321 405 2 63
v 344 390 a(Chess)11 b(with)e(a)i(clock)p 814 405 V 267
w(Y)l(es)204 b(Y)l(es)192 b(No)114 b(Semi)105 b(Y)l(es)p
1915 405 V 321 455 2 50 v 344 440 a(Chess)11 b(without)d(a)j(clock)p
814 455 V 214 w(Y)l(es)204 b(Y)l(es)192 b(No)126 b(Y)l(es)118
b(Y)l(es)p 1915 455 V 321 505 V 344 490 a(Poker)p 814
505 V 487 w(No)214 b(No)196 b(No)126 b(Y)l(es)118 b(Y)l(es)p
1915 505 V 321 555 V 344 540 a(Backgammon)p 814 555 V
350 w(Y)l(es)209 b(No)196 b(No)126 b(Y)l(es)118 b(Y)l(es)p
1915 555 V 321 604 V 344 589 a(T)m(axi)10 b(dri)o(ving)p
814 604 V 380 w(No)214 b(No)196 b(No)131 b(No)c(No)p
1915 604 V 321 654 V 344 639 a(Medical)10 b(diagnosis)g(system)p
814 654 V 155 w(No)214 b(No)196 b(No)131 b(No)c(No)p
1915 654 V 321 704 V 344 689 a(Image-analysis)11 b(system)p
814 704 V 203 w(Y)l(es)204 b(Y)l(es)188 b(Y)l(es)109
b(Semi)h(No)p 1915 704 V 321 754 V 344 739 a(P)o(art-picking)9
b(robot)p 814 754 V 280 w(No)214 b(No)192 b(Y)l(es)126
b(No)h(No)p 1915 754 V 321 804 V 344 789 a(Re\256nery)10
b(controller)p 814 804 V 268 w(No)214 b(No)196 b(No)131
b(No)c(No)p 1915 804 V 321 861 2 58 v 344 839 a(Interacti)o(v)o(e)10
b(English)g(tutor)p 814 861 V 180 w(No)214 b(No)196 b(No)131
b(No)122 b(Y)l(es)p 1915 861 V 322 863 1593 2 v eop
end
userdict /end-hook known{end-hook}if
%%EndDocument
 @endspecial 7784 5433 a
 currentpoint grestore moveto
 7784 5433 a 12 6034 a Fd(COMP221)2798
b(In)m(tro)s(duction)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
