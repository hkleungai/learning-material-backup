%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: 6 0
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProcSet: pstops-clip 1 0
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/lcvx{dup load dup type dup/operatortype eq{pop exch pop}
 {/arraytype eq{dup xcheck{exch pop aload pop}
 {pop cvx}ifelse}{pop cvx}ifelse}ifelse}bind def
/pstopsmatrix matrix currentmatrix def
/pstopsxform matrix def
/defaultmatrix{pstopsmatrix exch pstopsxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/pathtoproc{[{currentpoint}stopped{$error/newerror false
 put{newpath}}{/newpath cvx 3 1 roll/moveto cvx 4 array
 astore cvx}ifelse]{[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}def
/initclip[/matrix lcvx/currentmatrix lcvx/pstopsmatrix cvx/setmatrix lcvx
 /pathtoproc lcvx/initclip lcvx/newpath lcvx
 0 0 /moveto lcvx 595.000000 0/rlineto lcvx
 0 842.000000/rlineto lcvx -595.000000 0/rlineto lcvx
 /closepath lcvx/clip lcvx
 /newpath lcvx/exec lcvx/setmatrix lcvx]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
%%EndProcSet
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 7 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /NewCenturySchlbk-Roman FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /NewCenturySchlbk-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
/pstopsxform pstopsmatrix matrix currentmatrix matrix invertmatrix matrix concatmatrix matrix invertmatrix store
%%EndSetup
%%Page: pstops 1
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 1) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Semantic Netw) 198.12 728.95 T
(orks) 351.84 728.95 T
2 18 Q
(A representation is a set of) 63.65 681.95 T
3 F
(syntactic) 292.34 681.95 T
2 F
( and) 377.68 681.95 T
3 F
(semantic) 419.02 681.95 T
2 F
(conventions that make it possible to describe things) 63.65 659.95 T
(.) 493.6 659.95 T
(The) 63.65 615.95 T
3 F
(syntax) 100.66 615.95 T
2 F
( of a representation speci\336es the symbols) 162.65 615.95 T
(that ma) 63.65 593.95 T
(y be used and the w) 129.49 593.95 T
(a) 293.87 593.95 T
(ys those symbols ma) 303.7 593.95 T
(y be) 473.89 593.95 T
(arranged.) 63.65 571.95 T
(The) 63.65 527.95 T
3 F
(semantics) 100.66 527.95 T
2 F
( of a representation speci\336es how mean-) 193.99 527.95 T
(ing is embodied in the symbols and the symbol arrange-) 63.65 505.95 T
(ments allowed by the syntax.) 63.65 483.95 T
(The syntax of a semantic net is simple:) 63.65 439.95 T
3 F
(objects) 99.65 395.95 T
2 F
( are denoted by) 165.65 395.95 T
3 F
(nodes) 298.01 395.95 T
(relations) 99.65 373.95 T
2 F
( are denoted by) 183.31 373.95 T
3 F
(links) 315.67 373.95 T
2 F
-0.84 (A node-and-link net is not necessarily a semantic net. T) 63.65 329.95 P
-0.84 (o) 518.48 329.95 P
(be a semantic net, there must be semantics) 63.65 307.95 T
(.) 422.93 307.95 T
63.65 96.95 531.65 276.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 96.95 531.65 276.95 R
7 X
0 0 0 1 0 0 0 K
V
81.65 222.95 153.65 258.95 R
V
1 H
2 Z
0 X
N
81.65 132.95 153.65 168.95 R
7 X
V
0 X
N
207.65 132.95 279.65 168.95 R
7 X
V
0 X
N
2 18 Q
(G32) 99.65 235.64 T
(G40) 99.65 145.64 T
(G15) 225.65 145.64 T
117.65 211.92 115 211.92 117.65 221.14 120.29 211.92 4 Y
0 Z
N
117.65 211.92 115 211.92 117.65 221.14 120.29 211.92 4 Y
V
117.65 168.95 117.65 211.42 2 L
2 Z
N
196.61 150.95 196.61 153.6 205.83 150.95 196.61 148.31 4 Y
0 Z
N
196.61 150.95 196.61 153.6 205.83 150.95 196.61 148.31 4 Y
V
153.65 150.95 196.11 150.95 2 L
2 Z
N
(G7) 126.65 195.95 T
(G8) 171.65 159.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
324.65 222.95 396.65 258.95 R
7 X
V
0 X
N
324.65 132.95 396.65 168.95 R
7 X
V
0 X
N
450.65 132.95 522.65 168.95 R
7 X
V
0 X
N
(Bric) 333.65 235.64 T
(k) 368.17 235.64 T
(Bric) 333.65 145.64 T
(k2) 368.17 145.64 T
(Red) 468.65 145.64 T
360.65 211.92 358 211.92 360.65 221.14 363.29 211.92 4 Y
0 Z
N
360.65 211.92 358 211.92 360.65 221.14 363.29 211.92 4 Y
V
360.65 168.95 360.65 211.42 2 L
2 Z
N
439.61 150.95 439.61 153.6 448.83 150.95 439.61 148.31 4 Y
0 Z
N
439.61 150.95 439.61 153.6 448.83 150.95 439.61 148.31 4 Y
V
396.65 150.95 439.11 150.95 2 L
2 Z
N
(ISA) 369.65 195.95 T
(Color) 402.05 155.99 T
(   \050a\051                                             \050b\051) 144.65 105.95 T
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 2) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Semantic Netw) 198.12 728.95 T
(orks) 351.84 728.95 T
2 18 Q
(Semantic networks make explicit entities and relation-) 63.65 659.95 T
(ships) 63.65 638.95 T
(.) 106.87 638.95 T
(Entities are the basic objects in the system.) 108.65 596.95 T
(Relationships indicate how pairs of entities relate) 108.65 554.95 T
(.) 521.71 554.95 T
(Relationships are usually binary) 135.65 512.95 T
(Relationships ha) 135.65 491.95 T
(ve an associated semantics) 275.49 491.95 T
(Example:  "All robins are birds) 63.65 449.95 T
(.") 319.57 449.95 T
(isa links indicate c) 108.65 323.95 T
(lass membership) 263.56 323.95 T
(.) 403.92 323.95 T
(bird is a member of the c) 135.65 281.95 T
(lass robin.) 341.55 281.95 T
(Note that relationships in a semantic network are) 108.65 239.95 T
(directional.) 108.65 218.95 T
117.65 375.95 441.65 429.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
117.65 375.95 441.65 429.95 R
7 X
0 0 0 1 0 0 0 K
V
153.65 384.95 243.65 420.95 R
V
1 H
2 Z
0 X
N
333.65 384.95 423.65 420.95 R
7 X
V
0 X
N
322.61 402.95 322.61 405.6 331.83 402.95 322.61 400.31 4 Y
0 Z
N
322.61 402.95 322.61 405.6 331.83 402.95 322.61 400.31 4 Y
V
243.65 402.95 322.11 402.95 2 L
2 Z
N
2 18 Q
(robin) 171.65 393.95 T
(bird) 360.65 393.95 T
(isa) 270.65 411.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
pstopssaved restore
%%Page: pstops 2
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 3) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Semantic Netw) 198.12 728.95 T
(orks) 351.84 728.95 T
2 18 Q
(Networks implicity represent relationships between) 63.65 680.95 T
(multiple entities) 63.65 659.95 T
(.) 201.22 659.95 T
(By de\336ning a c) 99.65 554.95 T
(hain rule for isa, it is possible to) 222.86 554.95 T
(relate Clyde and bird.) 99.65 533.95 T
(Can determine "Clyde isa bird" without the) 117.65 491.95 T
(need to explicitly represent relationship) 117.65 470.95 T
(.) 449.33 470.95 T
6.36 (Chaining of isa links is an example of inheritance) 63.65 428.95 P
6.36 (.) 526.64 428.95 P
3.5 (Inheritance increases the power of representations by) 63.65 407.95 P
(reducing the need to explicitly describe relationships) 63.65 386.95 T
(.) 501.88 386.95 T
(isa links can be used to create complex taxonomic struc-) 63.65 344.95 T
(tures) 63.65 323.95 T
(. \050T) 106.52 323.95 T
(axonomies are c) 133.54 323.95 T
(lassi\336cation structures) 266.09 323.95 T
(.\051) 455.98 323.95 T
(Also necessary to describe properties of particulare enti-) 63.65 281.95 T
(ties in a taxonomy) 63.65 260.95 T
(.) 214.43 260.95 T
81.65 591.95 504.65 645.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 591.95 504.65 645.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 600.95 342.65 636.95 R
V
1 H
2 Z
0 X
N
405.65 600.95 495.65 636.95 R
7 X
V
0 X
N
394.61 618.95 394.61 621.6 403.83 618.95 394.61 616.31 4 Y
0 Z
N
394.61 618.95 394.61 621.6 403.83 618.95 394.61 616.31 4 Y
V
342.65 618.95 394.11 618.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 613.64 T
(bird) 434.65 614.69 T
99.65 600.95 189.65 636.95 R
7 X
V
0 X
N
241.61 618.95 241.61 621.6 250.83 618.95 241.61 616.31 4 Y
0 Z
N
241.61 618.95 241.61 621.6 250.83 618.95 241.61 616.31 4 Y
V
189.65 618.95 241.11 618.95 2 L
2 Z
N
(Clyde) 117.65 613.64 T
(isa) 210.64 622.64 T
(isa) 363.64 623.69 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
81.65 96.95 531.65 249.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 96.95 531.65 249.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 195.95 342.65 231.95 R
V
1 H
2 Z
0 X
N
405.65 195.95 495.65 231.95 R
7 X
V
0 X
N
394.61 213.95 394.61 216.6 403.83 213.95 394.61 211.31 4 Y
0 Z
N
394.61 213.95 394.61 216.6 403.83 213.95 394.61 211.31 4 Y
V
342.65 213.95 394.11 213.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 208.64 T
(bird) 434.65 209.69 T
99.65 195.95 189.65 231.95 R
7 X
V
0 X
N
241.61 213.95 241.61 216.6 250.83 213.95 241.61 211.31 4 Y
0 Z
N
241.61 213.95 241.61 216.6 250.83 213.95 241.61 211.31 4 Y
V
189.65 213.95 241.11 213.95 2 L
2 Z
N
(Clyde) 117.65 208.64 T
(isa) 210.64 217.64 T
(isa) 363.64 218.69 T
405.65 105.95 495.65 141.95 R
7 X
V
0 X
N
450.65 152.99 453.29 152.99 450.65 143.77 448 152.99 4 Y
0 Z
N
450.65 152.99 453.29 152.99 450.65 143.77 448 152.99 4 Y
V
450.65 195.95 450.65 153.49 2 L
2 Z
N
(wings) 428.98 119.69 T
(Has-part) 369.65 163.64 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 4) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Semantic Netw) 198.12 728.95 T
(orks) 351.84 728.95 T
2 18 Q
(Inheritance makes it possible to infer properties about) 63.65 680.95 T
(entities) 63.65 659.95 T
(.) 125.87 659.95 T
3 F
(E.g.) 99.65 617.95 T
2 F
( "Clyde has-part wing) 139.48 617.95 T
(.") 319.72 617.95 T
(Inheritance makes representations compact.) 63.65 575.95 T
(Inheritance is not alw) 63.65 386.95 T
(a) 246.01 386.95 T
(ys desirable) 255.83 386.95 T
(.) 354.53 386.95 T
(The c) 99.65 197.95 T
(lass robins is studied by naturalist) 144.52 197.95 T
(The entity Clyde ma) 99.65 155.95 T
(y or ma) 269.5 155.95 T
(y not be studied by) 331.99 155.95 T
(naturalists) 99.65 134.95 T
(.) 191.21 134.95 T
81.65 411.95 531.65 564.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 411.95 531.65 564.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 510.95 342.65 546.95 R
V
1 H
2 Z
0 X
N
405.65 510.95 495.65 546.95 R
7 X
V
0 X
N
394.61 528.95 394.61 531.6 403.83 528.95 394.61 526.31 4 Y
0 Z
N
394.61 528.95 394.61 531.6 403.83 528.95 394.61 526.31 4 Y
V
342.65 528.95 394.11 528.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 523.64 T
(bird) 434.65 524.69 T
99.65 510.95 189.65 546.95 R
7 X
V
0 X
N
241.61 528.95 241.61 531.6 250.83 528.95 241.61 526.31 4 Y
0 Z
N
241.61 528.95 241.61 531.6 250.83 528.95 241.61 526.31 4 Y
V
189.65 528.95 241.11 528.95 2 L
2 Z
N
(Clyde) 117.65 523.64 T
(isa) 210.64 532.64 T
(isa) 363.64 533.69 T
405.65 420.95 495.65 456.95 R
7 X
V
0 X
N
450.65 467.99 453.29 467.99 450.65 458.77 448 467.99 4 Y
0 Z
N
450.65 467.99 453.29 467.99 450.65 458.77 448 467.99 4 Y
V
450.65 510.95 450.65 468.49 2 L
2 Z
N
(wings) 428.98 434.69 T
(Has-part) 369.65 478.64 T
252.65 420.95 342.65 456.95 R
7 X
V
0 X
N
297.65 499.92 295 499.92 297.65 509.14 300.29 499.92 4 Y
0 Z
N
297.65 499.92 295 499.92 297.65 509.14 300.29 499.92 4 Y
V
297.65 456.95 297.65 499.42 2 L
2 Z
N
(Liz) 279.65 429.95 T
(isa) 264.64 479.69 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
54.65 222.95 531.65 375.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54.65 222.95 531.65 375.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 330.95 342.65 366.95 R
V
1 H
2 Z
0 X
N
405.65 330.95 495.65 366.95 R
7 X
V
0 X
N
394.61 348.95 394.61 351.6 403.83 348.95 394.61 346.31 4 Y
0 Z
N
394.61 348.95 394.61 351.6 403.83 348.95 394.61 346.31 4 Y
V
342.65 348.95 394.11 348.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 343.64 T
(bird) 434.65 344.69 T
99.65 330.95 189.65 366.95 R
7 X
V
0 X
N
241.61 348.95 241.61 351.6 250.83 348.95 241.61 346.31 4 Y
0 Z
N
241.61 348.95 241.61 351.6 250.83 348.95 241.61 346.31 4 Y
V
189.65 348.95 241.11 348.95 2 L
2 Z
N
(Clyde) 117.65 343.64 T
(isa) 210.64 352.64 T
(isa) 363.64 353.69 T
405.65 240.95 495.65 276.95 R
7 X
V
0 X
N
450.65 287.99 453.29 287.99 450.65 278.77 448 287.99 4 Y
0 Z
N
450.65 287.99 453.29 287.99 450.65 278.77 448 287.99 4 Y
V
450.65 330.95 450.65 288.49 2 L
2 Z
N
(wings) 428.98 254.69 T
(Has-part) 369.65 298.64 T
261.65 240.95 378.65 276.95 R
7 X
V
0 X
N
(endangered) 272.32 262.64 T
(isa) 264.64 299.69 T
297.65 287.99 300.29 287.99 297.65 278.77 295 287.99 4 Y
0 Z
N
297.65 287.99 300.29 287.99 297.65 278.77 295 287.99 4 Y
V
297.65 330.95 297.65 288.49 2 L
2 Z
N
( species) 269.98 245.69 T
63.65 240.95 162.65 276.95 R
7 X
V
0 X
N
(naturalists) 70.63 254.69 T
173.68 258.95 173.68 256.31 164.46 258.95 173.68 261.6 4 Y
0 Z
N
173.68 258.95 173.68 256.31 164.46 258.95 173.68 261.6 4 Y
V
174.18 258.95 261.65 258.95 2 L
2 Z
N
(studied-by) 171.65 271.64 T
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
pstopssaved restore
%%Page: pstops 3
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 5) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Semantic Netw) 198.12 728.95 T
(orks) 351.84 728.95 T
2 18 Q
(Relationships involving complex predicates are dif\336cult) 63.65 680.95 T
(to represent in sematic networks) 63.65 659.95 T
(.) 336.55 659.95 T
3 F
(E.g.) 99.65 617.95 T
2 F
( "Clyde owns a nest.") 139.48 617.95 T
(Muc) 63.65 428.95 T
(h harder to represent "Clyde owns a nest from) 99.5 428.95 T
(spring until fall.") 63.65 407.95 T
81.65 447.95 531.65 600.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 447.95 531.65 600.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 555.95 342.65 591.95 R
V
1 H
2 Z
0 X
N
405.65 555.95 495.65 591.95 R
7 X
V
0 X
N
394.61 573.95 394.61 576.6 403.83 573.95 394.61 571.31 4 Y
0 Z
N
394.61 573.95 394.61 576.6 403.83 573.95 394.61 571.31 4 Y
V
342.65 573.95 394.11 573.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 568.64 T
(bird) 434.65 569.69 T
99.65 555.95 189.65 591.95 R
7 X
V
0 X
N
241.61 573.95 241.61 576.6 250.83 573.95 241.61 571.31 4 Y
0 Z
N
241.61 573.95 241.61 576.6 250.83 573.95 241.61 571.31 4 Y
V
189.65 573.95 241.11 573.95 2 L
2 Z
N
(Clyde) 117.65 568.64 T
(isa) 210.64 577.64 T
(isa) 363.64 578.69 T
405.65 465.95 495.65 501.95 R
7 X
V
0 X
N
(nest) 432.65 479.69 T
252.65 465.95 342.65 501.95 R
7 X
V
0 X
N
(nest-1) 270.65 478.64 T
(isa) 363.64 488.69 T
394.61 483.95 394.61 486.6 403.83 483.95 394.61 481.31 4 Y
0 Z
N
394.61 483.95 394.61 486.6 403.83 483.95 394.61 481.31 4 Y
V
342.65 483.95 394.11 483.95 2 L
2 Z
N
241.61 483.95 241.61 486.6 250.84 483.95 241.61 481.31 4 Y
0 Z
N
241.61 483.95 241.61 486.6 250.84 483.95 241.61 481.31 4 Y
V
144.65 555.95 144.65 483.95 241.11 483.95 3 L
2 Z
N
(owns) 171.65 492.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
45.65 96.95 549.65 393.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
45.65 96.95 549.65 393.95 R
7 X
0 0 0 1 0 0 0 K
V
288.65 348.95 378.65 384.95 R
V
1 H
2 Z
0 X
N
441.65 348.95 531.65 384.95 R
7 X
V
0 X
N
430.61 366.95 430.61 369.6 439.83 366.95 430.61 364.31 4 Y
0 Z
N
430.61 366.95 430.61 369.6 439.83 366.95 430.61 364.31 4 Y
V
378.65 366.95 430.11 366.95 2 L
2 Z
N
2 18 Q
(robin) 316.98 361.64 T
(bird) 470.65 362.69 T
135.65 348.95 225.65 384.95 R
7 X
V
0 X
N
277.61 366.95 277.61 369.6 286.83 366.95 277.61 364.31 4 Y
0 Z
N
277.61 366.95 277.61 369.6 286.83 366.95 277.61 364.31 4 Y
V
225.65 366.95 277.11 366.95 2 L
2 Z
N
(Clyde) 153.65 361.64 T
(isa) 246.64 370.64 T
(isa) 399.64 371.69 T
441.65 258.95 531.65 294.95 R
7 X
V
0 X
N
(nest) 468.65 272.69 T
288.65 258.95 378.65 294.95 R
7 X
V
0 X
N
(nest-1) 306.65 271.64 T
(isa) 399.64 281.69 T
430.61 276.95 430.61 279.6 439.83 276.95 430.61 274.31 4 Y
0 Z
N
430.61 276.95 430.61 279.6 439.83 276.95 430.61 274.31 4 Y
V
378.65 276.95 430.11 276.95 2 L
2 Z
N
135.65 258.95 225.65 294.95 R
7 X
V
0 X
N
288.65 177.95 378.65 213.95 R
7 X
V
0 X
N
288.65 105.95 378.65 141.95 R
7 X
V
0 X
N
441.65 177.95 531.65 213.95 R
7 X
V
0 X
N
(ownee) 234.65 285.95 T
180.65 337.92 178 337.92 180.65 347.14 183.29 337.92 4 Y
0 Z
N
180.65 337.92 178 337.92 180.65 347.14 183.29 337.92 4 Y
V
180.65 294.95 180.65 337.42 2 L
2 Z
N
277.61 276.95 277.61 279.6 286.83 276.95 277.61 274.31 4 Y
0 Z
N
277.61 276.95 277.61 279.6 286.83 276.95 277.61 274.31 4 Y
V
225.65 276.95 277.11 276.95 2 L
2 Z
N
277.61 195.95 277.61 198.6 286.83 195.95 277.61 193.31 4 Y
0 Z
N
277.61 195.95 277.61 198.6 286.83 195.95 277.61 193.31 4 Y
V
198.65 258.95 198.65 195.95 277.11 195.95 3 L
2 Z
N
277.61 123.95 277.61 126.6 286.83 123.95 277.61 121.31 4 Y
0 Z
N
277.61 123.95 277.61 126.6 286.83 123.95 277.61 121.31 4 Y
V
171.65 258.95 171.65 123.95 277.11 123.95 3 L
2 Z
N
430.61 195.95 430.61 198.6 439.83 195.95 430.61 193.31 4 Y
0 Z
N
430.61 195.95 430.61 198.6 439.83 195.95 430.61 193.31 4 Y
V
378.65 195.95 430.11 195.95 2 L
2 Z
N
486.65 166.92 484 166.92 486.65 176.14 489.29 166.92 4 Y
0 Z
N
486.65 166.92 484 166.92 486.65 176.14 489.29 166.92 4 Y
V
378.65 123.95 486.65 123.95 486.65 166.42 3 L
2 Z
N
(own-1) 153.65 271.64 T
(spring) 306.65 186.95 T
(fall) 315.31 118.64 T
(time) 468.65 186.95 T
(start-time) 198.65 208.64 T
(end-time) 189.65 132.95 T
(owner) 189.65 321.95 T
(isa) 399.64 199.64 T
(isa) 399.64 128.69 T
54.65 177.95 144.65 213.95 R
7 X
V
0 X
N
54.65 105.95 144.65 141.95 R
7 X
V
0 X
N
99.65 224.99 102.29 224.99 99.65 215.77 97 224.99 4 Y
0 Z
N
99.65 224.99 102.29 224.99 99.65 215.77 97 224.99 4 Y
V
135.65 276.95 99.65 276.95 99.65 225.49 3 L
2 Z
N
99.65 152.99 102.29 152.99 99.65 143.77 97 152.99 4 Y
0 Z
N
99.65 152.99 102.29 152.99 99.65 143.77 97 152.99 4 Y
V
99.65 177.95 99.65 153.49 2 L
2 Z
N
(isa) 108.65 235.64 T
(isa) 108.65 154.64 T
(ownership) 54.65 190.64 T
(situation) 63.65 114.95 T
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 6) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Reasoning with Semantic Netw) 116.11 728.95 T
(orks) 433.85 728.95 T
2 18 Q
(What does Clyde own?) 63.65 488.95 T
81.65 519.95 522.65 717.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 519.95 522.65 717.95 R
7 X
0 0 0 1 0 0 0 K
V
252.65 672.95 342.65 708.95 R
V
1 H
2 Z
0 X
N
405.65 672.95 495.65 708.95 R
7 X
V
0 X
N
394.61 690.95 394.61 693.6 403.83 690.95 394.61 688.31 4 Y
0 Z
N
394.61 690.95 394.61 693.6 403.83 690.95 394.61 688.31 4 Y
V
342.65 690.95 394.11 690.95 2 L
2 Z
N
2 18 Q
(robin) 280.98 685.64 T
(bird) 434.65 686.69 T
99.65 672.95 189.65 708.95 R
7 X
V
0 X
N
241.61 690.95 241.61 693.6 250.83 690.95 241.61 688.31 4 Y
0 Z
N
241.61 690.95 241.61 693.6 250.83 690.95 241.61 688.31 4 Y
V
189.65 690.95 241.11 690.95 2 L
2 Z
N
(Clyde) 117.65 685.64 T
(isa) 210.64 694.64 T
(isa) 363.64 695.69 T
405.65 600.95 495.65 636.95 R
7 X
V
0 X
N
(nest) 432.65 614.69 T
252.65 600.95 342.65 636.95 R
7 X
V
0 X
N
(nest-1) 270.65 614.69 T
(isa) 363.64 623.69 T
394.61 618.95 394.61 621.6 403.83 618.95 394.61 616.31 4 Y
0 Z
N
394.61 618.95 394.61 621.6 403.83 618.95 394.61 616.31 4 Y
V
342.65 618.95 394.11 618.95 2 L
2 Z
N
99.65 600.95 189.65 636.95 R
7 X
V
0 X
N
99.65 528.95 189.65 564.95 R
7 X
V
0 X
N
252.65 528.95 342.65 564.95 R
7 X
V
0 X
N
(ownership) 99.65 542.69 T
(situation) 261.65 542.69 T
(own-1) 117.65 614.69 T
(owner) 147.65 650.69 T
144.65 661.92 142 661.92 144.65 671.14 147.29 661.92 4 Y
0 Z
N
144.65 661.92 142 661.92 144.65 671.14 147.29 661.92 4 Y
V
144.65 636.95 144.65 661.42 2 L
2 Z
N
144.65 575.99 147.29 575.99 144.65 566.77 142 575.99 4 Y
0 Z
N
144.65 575.99 147.29 575.99 144.65 566.77 142 575.99 4 Y
V
144.65 600.95 144.65 576.49 2 L
2 Z
N
241.61 618.95 241.61 621.6 250.83 618.95 241.61 616.31 4 Y
0 Z
N
241.61 618.95 241.61 621.6 250.83 618.95 241.61 616.31 4 Y
V
189.65 618.95 241.11 618.95 2 L
2 Z
N
241.61 546.95 241.61 549.6 250.83 546.95 241.61 544.31 4 Y
0 Z
N
241.61 546.95 241.61 549.6 250.83 546.95 241.61 544.31 4 Y
V
189.65 546.95 241.11 546.95 2 L
2 Z
N
(ownee) 198.65 623.69 T
(isa) 156.64 578.69 T
(isa) 210.64 551.69 T
-8.35 24.95 603.65 816.95 C
81.65 303.95 522.65 483.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 303.95 522.65 483.95 R
7 X
0 0 0 1 0 0 0 K
V
99.65 438.95 189.65 474.95 R
V
1 H
2 Z
0 X
N
2 18 Q
(Clyde) 117.65 451.64 T
261.65 375.95 351.65 411.95 R
7 X
V
0 X
N
(    ?) 282.31 389.69 T
99.65 375.95 189.65 411.95 R
7 X
V
0 X
N
99.65 312.95 189.65 348.95 R
7 X
V
0 X
N
(ownership) 103.32 326.69 T
(own-?) 117.65 389.69 T
(owner) 147.65 416.69 T
144.65 427.92 142 427.92 144.65 437.14 147.29 427.92 4 Y
0 Z
N
144.65 427.92 142 427.92 144.65 437.14 147.29 427.92 4 Y
V
144.65 411.95 144.65 427.42 2 L
2 Z
N
144.65 359.99 147.29 359.99 144.65 350.77 142 359.99 4 Y
0 Z
N
144.65 359.99 147.29 359.99 144.65 350.77 142 359.99 4 Y
V
144.65 375.95 144.65 360.49 2 L
2 Z
N
250.61 393.95 250.61 396.6 259.83 393.95 250.61 391.31 4 Y
0 Z
N
250.61 393.95 250.61 396.6 259.83 393.95 250.61 391.31 4 Y
V
189.65 393.95 250.11 393.95 2 L
2 Z
N
(ownee) 200.65 398.69 T
(isa) 156.64 353.69 T
-8.35 24.95 603.65 816.95 C
81.65 96.95 531.65 276.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81.65 96.95 531.65 276.95 R
7 X
0 0 0 1 0 0 0 K
V
99.65 231.95 189.65 267.95 R
V
1 H
2 Z
0 X
N
2 18 Q
(bird-?) 117.65 244.64 T
261.65 168.95 351.65 204.95 R
7 X
V
0 X
N
(nest-?) 282.31 182.69 T
99.65 168.95 189.65 204.95 R
7 X
V
0 X
N
99.65 105.95 189.65 141.95 R
7 X
V
0 X
N
(ownership) 103.32 119.69 T
(own-?) 117.65 182.69 T
(owner) 147.65 209.69 T
144.65 220.92 142 220.92 144.65 230.14 147.29 220.92 4 Y
0 Z
N
144.65 220.92 142 220.92 144.65 230.14 147.29 220.92 4 Y
V
144.65 204.95 144.65 220.42 2 L
2 Z
N
144.65 152.99 147.29 152.99 144.65 143.77 142 152.99 4 Y
0 Z
N
144.65 152.99 147.29 152.99 144.65 143.77 142 152.99 4 Y
V
144.65 168.95 144.65 153.49 2 L
2 Z
N
250.61 186.95 250.61 189.6 259.83 186.95 250.61 184.31 4 Y
0 Z
N
250.61 186.95 250.61 189.6 259.83 186.95 250.61 184.31 4 Y
V
189.65 186.95 250.11 186.95 2 L
2 Z
N
(ownee) 200.65 191.69 T
(isa) 156.64 146.69 T
261.65 231.95 351.65 267.95 R
7 X
V
0 X
N
405.65 168.95 495.65 204.95 R
7 X
V
0 X
N
(nest) 433.31 181.64 T
(bird) 288.65 244.64 T
250.61 249.95 250.61 252.6 259.83 249.95 250.61 247.31 4 Y
0 Z
N
250.61 249.95 250.61 252.6 259.83 249.95 250.61 247.31 4 Y
V
189.65 249.95 250.11 249.95 2 L
2 Z
N
394.61 186.95 394.61 189.6 403.83 186.95 394.61 184.31 4 Y
0 Z
N
394.61 186.95 394.61 189.6 403.83 186.95 394.61 184.31 4 Y
V
351.65 186.95 394.11 186.95 2 L
2 Z
N
(isa) 210.64 253.64 T
(isa) 363.64 190.64 T
-8.35 24.95 603.65 816.95 C
2 18 Q
0 X
0 0 0 1 0 0 0 K
(Is there a bird who owns a nest?) 63.65 285.95 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
pstopssaved restore
%%Page: pstops 4
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 7) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Frame-based r) 153.11 728.95 T
(epr) 303.97 728.95 T
(esentation) 338.2 728.95 T
2 18 Q
-0.77 (F) 63.65 680.95 P
-0.77 (rames extend the basic concepts of semantics networks) 75.47 680.95 P
(by providing a more structured description of entities) 63.65 658.95 T
(.) 506.86 658.95 T
(F) 99.65 614.95 T
(rames are nodes) 111.47 614.95 T
(F) 99.65 592.95 T
(rame-subframe relationships are links) 111.47 592.95 T
(F) 63.65 548.95 T
(rames are used to represent information about stereo-) 75.47 548.95 T
(typical situation.) 63.65 526.95 T
(A frame typically represents information about a) 99.65 482.95 T
(c) 99.65 460.95 T
(lass of entities) 107.51 460.95 T
(.) 227.09 460.95 T
(F) 99.65 416.95 T
(rames ha) 111.47 416.95 T
(ve variables that can take on a range of) 188.64 416.95 T
(values) 99.65 394.95 T
(.) 152.87 394.95 T
-0.51 (The instantiation of a frame represents a particular) 99.65 350.95 P
(instance of the c) 99.65 328.95 T
(lass of entities) 234.52 328.95 T
(.) 354.1 328.95 T
(Instantiation involved the assignment of) 135.65 284.95 T
(values to variables) 135.65 262.95 T
(.) 291.24 262.95 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 8) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Frame-based r) 153.11 728.95 T
(epr) 303.97 728.95 T
(esentation) 338.2 728.95 T
2 18 Q
-0.66 (A frame is a collection of) 63.65 680.95 P
3 F
-0.68 (slots) 268.71 680.95 P
2 F
-0.66 ( whic) 311.71 680.95 P
-0.66 (h are attribute-value) 354.6 680.95 P
-0.31 (pairs) 63.65 658.95 P
-0.31 (. F) 105.53 658.95 P
-0.31 (or a given frame) 126.25 658.95 P
-0.31 (, the attributes are \336xed. V) 261 658.95 P
-0.31 (alues) 482.95 658.95 P
(can be constants) 63.65 636.95 T
(, variables) 200.88 636.95 T
(, or other frames) 286.79 636.95 T
(.) 424.67 636.95 T
(Specialized slots are used to relate different frames) 63.65 592.95 T
(.) 489.89 592.95 T
(Specialization-of) 99.65 548.95 T
(Isa hierarc) 135.65 504.95 T
(hy) 225.85 504.95 T
(Default) 99.65 460.95 T
(Expectations) 135.65 416.95 T
(Makes likely values explicit without) 135.65 394.95 T
(If-needed) 99.65 350.95 T
(Procedural attac) 135.65 306.95 T
(hment- Procedures whic) 273.53 306.95 T
(h,) 474.71 306.95 T
(when executed, will determine the value of a) 135.65 284.95 T
(slot.) 135.65 262.95 T
(If-added) 99.65 218.95 T
(Procedure whic) 135.65 174.95 T
(h should be executed when a) 263.5 174.95 T
(particular slot is assigned a value) 135.65 152.95 T
(.) 415.71 152.95 T
(Used to handle exception conditions) 135.65 108.95 T
(.) 434.21 108.95 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
pstopssaved restore
%%Page: pstops 5
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 9) 551.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
1 24 Q
(Frame-based r) 153.11 728.95 T
(epr) 303.97 728.95 T
(esentation) 338.2 728.95 T
2 18 Q
(Example of three simple frame structures) 63.65 680.95 T
3 F
(CHAIR) 99.65 638.95 T
2 F
( frame:) 165.64 638.95 T
(Specialization-of:) 126.65 617.95 T
(FURNITURE) 279.65 617.95 T
(Number) 126.65 596.95 T
(-of-legs:) 194.65 596.95 T
(an integer \050DEF) 279.65 596.95 T
(A) 414.09 596.95 T
(UL) 426.55 596.95 T
(T=4\051) 451.87 596.95 T
(Style-of-bac) 126.65 575.95 T
(k:) 224.19 575.95 T
(straight, cushioned, ...) 279.65 575.95 T
(Number) 126.65 554.95 T
(-of-arms:) 194.65 554.95 T
(0, 1, or 2) 279.65 554.95 T
3 F
(JOHN\325) 99.65 512.95 T
(s-CHAIR) 160.85 512.95 T
2 F
( frame) 241.83 512.95 T
(Specialization-of:) 126.65 491.95 T
(CHAIR) 279.65 491.95 T
(Number) 126.65 470.95 T
(-of-legs:) 194.65 470.95 T
(4) 279.65 470.95 T
(Style-of-bac) 126.65 449.95 T
(k:) 224.19 449.95 T
(cushioned) 279.65 449.95 T
(Number) 126.65 428.95 T
(-of-arms:) 194.65 428.95 T
(0) 279.65 428.95 T
3 F
(REST) 99.65 386.95 T
(A) 151.99 386.95 T
(URANT) 165.33 386.95 T
2 F
( frame:) 236.65 386.95 T
(Specialization-of:) 126.65 365.95 T
(Business-establishment) 279.65 365.95 T
(Type:) 126.65 344.95 T
(range:) 153.65 323.95 T
(\050Cafe) 243.65 323.95 T
(, Seat-yourself) 287.32 323.95 T
(, T) 406.66 323.95 T
(o-be-seated\051) 427.68 323.95 T
(default:) 153.65 302.95 T
(to-be-seated) 243.65 302.95 T
(if-needed:) 153.65 281.95 T
(IF stac) 243.65 281.95 T
(k-of-tra) 301.19 281.95 T
(ys THEN Cafe) 363.67 281.95 T
(IF w) 243.65 260.95 T
(ait-to-be-seated sign) 281.66 260.95 T
(     THEN T) 243.65 239.95 T
(o-be-seated) 339.35 239.95 T
(Otherwise Seat-yourself) 243.65 218.95 T
(F) 126.65 197.95 T
(ood-style:) 137.66 197.95 T
(range:) 153.65 176.95 T
(\050Burgers) 243.65 176.95 T
(, Chinese) 316.17 176.95 T
(, American, ...\051) 392.85 176.95 T
(default:) 153.65 155.95 T
(Chinese) 243.65 155.95 T
(if-added:) 153.65 134.95 T
(\050Update range slot\051) 243.65 134.95 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 10) 546.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
4 20 Q
(A frame-based network) 171.65 731.62 T
3 16 Q
(\245) 63.65 184.29 T
6.95 (A frame-based network and a translation of the) 89.65 184.29 P
7.03 (network into FOL. Boxed relation names in the) 90.65 165.29 P
8.16 (network correspond to relations holding for all) 90.65 146.29 P
(members of the set of objects.) 90.65 127.29 T
63.65 96.95 531.65 744.95 C
0 0 0 1 0 0 0 K
63.65 231.95 531.65 687.95 C
0 12 154 558 598 501 441 63.65 246.95 FMBEGINEPSF
%%BeginDocument: /homes/tcpong/DOS/comp221/figures/fig10.07.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica Helvetica-Bold Helvetica-Oblique
%%Pages: 1
%%BoundingBox: 12 154 558 598
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def
/Helvetica-Oblique reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.86747 0 0 0.86747 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -75 142.06 ] concat
%I
139 164 139 219 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -75 142.06 ] concat
%I
268 164 268 219 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -18.8879 -62.1438 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -131 -193 ] concat
%I
158 448 240 513 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -131 -197.594 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -55.1089 -60.9834 ] concat

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -2 -194 ] concat
%I 4
158 448
158 513
240 513
240 448
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -2 -198.594 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -75 151.624 ] concat
%I
139 283 139 338 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -75 151.624 ] concat
%I
268 283 268 338 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 53.2068 139.389 ] concat
%I
268 164 268 219 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.06265 0 0 1.06265 -6.37588 98.8261 ] concat
%I
300 317 205 366 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.06265 0 0 1.06265 -6.37588 98.8261 ] concat
%I
74 436 115 478 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.06265 0 0 1.06265 -6.37588 98.8261 ] concat
%I
188 434 148 478 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -39.0012 -102.78 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -65 168 ] concat
%I
158 448 240 513 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -65 163.406 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -18.8879 -81.3767 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -131 47 ] concat
%I
158 448 240 513 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -131 42.4061 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -55.1089 -80.2162 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -2 46 ] concat
%I
158 448 240 513 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -2 41.4061 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -55.1089 -68.4745 ] concat

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -2 -74 ] concat
%I 4
158 448
158 513
240 513
240 448
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -2 -78.5939 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -18.8879 -68.4745 ] concat

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -131 -74 ] concat
%I
158 448 240 513 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -131 -78.5939 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -98.7361 -68.4745 ] concat

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 126.207 -74 ] concat
%I 4
158 448
158 513
240 513
240 448
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 126 -78.5939 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 395 193 ] concat
%I
[
(\(b\) Translation into first-order logic)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0 0.8 -0.8 0 49.3842 445.145 ] concat
%I
[
(Subset)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0 0.8 -0.8 0 177.494 444.145 ] concat
%I
[
(Subset)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0.69282 -0.4 0.4 0.69282 261.199 479.715 ] concat
%I
[
(Subset)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0.51423 0.612835 -0.612835 0.51423 72.2859 582.257 ] concat
%I
[
(Subset)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 316.084 ] concat
%I
[
(Name\(Opus,"Opus"\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 297.084 ] concat
%I
[
(Name\(Bill,"Bill"\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 279.084 ] concat
%I
[
(Friend\(Opus,Bill\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 261.084 ] concat
%I
[
(Friend\(Bill,Opus\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 114.414 681.439 ] concat
%I
[
(Animals)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 55.4052 561.501 ] concat
%I
[
(Birds)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 177.424 561.501 ] concat
%I
[
(Mammals)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 42.4052 434.125 ] concat
%I
[
(Penguins)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 193.924 434.125 ] concat
%I
[
(Cats)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 321.339 434.125 ] concat
%I
[
(Bats)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 664 ] concat
%I
[
(Rel\(Alive,Animals,T\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 557.594 ] concat
%I
[
(Rel\(Flies,Birds,T\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 539.594 ] concat
%I
[
(Rel\(Legs,Birds,2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 521.594 ] concat
%I
[
(Rel\(Legs,Mammals,4\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 438.406 ] concat
%I
[
(Rel\(Flies,Penguins,F\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 420.406 ] concat
%I
[
(Rel\(Legs,Bats,2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 401.406 ] concat
%I
[
(Rel\(Flies,Bats,T\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 645 ] concat
%I
[
(Rel\(Flies,Animals,F\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0 0.8 -0.8 0 47.6036 316.552 ] concat
%I
[
(Member)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0 0.8 -0.8 0 177.494 317.442 ] concat
%I
[
(Member)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0 0.8 -0.8 0 305.701 314.771 ] concat
%I
[
(Member)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 -0.890244 7.12259 ] concat

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.1 0 0 0.1 452.749 288.6 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -56 425 ] concat
%I 11
240 367
208 367
208 367
176 359
160 343
152 319
160 295
176 279
200 271
200 271
240 271
11 BSpl
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 0.5 592.5 ] concat
%I
197 302 366 302 Line
%I 2
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 423 368 ] concat
%I
[
(Opus     Penguins)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.1 0 0 0.1 439.394 269.6 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -56 425 ] concat
%I 11
240 367
208 367
208 367
176 359
160 343
152 319
160 295
176 279
200 271
200 271
240 271
11 BSpl
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 0.5 592.5 ] concat
%I
197 302 366 302 Line
%I 2
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 423 349 ] concat
%I
[
(Bill     Cats)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.1 0 0 0.1 439.394 250.903 ] concat

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -56 425 ] concat
%I 11
240 367
208 367
208 367
176 359
160 343
152 319
160 295
176 279
200 271
200 271
240 271
11 BSpl
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 0.5 592.5 ] concat
%I
197 302 366 302 Line
%I 2
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 423 330.303 ] concat
%I
[
(Pat     Bats)
] Text
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 242.774 ] concat
%I
[
(Name\(Pat,"Pat"\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 5.03289 -2.12531 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -158.033 251.572 ] concat
%I
247 389 291 408 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 108.376 635 ] concat
%I
[
(Flies:    F)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 4.70865 1.59399 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -76.3103 138.779 ] concat
%I
107 400 148 418 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 39.8898 531.937 ] concat
%I
[
(Legs:    2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 4.59301 -0.935097 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -76.1463 139.948 ] concat
%I
106 380 149 397 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 41.0114 512.457 ] concat
%I
[
(Flies:    T)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 16.9121 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -101.397 141.461 ] concat
%I
247 389 291 408 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 165 523.43 ] concat
%I
[
(Legs:    4)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 5.8089 6.37589 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -75.6542 147.46 ] concat
%I
103 243 147 262 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 40.2506 391.317 ] concat
%I
[
(Flies:    F)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 14.0989 -4.25061 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -122.888 146.347 ] concat
%I
391 263 435 282 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 295.125 409.124 ] concat
%I
[
(Legs:    2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 13.6538 -6.37589 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -123.052 147.571 ] concat
%I
392 244 436 260 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 295.125 390.956 ] concat
%I
[
(Flies:    T)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1.33519 0 0 1.16049 -98.8744 -57.8836 ] concat

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 126.207 -196.671 ] concat
%I 4
158 448
158 513
240 513
240 448
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 126.207 -201.265 ] concat
%I
158 494 240 494 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 55.4052 303.374 ] concat
%I
[
(Opus)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 198.424 303.374 ] concat
%I
[
(Bill)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 26.4052 259.935 ] concat
%I
[
(Friend:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 169.424 259.935 ] concat
%I
[
(Friend:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 325.339 303.374 ] concat
%I
[
(Pat)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 296.339 277.935 ] concat
%I
[
(Name:    Pat)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 169.424 277.935 ] concat
%I
[
(Name:    Bill)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 26.4052 277.935 ] concat
%I
[
(Name:    Opus)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I p u
%I t
[ 1 0 0 1 5.80421 1.06268 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.05433 0 0 0.94597 -88.4468 131.267 ] concat
%I
181 536 225 553 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-o-normal-*-14-*-*-*-*-*-*-*
Helvetica-Oblique 14 SetF
%I t
[ 1 0 0 1 105.833 651.348 ] concat
%I
[
(Alive:    T)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 0.565686 -0.565686 0.565686 0.565686 171.754 608.195 ] concat
%I
[
(Subset)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.06265 0 0 1.06265 -6.37588 98.8261 ] concat
%I
93 146 145 146 Line
%I 1
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.531323 0 0 0.531323 -1.06265 153.552 ] concat
%I 4
418 193
418 108
160 108
160 140
4 MLine
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 46 193 ] concat
%I
[
(\(a\) A frame-based knowledge base)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.09 0 0 0.09 450.394 560.77 ] concat
%I 11
280 495
208 495
208 495
176 487
160 471
152 447
160 423
176 407
200 399
200 399
280 399
11 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 606 ] concat
%I
[
(Birds       Animals)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.09 0 0 0.09 478.884 542.77 ] concat
%I 11
280 495
208 495
208 495
176 487
160 471
152 447
160 423
176 407
200 399
200 399
280 399
11 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 588 ] concat
%I
[
(Mammals       Animals)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.09 0 0 0.09 476.213 450.77 ] concat
%I 11
280 495
208 495
208 495
176 487
160 471
152 447
160 423
176 407
200 399
200 399
280 399
11 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 496 ] concat
%I
[
(Penguins       Birds)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.09 0 0 0.09 445.052 432.77 ] concat
%I 11
280 495
208 495
208 495
176 487
160 471
152 447
160 423
176 407
200 399
200 399
280 399
11 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 478 ] concat
%I
[
(Cats       Mammals)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I BSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.09 0 0 0.09 444.162 413.77 ] concat
%I 11
280 495
208 495
208 495
176 487
160 471
152 447
160 423
176 407
200 399
200 399
280 399
11 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 422.11 459 ] concat
%I
[
(Bats       Mammals)
] Text
End

End %I eop

End %I eop

showpage

%%Trailer

end

%%EndDocument
FMENDEPSF
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
pstopssaved restore
%%Page: pstops 6
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(COMP221) 36.65 61.61 T
-1.25 ( 11) 546.15 61.61 P
36.65 87.95 558.65 771.95 18 RR
0.5 H
0 Z
N
4 20 Q
(Link types in semantic networks) 111.65 731.62 T
2 18 Q
(\245) 63.65 665.95 T
(Links that indicate) 89.65 665.95 T
3 F
(subset) 254.02 665.95 T
2 F
( or) 314.02 665.95 T
3 F
(member) 341.02 665.95 T
2 F
( relationships) 417.36 665.95 T
(\245) 63.65 605.95 T
-0.01 (link that sa) 89.65 605.95 P
-0.01 (ys a relation R holds between two objects) 185.81 605.95 P
-0.01 (.) 526.64 605.95 P
(\245) 63.65 545.95 T
1.38 (link that sa) 89.65 545.95 P
1.38 (ys R holds between every element of the) 188.61 545.95 P
(c) 90.65 524.95 T
(lass A and the object B) 98.51 524.95 T
(\245) 63.65 464.95 T
2.94 (link that sa) 89.65 464.95 P
2.94 (ys R holds between every element of A) 191.72 464.95 P
(and some element of B) 90.65 443.95 T
(.) 278.33 443.95 T
(\245) 63.65 192.95 T
11.2 (T) 89.65 192.95 P
11.2 (o deal with exceptions) 100.66 192.95 P
11.2 (, c) 317.5 192.95 P
11.2 (hange the semantic) 346.57 192.95 P
3.03 (translation of a boxed-R link from A to B to mean) 90.65 171.95 P
0.68 (that) 90.65 150.95 P
5 F
0.7 (every member of A must have an R relation) 131.34 150.95 P
6.33 (to B unless there is some intervening A) 90.65 129.95 P
6.33 (\325 for) 488.81 129.95 P
(which Rel\050R, A) 90.65 108.95 T
(\325, B\325\051) 226.8 108.95 T
2 F
(.) 267.44 108.95 T
63.65 96.95 531.65 744.95 C
0 0 0 1 0 0 0 K
65.87 249.95 529.43 405.95 C
0 148 563 533 655 468 138 65.87 267.95 FMBEGINEPSF
%%BeginDocument: /homes/tcpong/DOS/comp221/figures/fig10.08.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: sem-links-table.dvi
%%BoundingBox: 148 563 533 655
%%DocumentFonts: Times-Roman Times-Italic
%%EndComments
%DVIPSCommandLine: /usr/sww/bin/dvips -o /tmp/tempsr.ps -E -o
%+ sem-links-table.ps sem-links-table
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.09.05:1244
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
TeXDict begin 40258437 52099154 1000 300 300 (sem-links-table.dvi)
@start /Fa 8 95 df<FFFFFF80FFFFFF8019027D8A20>0 D<007FFF8003FFFF80078000
000C0000001800000030000000300000006000000060000000C0000000C0000000C00000
00C0000000C0000000C0000000C0000000C0000000600000006000000030000000300000
00180000000E0000000780000001FFFF80007FFF80191A7D9620>26
D<00000030000000001800000000180000000018000000000C000000000C000000000600
0000000300000000038000000000C0FFFFFFFFF8FFFFFFFFF800000000C0000000038000
0000030000000006000000000C000000000C000000001800000000180000000018000000
00300025167E942A>33 D<000003000000000300000000018000000001C000000000C000
00000060007FFFFFF000FFFFFFF8000000000E00000000070000000001E0000000007800
000001E0000000038000000006000000000C00FFFFFFF8007FFFFFF00000000060000000
00C000000001800000000180000000030000000003000025187E952A>41
D<007FF801FFF80780000E0000180000300000300000600000600000C00000C00000C000
00FFFFF8FFFFF8C00000C00000C000006000006000003000003000001800000E00000780
0001FFF8007FF8151A7D961C>50 D<400004C0000C600018600018600018300030300030
3000301800601800601FFFE00FFFC00C00C00C00C0060180060180030300030300030300
01860001860001860000CC0000CC0000CC00007800007800007800003000003000161E80
9C17>56 D<FFFFC0FFFFC00000C00000C00000C00000C00000C00000C00000C00000C000
00C00000C00000C03FFFC07FFFC00000C00000C00000C00000C00000C00000C00000C000
00C00000C00000C00000C00000C0FFFFC0FFFFC0121D7E9C17>I<001000003800003800
006C00006C00006C0000C60000C6000183000183000301800301800600C00600C00600C0
0C00600C006018003018003030001830001830001860000C60000CC00006C00002171A7E
981C>94 D E /Fb 138[15 8 11 11 3[15 21 5[15 1[13 2[15
15 13[15 18 1[18 2[24 16 10[18 65[{}16 29.166668 /Times-Italic
rf /Fc 134[18 18 3[12 16 16 4[30 12 2[12 4[21 2[21 14[25
4[35 9[28 25 25 65[{}15 41.666668 /Times-Italic rf /Fd
134[21 21 3[12 16 2[21 1[21 32 12 21 1[12 3[18 1[18 1[18
12[25 23 6[25 6[25 18[21 21 4[10 2[14 14 40[{}22 41.666668
/Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
1 0 bop 322 276 1593 2 v 321 341 2 65 v 403 321 a Fd(Link)10
b(T)m(ype)p 653 341 V 199 w(Semantics)p 1402 341 V 580
w(Example)p 1915 341 V 322 342 1593 2 v 321 405 2 63
v 403 390 a Fc(A)440 378 y Fb(Subset)445 401 y Fa(\000)-7
b(!)528 390 y Fc(B)p 653 405 V 220 w(A)12 b Fa(\032)g
Fc(B)p 1402 405 V 644 w(Cats)e Fa(\032)i Fc(Mammals)p
1915 405 V 321 456 2 52 v 403 441 a(A)440 429 y Fb(Member)455
452 y Fa(\000)-6 b(!)549 441 y Fc(B)p 653 456 V 199 w(A)7
b Fa(2)g Fc(B)p 1402 456 V 658 w(Bill)f Fa(2)g Fc(Cats)p
1915 456 V 321 508 2 53 v 403 494 a(A)464 481 y Fb(R)440
505 y Fa(\000)-7 b(!)518 494 y Fc(B)p 653 508 V 230 w(R)p
Fd(\()p Fc(A)p Fd(,)7 b Fc(B)p Fd(\))p 1402 508 V 630
w Fc(Bill)1605 479 y Fb(Age)1594 505 y Fa(\000)-6 b(!)1673
494 y Fd(12)p 1915 508 V 321 572 2 64 v 403 557 a Fc(A)p
452 520 44 2 v 452 547 2 27 v 464 543 a Fb(R)p 493 547
V 452 549 44 2 v 440 569 a Fa(\000)f(!)518 557 y Fc(B)p
653 572 2 64 v 230 w Fa(8)7 b Fc(x)24 b(x)7 b Fa(2)g
Fc(A)21 b Fa(\))f Fc(R)p Fd(\()p Fc(x)p Fd(,)7 b Fc(B)p
Fd(\))p 1402 572 V 397 w Fc(Bir)n(ds)p 1623 514 80 2
v 1623 547 2 33 v 1635 537 a Fb(Le)o(gs)p 1700 547 V
1623 549 80 2 v 1629 569 a Fa(\000)-7 b(!)1713 557 y
Fd(2)p 1915 572 2 64 v 321 650 2 78 v 403 627 a Fc(A)p
446 578 55 2 v 446 617 2 39 v 452 584 44 2 v 452 611
2 27 v 464 607 a Fb(R)p 493 611 V 452 613 44 2 v 499
617 2 39 v 446 619 55 2 v 440 638 a Fa(\000)g(!)518 627
y Fc(B)p 653 650 2 78 v 230 w Fa(8)7 b Fc(x)24 b Fa(9)7
b Fc(y)23 b(x)8 b Fa(2)e Fc(A)22 b Fa(\))e Fc(y)7 b Fa(2)g
Fc(B)i Fa(^)g Fc(R)p Fd(\()p Fc(x)p Fd(,)e Fc(y)p Fd(\))p
1402 650 V 201 w Fc(Bir)n(ds)p 1623 578 114 2 v 1623
617 2 39 v 1629 584 102 2 v 1629 611 2 28 v 1641 607
a Fb(P)n(ar)o(ent)p 1728 611 V 1629 613 102 2 v 1734
617 2 39 v 1623 619 114 2 v 1646 638 a Fa(\000)-7 b(!)1747
627 y Fc(Bir)n(ds)p 1915 650 2 78 v 322 652 1593 2 v
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
FMENDEPSF
63.65 96.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
showpage
pstopssaved restore
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 11
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Bold
%%+ Courier-Bold
%%+ NewCenturySchlbk-BoldItalic
%%EOF
