%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: t8.dvi
%%Pages: 8 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%%BeginProcSet: pstops-clip 1 0
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/lcvx{dup load dup type dup/operatortype eq{pop exch pop}
 {/arraytype eq{dup xcheck{exch pop aload pop}
 {pop cvx}ifelse}{pop cvx}ifelse}ifelse}bind def
/pstopsmatrix matrix currentmatrix def
/pstopsxform matrix def
/defaultmatrix{pstopsmatrix exch pstopsxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/pathtoproc{[{currentpoint}stopped{$error/newerror false
 put{newpath}}{/newpath cvx 3 1 roll/moveto cvx 4 array
 astore cvx}ifelse]{[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}def
/initclip[/matrix lcvx/currentmatrix lcvx/pstopsmatrix cvx/setmatrix lcvx
 /pathtoproc lcvx/initclip lcvx/newpath lcvx
 0 0 /moveto lcvx 595.000000 0/rlineto lcvx
 0 842.000000/rlineto lcvx -595.000000 0/rlineto lcvx
 /closepath lcvx/clip lcvx
 /newpath lcvx/exec lcvx/setmatrix lcvx]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
%%EndProcSet
%DVIPSCommandLine: dvips -o t8.ps t8.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.04.15:2305
%%BeginProcSet: thicken.ps
% Increase the strokewidth of a stroked (PaintType 1 or 3) font.
% If the font is not of the right PaintType or does not have a 
% StrokeWidth entry, does nothing.

% Mario Wolczko, 10 Sep 92

/ThickenFont {  % factor ThickenFont
20 dict begin
  /factor exch def
  /StrokeWidth where {
    /fdict exch def
    PaintType dup
    1 eq exch 3 eq or
      { StrokeWidth factor mul
	fdict /StrokeWidth 3 2 roll put
      } if
  } if
end
} def
%%EndProcSet
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (t8.dvi)
@start /Fa 1 1 df<007FB912E0BA12F0A26C18E03C04789A4D>0
D E /Fb 22 122 df<1A1E1A1F6262A262A261A26161A2618761A26161197B19FB19F3F0
01E3A2F003C318071983180F1903061E80A2183C85187818F818F0EF01E0A2EF03C0A2EF
0780170F1800171E875FA24D7F17F85F4C5AA24C5AA24C5A160F94C8FC5E161E4C82A25E
04F8157F5E15015E4BB8FCA25DA24BC9127F5D151E4B83A25D1A3F5D14015D4A5AA24A5A
A24ACAFC5C141E5C875C14F81A1F495A13031307010F183F131FD97FF84D7E2603FFFE04
03B57E007FD9FFE092B7FC4E1680B61A006C5C596678E568>65 D<92B912F04A18FF1CC0
6E19F09226007FFEC86C7E7048ED1FFE70486F7E043F7013807513C04D811DE0047F821D
F05F1C7F04FF18F8A25FA25DA25F1CFF5D1DF094CAFC634B19E0A24C4C13C0A2030F4D13
80A24C4C1300515A031F4D5A644C4C5A515A033F04035B505B4C4B48C7FCF23FFC037FEE
FFF0070313C04CDAFFFEC8FC93B712F092B812FE747E04C0C8EA7FE0F23FF84AEF0FFC74
B4FC4C81884A717F8893CAFC885CA24B717EA2140FA25DA2141FA24B17FFA2143F644B5E
A2027F61624B606202FF61624B4C90C7FC6349183F505A4B4C5A4F5B494D5B4F5B92C948
5BDF3FFEC8FC49EFFFFC49040313F0013F041F13C0007FBAC9FCBA12FC19E04ECAFC5D62
76E163>I<952603FF801438067F13F00503B500FC1478051F02FF14F0943B7FFE003FC0
01932601FFE0903807E003040790C73803F007DC1FFC913900F80FE0DC7FF0ED7C1F4C48
153E03030180ED1E3F4B90C9381F7FC0DB0FFCEE0FFFDB3FF8824B5A4B487013804A5B4A
5B4A90CA7E4A4819004A5A4A5A027F844A48605D495B5B494960A24990CCFC495A64495A
A2495A01FF625C5A1B01485B98C8FCA2485BA25A5CA25A91CFFCA35A5BA3127F5BA55BA2
12FFA31BF8A2635B007F190163A21A03636D180763003F190F98C8FC621A3E6C6C183C1A
7C62000F616D170100074E5A6D4D5A6C4E5A6C6D4CC9FC6E163E6C606D6C5E6D6C4B5A6D
6CED07E06D6C4B5A6DB4033FCAFC6D6D14FE010001F0EB07F8DA7FFEEB3FE0021FB61280
02074ACBFC020014F0030F90CCFC5D686BE464>I<92BB12FEA25C80DB007F90C8120770
48ED007F7048EE1FFC043F17071C035F1C01167F1C004D17F8A216FFA25FA25D1DF05FA2
5DA25F1C014B19E01A3894C81278A24B04F814C05090C7FC5EA2031F1501624C1403A203
3F1507624C140F191F037F157F953803FF8093B7FCA292B8FC97C9FC9338E0000718004A
82193E5EA25C193C5EA24A167C197893C815381C3C4A04F8147C4F14784B037014F896C8
5A141F1B014B601B03023F61A24B170764027F180FA24B4DC7FCA202FF183E1B7E5D6349
1801634B16031A07494E5A1A1F4BEE7FE0F101FF49170749053F5B013F0407B5FC007FBB
5ABCFCA298C8FC5F6276E15F>69 D<040FB7FC1B801B00A2DC000114809426003FFEC7FC
61A361A2187F61A318FF61A35F61A35F61A35F96C8FCA35F60A3171F60A3173F60A3177F
60A317FF60A35E60A35E60A35E95C9FCA35EA25FA2161FA25FA2163FA25FA2D807C0147F
EA1FF0486C5D127F16FF00FF5EA25D5F495B495D494990CAFC5B00F0C7485A5E4B5A6C4A
5A00784A5A007C4A5A6C495B6C4990CBFC390F800FFC3907F03FF06CB55AC691CCFCEB1F
F8496571E14A>74 D<92B6071FB512C04A6F4E14E0676E99B612C0DB007FF48000704F01
FCC7FC70634C61F607BF043D63043C6DEF0F3F047C1A7F0C1E5B0478193CA204F8F178FF
684C61535A03011AE1E303C15B4C6C7EF5078103034F5A9DC8FC04C0181EA203074F5A0B
785B16801DF0030F6D6C170FE201E05B1600F403C04B953807801F67031EF00F00A2033E
061E133F525C033C6D7E64037C1A7F525C03784D5AA203F84D4813FF674B4D5A51C7FC02
0162716C021E5D5D6302034E5B9CC9FC4B5FA202074D485B50485C5D716C495A020F1A0F
50C75B92C7151EA24A4D141F66021E5F62023E1A3F716C48485D143C4F5A027C4C48147F
6602784CC8FCA202F8041E15FF4F5E5C6101016F01F85C4F5E4A5EA201034D5C9BCAFC01
075F010F94C8FC496C61D97FF84B5D2603FFFE0200043F13C0007FD9FFF84A027FB612E0
B64B91B7FCA24B4A60836276E17E>77 D<92B912C01BFC4AF0FF806E85DB007F90C70007
13F070489138007FF87048ED1FFC043F707E757E4D6F13807513C0167F7513E05F1DF016
FFA25FA24B19F8A25FA24B19F0635FA25D5113E094C9FCA24B4D13C0A24C188051130015
1F515A4C5F515A153F515A4C4C5A501380037F4C90C7FCF20FFE4C4B5AF27FF003FF9238
03FFC0073F90C8FC93B712FC1AE097C9FC4A01E0CCFC5EA35C5EA35C93CDFCA35C5DA314
1F5DA3143F5DA3147F5DA314FF5DA35B5DA35B5DA25B5B013F13E0007FB612F0B7FCA25E
5D6276E15F>80 D<ED07F0ED3FFE92B513F0913A03FC0F81FC91390FF007C391391FC003
E791397F8001F74AC7FC494814FF49486E5A495A010F153F495A49485DA24948141F01FF
153F4A5D5A5A91C8127F485FA2485A17FF60485AA25E003F94C7FC5BA25E007F5E5BA216
075F5B12FF160F4D137019F05B161F007FEEF00119E0A2043F1303047F14C017E0003F15
FF4BEC07805D6C6CD907DF130FDB0F9F1400000FDA1F1F5B6C6C013E141E6C6CD97C0F13
3E6D48486C6C5A2800FE07E0035B903B7FFFC001FFF0011F90C75BD903F8EC1F803C4071
BE48>97 D<ED03FF031F13C092B512F0913903FE01FC91390FF8007EDA3FE07FDA7F807F
4948C713804948140F495A495A495A495A137F495A5C48161F4890C813005F48163E4848
157E5F4848EC03F8EE0FF0EE3FC0003FDA03FFC7FC9039F801FFFC90B612E04BC8FC4891
C9FC01F0CAFCA4485AA55BA5127FA217031880EF07C0003FEE0F80EF1F006D5D001F167E
5F6C6C4A5AEE07E06C6C4A5A0003ED3F806C6C02FEC7FC6C6CEB07F890397F807FE0011F
B51280010701FCC8FC010013C0324070BE41>101 D<EE0FE0EE7FFC923A03FFFE01E092
3A07F81F03F892391FE00F8792397F8007CF9239FF0003EF4A4813014A48EB00FF4A5A4A
4815F0021F157F4A5A4A5A19E04A48143F49167F92C8FC4917C05B4A15FF130F4A168013
1F5FA249481600A25F137F4A5DA2170713FF4A5DA2170FA24A5DA2171FA2605C173FA260
177FA2017F15FF4C5B5E6D7E5E011F4A5B6E5B010F5C6D6C13F9902703F801F190C7FC90
3901FC0FE16DB5128391383FFE03DA07F05B91C7FC1607A25FA2160FA25FA2161F5FA216
3F5FD80F80147F486C5DD87FE014FF5F00FF4A90C8FC4B5A4B5A4B5A49495A49EB3FC000
7EC7B45A273FC007FEC9FC6CB512F8000714C0C66C48CAFC3D5C78BE41>103
D<153F91387FFF80010FB5FC4991C9FCA27FEB000F6E5A14031407A25DA2140FA25DA214
1FA25DA2143FA25DA2147FA25DA214FFA25DA25BA292CAFCA249EC0FF8EE7FFFDAFE03B5
12C092390FF01FE0010790391F800FF092393E0007F8DAFCFC6D7EECFDF049B45A4B804B
1301A24990C7FC5C5C1703495AA25CA249481407605CA201FF150F605CA248161F6091C8
FC173F485FA249157F60120717FF495EA2000F5DF0000749170F5E001F4C131F191E4914
075F003F183C160F494B137C1978127F4D13F05BF001E000FFEF03C0160749EE07800403
EB1F00933801F83E90C9EAFFFC48EE7FF0003CEE1FC0406575E348>I<153F91387FFF80
010FB5FC4991C9FCA27FEB000F6E5A14031407A25DA2140FA25DA2141FA25DA2143FA25D
A2147FA25DA214FFA25DA25BA292CAFCA24916FCEF07FF4A021F138094387E07C0010792
38F803E0933801E00F4A903803C01F933807007F010F140E4C13FF4A5B5E011F14F04B48
14C04A4848EB7F804B48EB3E00013F91C9FC150E4A5A5D017F5B15F0ECC1E0ECC780D9FF
CFCAFC14FE5C5C48EBFFC015F8EC1FFE913803FF8048010013E0ED3FF0496D7E6F7E0007
6E7EA249130382000F80F00380491607A2001F4A140F4C14005BA2003F5F181E495C183E
007F173CA2495EA200FF02015C1701495E6F6C485A93387F0F8090C86CB4C7FC48ED0FFE
003CED03F03B6575E341>107 D<15FC903801FFFE133F15FCA3EB003FEC1FF8140F141F
A215F0A2143FA215E0A2147FA215C0A214FFA21580A25BA21500A25BA25CA21307A25CA2
130FA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA25AA291C7FCA25AA25BA212
07A25BA2120FA25BA2121FA25BA2123FEC01C0EBE003A2007F1307158013C0A2140F00FF
140013805C141EA2007F133E143C147C1478003F13F8381F81F0EBC3E03807FFC06C5BD8
007EC7FC1F6573E324>I<D90FC0DA3FE0EC03FED93FF0902601FFFC91381FFFC0D9FFFC
010F01FF91B512F02601F0FE903D3FC07F8003FC07F82603E07F903D7E003FC007E003FC
01C0D980F8903B1FE00F8001FE000790263F83F090260FF03FC77E0180D987C0157C000F
DACF805D010091C76D48814802DE912607F9E0147F001E02FE15FB4A48EDFFC0003E4A5E
003C4A93C8FC4E16FF4B5D007C13FF00784A5DA200F84A4A485C484899C7FC007091C85B
1200063F5D49634A5EA2067F15070107634A5E1C0F06FF5E130F4A4C141F655F011F1A3F
4A93C85BA24D167F013F9838C001C04A4B17031CFF0507EF8007017F1D804A4B5C1D0005
0FF00F0001FF614A4B4B5B1E1E171F48515B91C85B66053F18F84808015C494C4C5A0900
EB07C099387E0F80494C6FB4C7FC494CED1FFCC648030FC9EA07F06A4074BE73>I<D90F
C0EC3FE0D93FF0903801FFFCD9FFFC010F13FF2601F0FE90393FC07F802603E07F90397E
003FC001C0D980F86D7E000790263F83F06D7E0180EB87C0000FECCF80010091C77F4802
DE1407001E14FE4A5A003E5C003C5C180F5D007C13FF00785CA200F84A141F48485F0070
91C8FC1200183F495F5CA2187F01075F5C18FF61130F4A5C96C7FCA2011F5D4A5DA21707
013F4C131C4A173C170F4E137C017F18784A141F601AF001FF153F4AEDE0011AE0A24894
38C003C091C8FCF10780F10F0048161F49171E050F137C716C5A496FB45A496F13C0C648
6F6CC7FC464074BE4F>I<4BB4FC031F13E0037F13F8913901FF01FE913907F8007FDA1F
E0EB3F804A48EB1FC0DAFF8014E04948C7EA0FF04948EC07F81307494815FC4948140349
5A017F16FE495A5C5A4890C813FFA25A5B120F495D121FA2485AA25F007F17FE5BA2171F
00FF17FC5BA2173F18F85BEF7FF0A218E017FF18C0A2494A138018005E5F6C6C4A5A4C5A
A2003F4B5A6D4A5A001F4B5A000F4BC7FC6D495A6C6C495A6C6CEB0FF06C6C495A3A007F
80FF806DB448C8FC010F13F001011380384070BE48>I<DB07F01306DB3FFE130E92B513
3E913A03FC0F807E913A0FF007C0FE91391FC003E1913A7F8001F1FC4AC712F3494814FF
4948147F494815F8010F153F495A495A18F04948141F13FF4A143F4817E05A91C8FC4816
7F18C0485AA217FF48481680A3003F5D491600A3007F5D495DA31607495D12FFA2160F5F
5BA2007F151F5FA2163F167F5F003F15FF5D5D6C6C495B5D000FEC1F7F6C6CEB3EFF6C6C
495B6D485A3900FE07E090387FFFC1011F010190C7FCEB03F890C7FC5D5EA315075EA315
0F5EA3151F5EA3153F5EA2157FA2913803FFF00103B612F85BA25F375B71BE41>113
D<D90FC049B4FCD93FF0010F13E0D9FFFC013F13F82601F0FE9038FE01FC3C03E07F01F8
003E01C0D983E0137F000790263F87C013FF018090388F8003000FECDF00010001FE5B48
5C121E4A5A003E4A14FE003CEE03FC4BEB01F094C7FC007C495A00785CA212F8485A0070
91C9FC1200A25B5CA313075CA3130F5CA3131F5CA3133F5CA3137F5CA313FF5CA35A91CA
FCA35A5BA35B5BC65A384074BE3B>I<ED0FF8ED7FFF0203B512C0913907F807F091391F
C001F891393F8000FC027EC7127C02FE143E4948141E495A173E494814FE1601010F1403
5CA2131F17FCEE00F06E1400A2808080ECFFE06D13FF16C016F06D14FC6D806D806D1580
143F020F14C01400030713E0150181167F163FA2161FEA07C0EA1FE0487E007F16C0A316
3F48481580A20180EC7F006CC8FC007815FE5E007C4A5A6C4A5A003F4A5A6C6CEB1FC06C
6C495A2703F803FEC7FC6CB512F86C6C13E0D907FEC8FC2F4075BE39>I<15F0EC01FC14
031407A3140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25B007FB612FEB7
FCA216FCD8000390C7FC5CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C
A213FFA25CA25AA291C8FCA25AA25BA2120716704914F0A2000F140116E049130316C015
07001F158049130F16005D153E000F143C5D15F84A5A0007495A6C6C485AEC1F802600FF
FEC7FCEB7FF8EB0FE0275A72D82F>I<EB01F8D90FFEED01E0496C6CEC07F090267E1FC0
140F9026F80FE08101F04C5A48486C7EEA03C00007010F153F1380D80F005FA2001E177F
141F003E60123C023F15FF007C5C0078017F5E5D5F00F813FF00704A92C7FCC7FC495D92
C7FC605B4A1407A201075E5C170F130F4A5DA2171F131F4A5DA2173F013FEF01C04AEDE0
03A2057F13071A8018C0A24A160F05FF14001880616E49141E5E011F173E4C143C6ED90F
7F137C010F021E14786D6CD93C3F13F86D6C9039F81FC1F0902701FE03F0EBC3E06DB539
C007FFC0023FD900035BDA07F8D9007EC7FC424074BE4B>I<EB01F8D90FFEED01E0496C
6CEC07F090267E1FC0140F9026F80FE015F801F0EE1FF048486C7EEA03C00007010F153F
018017E0EA0F00A2001E177F021F16C0123E123C023F15FF007C4A15800078137F5D5F00
F801FF160000705CC7FC495D92C75BA25B4A14076013075C170F010F5E5CA2171F011F5E
5CA2173F013F5E5CA2177F60A34A14FF60A36E5B4C90C7FC131F5E6E5B010F4A5A6D6C13
3F6D6C13FB903901FE03F76DB5EAC7FC023F1307EC07F891C7120F5FA34C5AA2163F5FEA
03F0D80FF84A5A486C5D16FF94C8FC003F4A5A4913035E49495A01C0495A003CC7485A00
3E5D001E4A5A001F02FFC9FC6C6C485A9038C003F83907F01FE00001B512806C6C48CAFC
EB1FF03D5C74BE44>121 D E /Fc 6 111 df<121EEA7F8012FF13C0A213E0A3127FEA1E
601200A413E013C0A312011380120313005A1206120E5A5A5A12600B1D78891B>59
D<1830187018F0A217011703A24D7EA2170F171FA21737A2176717E717C793380187FCA2
EE0307EE07031606160CA216181638163004607FA216C0030113011680ED0300A2150615
0E150C5D845D03707F15605DA24A5A4AB7FCA25C0206C87F5C021C157F14185CA25C14E0
5C495A8549C9FC49163F1306130E5B133C137C01FE4C7ED807FFED01FF007F01F0027FEB
FFC0B5FC5C42477DC649>65 D<91B912FCA3020001C0C7123F6F48EC03F803FF15011900
93C91278A21A385C5DA3020317305DA314074B1460A218E0020F4B13005DA21701021F5D
4B13031707170F023F027FC8FC92B6FCA391397FC0007E4B131EA2170E02FF140C92C7FC
A2171C49031813035C611906010392C7FC4A160E190C191C010717184A16381930197013
0F4A5E180161011F16034A15074E5A013F163F4EC7FC4AEC03FF01FFED3FFEB9FCA26046
447CC348>69 D<031FB512FC5D18F89239000FFE00705AA35FA2160FA25FA2161FA25FA2
163FA25FA2167FA25FA216FFA294C7FCA25DA25EA21503A25EA21507A25EA2150FA25EA2
151FA25EA2153FA25EEA0F80D83FE0137F5E127FA24BC8FC485A4A5A1300006C495A0060
495A0070495A0030495A0038EB3F806C49C9FC380F81FC3803FFF038007F80364679C336
>74 D<141E143F5C5CA3147E143891C7FCAE133EEBFF803801C3C0380781E0380601F012
0E121CEA180312381230A2EA700700605BA2EAE00F00C05BEA001F5CA2133F91C7FCA25B
137E13FE5BA212015BEC03800003140013F01207495A1406140E140CEBC01C141814385C
00035BEBE1C0C6B45A013EC7FC19437DC121>105 D<01F8EB03FCD803FEEB1FFFD8071F
90387C0FC03B0E0F80E007E03A0C07C3C003001CD9C7007F001801CE1301003801DC8000
3013D8EB0FF800705B00605BA200E0491303D8C01F5D5C12001607013F5D91C7FCA2160F
495D137E161F5F13FE49143F94C7FC187000014B136049147E16FE4C13E0000317C04915
0104F81380170300071700495D170EEE781C000FED7C3849EC1FF0D80380EC07C0342D7D
AB3A>110 D E /Fd 2 90 df<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C
6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600
E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E
7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA270
7F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE
4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70
023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF
0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA24865
5ABFFC666D747B7F78>88 D<BE12FEA5000302E0C9000F1480C66CF2FC00011F1AF06D62
6D62A26D62B3B3B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF4BB512FC0003B600
E0020FECFF80B8D88003B712FEA55F747B7F6A>I E /Fe 31 122
df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C048
48EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15
FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB
1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030
151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E0
4A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A613
0FAA6D5AEB01C02A457BC231>I<14FF010713E0011F13F890387F00FE01FC133FD801F0
EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116
F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007F
FEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E0
48486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48
153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6C
EB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>I<14FF
010713E0011F13F890387F80FC9038FC007E48487F4848EB1F804848EB0FC0000FEC07E0
485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516FFA46C5CA36C7E5D121F
7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90383F01E090390FFF80FE903801FE00
90C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C130F16C0ED1F80A249EB3F
0049137E001EC75A001C495A000F495A3907E01FE06CB51280C649C7FCEB1FF028447CC1
31>I<007FBAFCBB1280A26C1900CEFCB0007FBAFCBB1280A26C190041187BA44C>61
D<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D9
03FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607
120348481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960
A2123F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D
6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC
13FC0203B512F0020014C0DB0FFEC8FC3B487BC546>67 D<B56C933807FFFC6E5EA20001
F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2
027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A3
6E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C
5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447B
C359>77 D<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC0FC049
486E7E49486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707EA24848
707EA2000F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C1300A4
003F606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A000060017F
4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F
8013FC913907F007F00201B512C09126001FFCC9FC41487BC54C>79
D<B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F0
18F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80
933801FE00EE0FFC91B612F017800280C9FCB3AA3801FFE0B612C0A338447CC342>I<B7
12E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA28417
0384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980
007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C13C0
2601FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF007F843467CC348
>82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB079F49EB03
DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C6C91C7FC7F
7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0010F80010180
D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150FA31607A37E
A36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A9039
3FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<EB07FC90383FFF8090
38F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA
0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B
176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E
03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201
B3EC03FC91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713
C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26D
EC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E090
39801FFF80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F
01FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC07
0092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C1301
0001EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<EB
01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C04913
0F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F1630
6C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F
80F8903803FFE0010090C7FC242E7DAC2B>101 D<EE0F80D901FCEB7FE0903A0FFF81F0
F090393F07E3819039FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F81
49131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090
380FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048
B67E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C
1680007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261F
FFFEC7FC010113E02C427DAC31>103 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCAD
EA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>105
D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>108
D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F8000
07903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E
91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<39
01FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F
5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80
903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81
A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F15
7E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE90
3807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0
FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26
>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C147812
7800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0
C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C15
786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306
A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA01
7E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E
7EBC26>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D14
1C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7
FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA3
6EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1E
EA0FFCEA03F02E3F7EAA33>121 D E /Ff 9 62 df<150E151E153C157815F0EC01E0EC
03C01407EC0F80EC1F00143EA25C5C13015C495A13075C130F5C131F91C7FC5B133E137E
137C13FCA2485AA3485AA3485AA3120F5BA3121F5BA3123FA390C8FCA25AA5127EA312FE
B3A7127EA3127FA57EA27FA3121FA37F120FA37F1207A36C7EA36C7EA36C7EA2137C137E
133E133F7F80130F8013078013036D7E801300147C80A280EC0F80EC07C01403EC01E0EC
00F01578153C151E150E1F8F73EA33>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E6C7EA2
137C7F133F7F6D7E80130780130380130180130080147C147EA280A3EC1F80A3EC0FC0A3
15E01407A315F01403A315F8A31401A215FCA51400A315FEB3A715FCA31401A515F8A214
03A315F0A3140715E0A3140F15C0A3EC1F80A3EC3F00A3147EA2147C14FC5C13015C1303
5C13075C130F5C49C7FC5B133E5B5BA2485A485A485A5B48C8FC121E5A5A5A5A1F8F7AEA
33>I<170E171FB3B3A6007FBD1280BE12C0A36C1C80CA001FCBFCB3B3A6170E5A5B7AD0
67>43 D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE04948
6D7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C04915
0F000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA5
6D1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F00
0117006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB4
48B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>48 D<EC01C014031407140F
143F147FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA2010713FCB8
12E0A42B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF809026
3E000113E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E
6F13C0121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006
C913F0CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F
4CC7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC14
3E4A15385C495A495A49481570495A49C9FC131E5B4916F05B484816E048481501484815
0348B8FCA25A5A5AB912C0A4355E7ADD42>I<486C150301E0150F01FC153FD9FF80EB03
FE02F8EB3FFC91B65A5F5F178094C7FC16FC01DF14F001C314809026C03FF8C8FC91CAFC
B3A34AB47E021F13F0027F13FC9039C1FE00FFD9C3E0EB3F80D9CF80EB1FE001DFC76C7E
01FC6E7E496E7E49140183496E7E5BCAEA7F8018C0A2173F18E0A218F0A2171FA318F8A6
EA1F80EA7FC07F12FF7FA218F05B173F5B4916E00070C9FCA20078EE7FC0A26CEEFF80A2
6C4B1300A26C4B5A6C6C4A5A6D5D6C6C4A5AD801F8EC3FE06C6C4A5A017F49485A90273F
F00FFEC7FC010FB512F8010314E001001480DA0FF8C8FC35607ADD42>53
D<120E121E121F7F13F890B912C0A4481880A2190060A2003ECA123C003C173800381778
00785F60007016014D5A6017074DC7FC48161E171C173C5FCA127017F04C5A5F16034C5A
94C8FC5E161E161C163C5EA25EA24B5A15035E15075E150FA24BC9FCA25D153E157EA315
FE5D1401A314035DA21407A3140FA4141F5DA4143FA7147FAC6E5A6E5A6E5A3A637AE042
>55 D<007FBD1280BE12C0A36C1C80D1FCB3A3007FBD1280BE12C0A36C1C805A1F7AB267
>61 D E /Fg 11 122 df<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0
EA07800E0E748D27>58 D<EA0FC0EA3FE0EA7FF8A2EAFFFC13FEA413FF7EA2EA3FF7EA0F
C7EA0007A6130F130EA3131E131CA2133C13381378A213F0A2EA01E0EA03C0A2EA0780EA
0F00121E123E123C1218102A748D27>I<F203C0507EA21A0FA21A1FA21A3F1A7F871AFF
A26161A261A2F10F7F191F191E073C7FA21978F1F83F19F0F001E0A2F003C018071980DE
0F007FA2181E063E131F183C60A2601701604D4880A24D5A050F140F95C7FC171EA25F17
7C177817F84D814C5A16034D8016075F4CC8FCA2161E163E043C835EA293B9FC5DA25D04
C0C812034B5A150F93C9FC031E84A25D037C8215785DA24A5A14035D4A4884A24ACAFC4A
83141E5C147C147814F813014948851307497E011F60D97FFC4D7F0003B5051F13FE007F
02F0030FB612FEB6FCA21DFC5F667BE569>65 D<92B912FEF3FFE04A19FC6E19FFDB007F
90C8000F13C0DC1FFE03017F70486F7F041F717E767E4D707E1C0F043F847613805FA204
7F7113C0A25FA216FFA25F645D1E805F644B1A00A294CA485AA24B4E5A525A5E525A030F
4D5B515B4C4C5B5190C7FC031FEF1FFCF37FF84C4C5A080313C0033F040F90C8FCF27FFC
4C91381FFFE093B8C9FC4B17E01BFC04E0C8EA0FFF08037F03FF040013E0757E4C707E75
7E4A851B0F4C83874A86A293CA80875CA25DA2140FA24B5FA2141F654B5FA2023F97C7FC
634B601B3F027F611B7F4B4D5A6402FF4D5B624B4C5B505B494E90C8FCF27FFC4B4C5A07
035B49050F13C049053F5B013F932603FFFEC9FC007FBA12F8BB12C04FCAFC19E0626279
E16B>I<92BC12F05CA280DB007F0180C8123F041F90C912037048EE007F041F183FF50F
E05F1D07163F1D035FA2167FF501C05FA216FFA25FA25D1D034D1880A25D1A034D5CA24B
4C1500080E91C7FC94C8FCA24B161E1A1C4C153CA2031F167C1A784C15F81901033F1507
F17FF093B7FCA25D6204F0C7127F190F03FF1507624C1403A25C625EA24A160797CAFC4C
18301D384A4C1578070E157093C8000615F096C95A4A1901A24B611C03021F621C074B96
C7FC64143F1C1E5D64027F197C1C784B18F81B0102FF611B034B4D5A1B0F494F5A1B7F4B
17FF08035B49181F4995B5C8FC013F171F007FBB5ABCFCA263646279E168>69
D<4CB712F8A25E7016F093C7001FEBF800060313E062A362A26097C7FCA36061A3181F61
A3183F61A3187F61A318FF61A35F61A35F61A35F96C8FCA35F60A3171F60A3173F60A317
7F60A317FFA260A25EA260A25EA260A2D807F05CEA1FF8486C93C9FC127F5E00FF5EA24C
5AA2494A5A5B494A5A495D90C812FF00F04A5B6C4A5B007893CAFC007C4A5A003C4A5A6C
EC3FF06C6C495A3A07E001FF802603F80F90CBFC6CB512F86C6C13E0D90FFECCFC4D6575
E14E>74 D<92B66C073FB512C04A5314E09DB6FC6E20C0DB007F6D4E91C7FC041E1CF804
0E973803BFF0041EF2077FA2041C080E5B1F1C93263C7FE019FF555B043862A204781AE1
690470F101C1F603819326F03FF01883E4070390C8FC04E0190EA20301505A0C385B16C0
716C177003031B0F0CE05B0480F001C0A20307963803801FE307005B1600716C160E4B1B
3F535C030E61A2031E4F137F535C031C6D7E525A033C4E4813FF6803384EC7FCA2037806
0E5B525D03706D7E6403F04E5B9DC9FC4B60A202014E485B51485C4B6D7F51C7FC020306
0E140F674B5F6302071B1F716D495D92C8FC634A4D48143F67020E4D5A50C8FC021E1B7F
95267FE00E5E021C5FA2023C4D15FF6702385F620278DB3FF05DDFF1C05E0270EEF380A2
02F004F7C85A9CCAFC4A16FE610101041F5E01034D5E61497E010F4D150FD93FF84C151F
48B597B57E007F02FC6E4849B712E0B66096C7FC4B020E618B6279E188>77
D<92B912FC4AF0FFC01CF86E19FEDB007F0180C7383FFF80041F90C800077F7048030013
F0041F717E767E4D707E1C0F043F717EA24D701380A2047F19C0A25FA216FF1EE05F1EC0
5D645FA25D5213805F1E004B606594CAFC525A5D525A4C60525A031F4D5B515B4C4C90C7
FC515A033F4D5AF37FF04C4C5A08031380037FDC1FFEC8FC963801FFF893B812E098C9FC
1AF0DBFFF0CDFC5EA35C5EA35C5EA35C93CEFCA35C5DA3141F5DA3143F5DA3147F5DA314
FF5DA35B5DA25B5B013F13F0007FB612FCB7FCA25E636279E15B>80
D<033FB600F00207B612E04B6F5C616F1CC0DB003F91C9ECF800040F01F8043F13807049
4DC7FC704917F84E17E07217807096C8FC72167E70187C725E057F4C5A525A724B5A053F
4C5A724BC9FC051F163E64725D714B5A735C714B5A731307714B5A51CAFC73133E715D73
5B714A5A73485A505A067F495A7348CBFC063F131E735A061F137C62735A725B62725B86
84A286844E7FA2604E7FF01F7F063E7FF07C3F06F87F943801F01FEF03E0DD07C07F4D48
7EDD1F0080053E7F053C814D7F5F0401824C487F4C48814C487F4CC8FC043E824C157F4C
824B48153F4B48824B48151F5E4BC97F4B82033E844B824B844A5A4A48824A48844A4882
021F85027F834ACBFC010386010F6D5E013F06077F0003B500E0041FEBFF80B600FC4BB7
7E6F5DA25D73627CE175>88 D<D90FC0EC0FF8D93FF891B5FCD9FFFC010314C02601F0FF
90390FF01FF03D03C07F801F8007F8023F90397C0003FCD807806D5A0100D9C1F06D7E48
90381FE3C0000EDAE78080001E02EFC7FC001C013F8115FE003C5C00384A5CA25D007849
5A12705D00F05F4801FF5E00605CC7FC1807495F92C8FCA2180F495F5C181F6113074A15
3F61A2010F167F4A5EA218FF011F4D13C04A17015FF10003013F19804A5C4E1307050715
00017F5E4A5F1A0E1A1E01FF4C131C4A173C621A7048040314F091C84A5A943901FC07C0
716C485A49DC7FFEC7FC49705AD80078EE07E04A407CBE54>110
D<EB01FCD907FF163C011F01C015FE90263E0FE0140190267807F015FF01F0EE03FED801
E07FEA03C001801607000718FCD80F007F120E001E170F001C494815F8123C1238021F15
1F00784A15F01270143F4B143F00F0017F16E000605CC7FC02FF157F4B15C0A25B92C812
FF19805B5C5F010717005CA25F010F5E5CA21707011F5E5CA2170F60A3171F4A5D80173F
A2010F4B5A17FF5E6D6C5B4C5B6D6CEB0F7F6D6C133E903A00FF80FCFF91263FFFF05B02
0F13C00201130091C75A95C7FCA25E5FA24C5AEA01F0D807FC4A5A120F486C4A5AA24C5A
003F5E494A5A16FF4992C8FC49495A01C0495A001CC7485A001E4A5AED1FC06C6CEB7F80
2707C001FEC9FC3903F807F86CB512E06C6C1380D90FF8CAFC405C7CBE44>121
D E /Fh 23 122 df<923807FF80037F13F00207B512FC021F80027FECFF8049B712C001
0716E0A218F0EDE0034AC713F802F8147F02C0EC3FFC91C8FC010E151F90C9FCA9EF3FF8
A4EE01FF030FB512F04AB6FC141F91B7FC010316E0130F133F90B6128048ECE0004849C6
4813C04813F04813804890C7FCEA3FFC494A1380127F5BA25E484816006D5CA25E6DEC7F
FE16FF01FE1307397FFF803F91B6FC5F7E16DF6C151F6C14FC6C9138E03FF86C1400C601
E090C8FC364177BF41>97 D<EC07FFA44A5AA44A5AA54A5AA54A5AA44A5AA5495BA5495B
A44990CAFC4CB47E041F13F093B57E03078090260FFE1F804B8092B7128091B812C0A249
020014E003F8131F03E0010713F003807F92C77E49486E13F85C4A157FA24948153F19FC
A4495AA319F8A2485BA44849ED7FF0A4F0FFE04890C9FCA24D13C0A24D1380485A4D1300
5F60171F001F4C5A4D5A6D15FF04035B486D495B6E011F5B6E017F5BDAF807B5C7FC91B6
5A485E01F75D01F35D01F115C0D9F07F5C48486C49C8FC020F13F0C813803E6576E345>
I<EEFFF8030FEBFF80037F14E04AB612F8020715FE4A81023F16805C91B8120001039038
FE003F4901F013034901C0EB00FE4990C8123E4948151C4A150C494892C7FC495A485B5C
485B5A91CBFC485AA2485AA3485AA2485AA4485AAC7FA2127F6D150217066C6C151E6D15
3E001F16FE6D6C13036C6D131F9138F801FF6C90B65A7E6C5E6C16E06D5D011F4AC8FC6D
14F8010114C09026003FFCC9FC394176BF3C>I<F13FF8A4F17FF0A4F1FFE0A54E13C0A5
4E1380A44E1300A54E5AA54E5AA44E5AED1FF892B5FC020314E0020F14F8023F6E485A4A
14FE91B8FC13035B4902005C4901F0133F03C0130F4990C77E494880D9FFF85E4A80485B
485B4D5B485B91C8FC5A5B48484B90C7FCA2123F5BA2007F4C5A5BA348484B5AA54D5AA5
4D5AA37F17FF4C5B6D5C007F5D6D5C6D4A5B6C6C147F02C090B5FC6CEBF80791B7FC6C5F
6C15F36C15E36C15836CECFE036DD9F80790C8FC011F13E0D907FECBFC456576E345>I<
ED03FF033F13E092B512F8020380020F804A80027F158091B712C05B49D9F80F13E049EB
E00149D9800013F04948C7127F4948143F494815F84948141F5C485B4849140FA24890C8
FC5B120F5B121F90B8FC5AA218F05AA4D8FFE0CAFCA35BA57FA56C7EA27F17026C6C150E
6D153E6C6C15FE6E13036C01E0131F9138F801FF6C90B65A7E6C5E6C16E06D1580011F4A
C7FC6D14F8010114C09026003FF8C8FC354176BF3C>I<933803FFC0041F13F8167F4BB5
FC5D030F14F05D5D5D9239FFF801E04A9038E000204A0180130093C8FC4A5A4A5AA24A5A
A2143F5D147FA34A5AA5495BA5495BA44990C9FCA2001FB612FCA3485DA5485D26001FFC
C9FCA4495AA4495AA5495AA5485BA4485BA54890CAFCA5485AA5485AA4485AA5485AA548
5AA2356573E429>I<DC07FCEC1FE0933A3FFF8003FF93B5EAE01F03036EB5FC030F91B6
FC5D157F92B9FC4AEBF80F4AD9C0030180C7FC4C6C7F4A48C7FC4A5A4A486E7EA24A5AA2
4A5AA24A5AA449494A5AA34D5BA34D90C8FC4D5A6D7F4D5A6F495A173FDA7FF8EBFFF0DB
FE075B91B75A495E494BC9FC5FD907FB5CD90FF114E0DAF07F90CAFC9138E00FF8011F90
CCFCA3133FA3808091B612E017FF18E06D16F8848484498390B97E5A5A4801C0C78091C8
120F4848150348488149814848167FA2485AA400FF4D5AA24D5B007F5E6D4B90C8FC6D4B
5A6C6C153F01FFEDFFFC6C01C001075B6C01FC017F13E06C90B75A6C5F6C4CC9FC6C16F8
013F15E0010F1580010102F8CAFCD9001F13804B5D7FBE43>I<EC1FFEA3EC3FFCA5EC7F
F8A491C7FCB3A3EB07FFA3495AA5495AA5495AA4495AA5495AA5485BA4485BA54890C7FC
A5485AA5485AA4485AA5485AA5485AA21F5F76DE20>105 D<943801FFE0A34D13C0A54D
1380A494C8FCB3A3EF7FF0A34D5AA54C5BA54C5BA44C90C7FCA54C5AA54C5AA44C5AA54C
5AA54C5AA54B5BA44B5BA54B90C8FCA54B5AA44B5AA54B5AA45E157FA24B5A00085B0018
495B001E5B003F011F5B01F1B5C9FC48B6FC5DB65A5D6C5C001F14C000075C000149CAFC
38001FF03B7C8EDE24>I<EC07FFA44A5AA44A5AA54A5AA54A5AA44A5AA5495BA5495BA4
4990CAFCA2F07FFEF0FFF84D13F04948020713E04D13C04D13804D13004D5A4948ECFFF8
4C5B04075B4C5B4C5B49484990C7FCEE7FFC4C5A03035B4948485B4B5B4B5B4B90C8FCED
7FFC4948485A02E35B14E714EF91B57E5A82A2825AEDCFFF158FECFE0F4A6C7F4813F84A
6C7F14E04A6C7F14804848C77FA2707EA348486E7EA2707EA248486E7EA2707FA2707F48
5AA2707FA2707F485A717E3F6476E342>I<EC07FFA4EC0FFEA4EC1FFCA5EC3FF8A5EC7F
F0A4ECFFE0A54913C0A5491380A4491300A5495AA5495AA5495AA4495AA5495AA5485BA4
485BA54890C7FCA5485AA5485AA4485AA5485AA5485AA2206476E320>I<932603FF80EC
0FFED907FF011F01F091387FFFC093B500FC0103B512F003036E010F8090260FFE0F6E01
3F804B6F4880037F0381B6FC92B700C38191B812C749DA007F9038CFFC0103FC010F9027
FFF0003F138003F06D02C07F4B6D4A7F4B6D91C77E49495D92C75C4A5EA249484C16004A
5EA34A5E01FF4B4C5A4A5EA448494A90C8485AA448494A484B5AA54890C848484B5AA548
484B484B5AA548484B484A5BA448484B484A5BA548484A494A90C7FCA548484A494A5AA2
613F76BE6C>I<EE03FFD907FF013F13E093B512F803038090260FFE0F804B80157F92B7
128091B8FC49EC007F03FC011F13C003F013075D4B7F495B92C7FC5CA2494816805CA25C
A201FF4B13005CA448494A5AA448494A5AA54890C8485AA548484B5AA548484B5AA44848
4A5BA548484A5BA548484A90C7FCA23A3F76BE45>I<EEFF80030F13F8037F13FE4AB67E
020781021F814A814A8149B77E49D9FE017F499039E0007FFF490180131F4990C76C1380
D93FFC804A8049486E13C0495A485B7113E0485B4890C9FCA24848167FA2485AA25B123F
18FF5B127FA300FF4C13C05BA34D1380A25F1900A24D5AA24D5A6D153F60007F4C5A6D15
FF4C5B6C6C4A5B6D4A5B161F6C6C6C4990C7FC6EEBFFFE6CD9F80713F86C90B65A6C5E6C
5E6C93C8FC6D5C6D14F8010F14E0010391C9FC9038003FF03B4176BF43>I<EF07FEDA1F
FC90387FFFC00403B57E041F8091263FF87F8093B67E03FB8192B8FCA24AD9FC03148093
38E0007F04806D13C04BC77E4B804A486E13E04B805D84495B1AF084A3495BA31AE0A249
90C9FCA449484B13C0A44E1380495A601A0060614948151F61183F4E5A18FF017F4B5B4D
5B6E5C4D5B496C023F5B6E91B5C7FCDB80035BDBE01F5B92B65A485F02DF5D02CF5D02C7
92C8FC02C15C48018014F8033F13C0DB03FEC9FC92CBFC4890CCFCA5485AA5485AA4485A
A5485AA5485AA2445B7CBE45>I<DB0FFCEB3FF892387FFF804AB512E0020714F0021F91
38F87FF04A14FC91B612FE4915FF4916FF49020014E04901F8133F4901E07F4901807F49
48C7FC4A6E13C0495A485B4849804A1680485BA24890C8FC5B001F4C13005B123F5BA200
7F4C5A5BA348484B5AA54D5AA54D5A7FA317FF6D4A5BA26C6C5C6D140F6D4A5B6C6D5B02
E090B5FC6CEBF80791B7FC6C5F6C15F316E36C1583C6ECFE036DD9F80790C7FC011F13E0
903807FE0090C8FC4C5AA54C5AA54C5AA44C5AA54C5AA54B5BA23D5B76BE45>I<177CD9
07FEEB07FC163F16FF90260FFC0313F85D151F5D5D4948B512F002F9EBFE0002FB13F091
B512804BC7FC495B15F05D5D495B92C8FC5C5CA2495A5CA25CA25A5CA3485BA54890C9FC
A5485AA5485AA4485AA5485AA5485AA22E3F76BE2E>I<92380FFF8092B512F8020714FF
021F15804A15E04A15F049B7FC5B18E049EBC0034990C7EA3FC0D91FFC140F4A14034948
EC018094C7FC5C137FA313FFA38080EB7FFEECFFC015FE6DEBFFE016FC6D14FF6D816D81
6D816D816D6C80141F020180EC000F03007F163F161F160FA21607A44C5AA21208001C4B
5A001E153FD81F805DD83FE014FF01F801035B277FFF800F5B91B6FC5FB8C7FC6C5D001F
15F800075D000115C0D8003F49C8FC010113E034417BBF34>I<EC7FF04A5AA5495BA549
5BA44990C8FCA2003FB712C0A3481680A5B8120026001FFCC8FCA4495AA4495AA5495AA5
485BA4485BA54890C9FCA5485AA5121F5BA26D801503150F153F9038FF01FF91B5FCA37E
4BC7FC6C14F815C06C49C8FCC613C02A5073CE31>I<D91FFCEDFFE0A349484A13C0A549
484A1380A549484A1300A448494A5AA548494A5AA54890C8485AA448484B5AA548484B5A
A548484A5BA35EA248484A5B5E5E5E4C90C7FC4BB5FC486C130701FE133F6CB8FC5F16EF
168F6CECFE0F15F86C9138C01FFC0007EBFE00000101C090C9FC3B3F74BD45>I<D8FFF0
923803FF804D1300A2007F4C5AA24D5A173F6D5E4D5AA2003F4C5AA24C5B5E6D5E4C90C7
FCA2001F4B5AA24C5AA26D4A5A4C5AA2000F4B5AA24B5BA24B5B6D92C8FC5D6C4A5AA24B
5AA24B5A5E6C147F5EEC80FF5E14815E028390C9FC7EEC87FEA2EC8FFCA2EC9FF85D7EEC
BFE0A2ECFFC0A25D92CAFC7F5CA25C393E71BD3E>I<D8FFE0912603FF80EC0FFE5EF31F
FC6D5CF33FF85E007FF27FF05EDDBFC0ECFFE0EE7F3F057F4A13C004FF178004FE5D0301
180062DB03FC5E6D180FDB07F85E003F191F030F5F04F0153F031F5F04E06D137F033F5F
04C015FF037F5F61DBFF805E614A010093C7FC001F604B5E0203160F4B5E0207161F01FC
495E020F163F4B013F5C141F4B4B5AA24A484B5AA2000F494802E15BA2D9F8FF94C8FC92
C713E361D9F9FE15E7615C01FB92381FEFF85C61D9FFF015FF6C605C4A5EA24A5EA291C8
91C9FC573E71BD5C>I<DAFFF0923803FF804F1300147F4F5A191F6F5E193F62023F4C5A
A26F4B5A6062021F4B5BA24E90C7FC814E5A140F4E5A4E5AA26F4A5AA26E4B5AA24D5B61
705A6E4A90C8FCA24D5A60171F6E5D173F60EEC07F604D5A8004C15BA295C9FC16C3037F
5BEEC7FCA2EECFF8A2033F5BEEDFE0A25F16FF5F8194CAFC5EA25E150F4B5AA24B5A5E15
7F4B5AA24A5B93CBFC5C5D14074A5AA24A5A4A5AA24A5A0060495AD87E035B007FB5FC92
CCFC5CB55A5C5C14C05CD81FFCCDFC495B81BD3E>121 D E /Fi
9 107 df<007FBC12FCBD12FEA46C1BFC570674A670>0 D<15F84A7EA24A7E6E5AA90008
1780003EEE03E0007F6D48EB07F0D8FFC0ED1FF86D153F6D157FD87FFC913801FFF06D5C
D81FFF4A13C0000701C0011F1300000101E0EB3FFC26003FF0EB7FE0903A0FFCF9FF8090
2703FE73FEC7FC903900FF77F891383FFFE0020F1380DA03FEC8FCA291380FFF80023F13
E09138FF77F8903903FE73FE903A0FFCF9FF80903A3FF0F87FE02601FFE0EB3FFC000701
C06DB4FC001F0100010713C0D87FFE6E13F04980D8FFF09138007FF849153F49151F6CC7
EC07F0003E496CEB03E00008EE0080C71600A94A7E6E5AA26E5A353E77C248>3
D<913803FF80021F13F091B512FE01036E7E4981011F15F04981498190B77E4882481780
4817C0A24817E0A24817F04817F8A34817FCA3B912FEAC6C17FCA36C17F8A36C17F06C17
E0A26C17C0A26C17806C17006C5E6D5D6D5D6D5D010715C06D5D01004AC7FC021F13F002
031380373878BF48>15 D<0407B812FC93B912FE1507153F92BAFC020319FC4A01FCCBFC
021F1380DA3FFCCCFCECFFE04913804990CDFCEB07FC495AEB1FE0495A495A49CEFC5B48
5A485AA2485A5B120F5B121F5B123F90CFFCA25A127EA312FE5AAC7E127EA3127F7EA27F
121F7F120F7F12077F6C7EA26C7E6C7E7F6D7E6D7E6D7EEB0FF86D7E6DB4FC6D7F6D13E0
EC3FFC6EB47E020713FC6E90B912FC020019FE153F15071500040717FC93CCFCB3A4000F
BC12FC481BFEA46C1BFC577074DA70>18 D<007FBB12FCBC12FEA47ECE127EB3AD1B3C1B
184F2778B260>58 D<EE03804C7E4C7EA34C7EA24C7EA24C7E167EA2EEFEFEEEFC7E0301
137F4C7E030380EEF01F030780EEE00FA2030F80EEC007031F80EE8003033F80EE0001A2
4B80037E130003FE804B147E0201157F4B800203824B141FA20207824B140F020F824B14
07021F824B1403023F8292C81201A24A82027E150002FE824A167E0101177F4A82A20103
844A161F0107844A160F010F844A1607011F844A1603A2013F8491CA12014984017E1700
01FE8449187E0001197F4984A200031A8049181F00071AC049180F000F1AE0491807A200
1F1AF0491803003F1AF890CC1201481AFC007E190000FE1AFE481A7EA2481A3E00781A1C
4F5978D560>94 D<EF3FE0EE07FF163F9338FFF800030313C04B90C7FCED1FFC4B5AED7F
E015FF5E4A5B5C93C8FCA25C5DB3B3A6140F5DA24A5A143F5D4A5A4A5A01035B4990C9FC
EB1FFCEBFFF8007F13E0B5CAFCA26C13E0C613F8EB1FFCEB07FF6D7F01007F6E7E6E7E81
141F6E7EA2811407B3B3A68180A282806E7F82157FED3FF86F7EED07FF6F13C0030013F8
93383FFFE01607EE003F339076EB48>102 D<EA7F80EAFFFCEBFF80000313F038003FFC
EB0FFE903803FF806D7F6D7F6E7E143F6E7E81140FA2811407B3B3A68180A26E7F82806F
7E6F7E6F7EED0FFE6F6C7E030113E09239007FFFC0040F13E0A2047F13C0923901FFE000
030713804B48C7FCED1FF84B5A4B5A4B5A5C5E4A90C8FCA25C5DB3B3A6140F5DA2141F5D
4A5A147F4A5A495B495BD90FFEC9FCEB3FFC3803FFF0B5128001FCCAFCEA7F80339076EB
48>I<127812FCB3B3B3B3B3B3B3B0127806906FEB28>106 D E /Fj
73 123 df<DB1FFEED7FF892B500E00103B512800203160F4A163F021F5E4A4BB6FC4A5D
91B65B5BDBF00349EBC00F499028C000201FFEC7FC4990C8484814004A5E010F4C5A4A5E
A249484B5AA3013F5DB3A2B700F091B57EA926003FF8C702C0C8FCB3B3B151657DE44F>
11 D<923AFF8003FFC0020313F0140F5C5C5C91B5FC5B5B158049EB00104A1300010F92
C8FC5CA2495AA4133FB3A2B739F001FFC0A926003FF8C7FCB3B3B13A657DE448>I<EDFF
8002039039F001FFC0140F5C5C5C91B5FC5B5B158049EB00104A1300130F5CA2495AA413
3FB3A2B712F0A926003FF8C7FCB3B3B13A657DE448>I<DB3FF8DA03FEEB0FFF4AB59138
0FFFC00207163F4A5E4A93B5FC4A5D4A5D91B65B495E49D9E01FECFE03DB800190391FFC
00404990C84913004A033F92C7FC49485EA2011F4C5A5CA3013F16FFB3A2B700F091B538
C007FFA926003FF8C801E0C7FCB3B3B160657DE46E>I<EA7FF8AC1207EA0FF0A313E012
1F13C0A3EA3F80A313005AA2127EA212FE0D1E75E325>39 D<ED7FC0EDFF804A13004A5A
4A5A140F4A5A5D4A5A147F4A5A5D5B4990C7FCA2495A495AA2495AA2495AA2137F5CA249
5AA25A5CA25A91C8FCA25A5BA2120FA25BA2121FA35B123FA55B127FA85B12FFB3A7127F
7FA8123F7FA5121F7FA3120FA27FA21207A27F7EA2807EA2807EA26D7EA280133FA26D7E
A26D7EA26D7E6D7EA26D7F7F816E7E143F6E7E816E7E14076E7E6E7E6E1380ED7FC0228F
76EA34>I<B47E6C7E6C7E6C7E6C7E7F6C7E12036C7E806C7F137F806D7EA26D7E6D7EA2
6D7EA26D7EA2817FA26D7FA281147FA281143FA281141FA281A2140FA281A3140781A580
1680A88016C0B3A716805CA816005CA55D140FA35DA2141FA25DA2143F5DA2147F5DA214
FF5DA2495BA25B92C7FCA2495AA2495AA2495A495AA2495A5C13FF485B91C8FC485A1207
485A5B485A485A485A485A228F79EA34>I<EA7FF8AC1207EA0FF0A313E0121F13C0A3EA
3F80A313005AA2127EA212FE0D1E758B25>44 D<B712F0A924097FA32D>I<EAFFF0AC0C
0C748B25>I<4AB47E020F13F0027F13FE91B6FC010315C049814981498149814901007F
D9FFFCEB3FFF02F0130F48496D138048496D13C04A7F4890C813E0A249157F000F17F049
153F001F17F8A249151FA2003F17FCA249150FA2007F17FEA4491507A400FF17FFB3A900
7F17FE6D150FA6003F17FC6D151FA3001F17F86D153FA36C6CED7FF0A26C6CEDFFE0A26E
5B6C6D4913C0A26C6D4913806C01F8011F13006E5B903A7FFF81FFFE6D90B55A6D5D6D5D
6D5D6D5D010092C7FC6E5B020F13F00201138038627BDF43>48 D<157015F01401140714
0F143F14FF1307137FB6FCA6147F13F81380C7FCB3B3B3AFB812F8A92D6074DF43>I<EC
0FFE91B512E0010314F8010F14FE49804915C0498190B77E488248D9E00F7F48D900017F
496D6C7E484880496E1380484880496E13C048488018E0484880A27013F048C9FC177F7E
007E17F8123E121E120C173F1204CAFCA2177FA318F0A317FF18E0A25E18C05E18804C13
00A24C5A161F5F4C5A4C5A4C5AA24B5B4B5B4B90C7FC4B5A4B5A4B5A4B5A5E4B5A4A5B4A
90C8FC4A5A4A5A4A5A4A5A4A5A4A5A495B4990C9FC495AA2495A495A495A495A495A485B
4890CAFC485A5B485A485A485A48B812F8A935607ADF43>I<EC07FF027F13E049B512FC
010714FF011F814915E090B77E4882488248D9FC017F489038E0007F91C7EA1FFF48486E
1380D83FF880496E13C0485A6C488018E06C5A6CC8FC6C8112061202CAFC5EA318C05EA2
18805EA24C13005E4C5A4C5A16FF4B5B030F5B0203B55A91B65A5F94C7FC16FC5E8216FF
17C083DA000313F89238007FFC707EEE0FFF7013808218C07013E08218F0A2EF7FF8A317
3F18FCA912400060EE7FF8A21270007816FF00F817F07E6C4B13E06C5DD87FC016C06D5C
D83FF84A1380D81FFE4A13006C6C6C137F6C9039F803FFFE6C90B65A6C5E6C5E6D5D011F
15806D92C7FC010114FC6D6C13E0020790C8FC36627ADF43>I<EEFFF85DA25DA25D16BF
150FA2151FA2ED3F3FA2157F15FF15FE1401A2140315FC1407A2EC0FF8A2EC1FF0A2143F
EC7FE0A2ECFFC0A25B15805B15005B5C130F5C131F495AA2495AA2495AA2485BA2485BA2
4890C7FCA2485A121F5B123F5B485AA2485A90B912C0A9C9D83FF8C7FCB3A73A5E7CDD43
>I<0003B812E0A90280C9FCB3A7ED7FE0913883FFFC028F13FF02BF8091B612E0838383
839238C07FFFDB001F138002FC13074A6D13C002E06D13E0A24A6D13F05CEF7FF891C8FC
CA123F18FCA4171F18FEACEF3FFCA31208001CEE7FF8A2123E003FEEFFF0486C5C6D16E0
486C5C6C6C4A13C001FC4A13806C6C4A1300261FFFC0137F6C9039F803FFFE6C90B65A6C
5E6C5E6C6C15C06D5D010F4AC7FC010314F8D9007F13E0DA07FEC8FC37607CDD43>I<ED
07FF033F13F092B512FC020314FF140F5C147F91B7FC5B49EBFC004901E0130F49491303
92C9FC495A495A495A5C495A5C5A485BA24890CAFCA25B120F5B121FA25B123FED0FF892
B5FCD9F00380007F010F14E0023F804A8001F1B6FC01F3814981D8FFEF01007FD9FFF813
3F4A010F138002C07F4A6D13C091C7FC7013E049804916F0177F5BEF3FF8A25BA3EF1FFC
A6127FA7123FA36D16F8001F163FA36D16F0000F167FA26DEDFFE012076D4A13C07E6E49
13806C6D5B6E4913006C6D495A6D6C133F9139FF01FFFC6D90B55A6D5D6D5D6D5D6D5D01
004AC7FC6E5B021F13F0020190C8FC36627ADF43>I<B912FCA9CA1207EF0FF8EF1FF017
3FEF7FE018C017FF4C138018005E4C5A4C5AA24C5AA24C5A167F5F16FF5F5D4B5BA24B90
C7FCA24B5AA24B5AA24B5AA34B5AA24B5AA25C5EA25C5EA25C93C8FCA25C5DA2141FA25D
143FA35D147FA45D14FFA55D5BA8495BAC365F7ADD43>I<EC03FF023F13F091B512FC01
0314FF010F15C04981017F15F890B77E4882ECFE01489039F0003FFF4801C0010F138048
90C7000313C0498048486E13E0A249157F4848ED3FF0A34848ED1FF8A96C6CED3FF0A36C
6CED7FE0A26C6CEDFFC06D5C6C6C4A13806C6D4913006C6D495A6C01F0EB3FFC903A7FFF
03FFF86D90B55A010F15C06D5D01014AC7FC6D6C13F849B512FE01076E7E011F15E04981
90267FFC007FD9FFF0EB3FFC4801C0EB0FFE48496D7E4890C76C138048486E13C0498000
1F17E049157F003F17F049153F007F17F8A34848ED1FFCAB6C6CED3FF8A46C6CED7FF0A2
6C6CEDFFE0A26C6C4A13C06D5C6C6D49138002E0131F6C6D4913006C9039FE01FFFE6C90
B65A6D5D6D5D6D5D6D5D010392C7FC010014FC023F13F0020390C8FC36627ADF43>I<EC
03FF021F13E0027F13F849B512FE4980010F81498149814981DAFE017F903AFFF8007FFC
4801E0131F48496D7E4849130791C77F484880188048488018C0484880A24916E0007F16
7FA218F05B00FF163FA318F8A718FCA66C7EA3177FA26C6C15FFA27F001F5D6D5C6C7E5E
6C6D5B6E133F6C01F05B9139FC03FFDF6C90B6EA9FF86C163F6D14FE16F86D14F06D14C0
0107020013F06D13FC9026007FC0137F91C8FC18E0A217FF18C0A25E18805E18005E5F16
0F5F161F4C5A6D4A5A486C14FF6D495B486C495B01FC010F5B3907FF807F91B6C7FC485D
6C15F86C5D6C5D6C6C14806D91C8FC010713F8010013C036627ADF43>I<EAFFF0ACC7FC
B3B3A2EAFFF0AC0C3E74BD25>I<EC7FFC010FB512C0017F14F848B612FE000781001F16
C0007F82B87E836CEBC00701FCC77F01E0EC3FFED83F80141F003EC8120F001C82001881
C9FC701380A95E1800A25E4C5A163F167F4C5A4B5B5D4B5B5F4B5B4B5B4B90C7FC5E4B5A
4B5A5E4A5BA24A5B5EA24A90C8FCA24A5AA25DA2141F5DA4143F5DAD91CAFCAEEC7FF8AC
316579E440>63 D<EE3FFEA24C7EA393B57EA34B80A34B487FA2177F03078016FCA2030F
6D7EA216F8031F80171FDB3FF07FA2170F037F8016E08303FF8116C0A24A6E7F1680A24A
6E7F1600A24A6E7F5DA2020F6F7E5DA2021F6F7E5DA2023F6F7E5DA2027F6F7EA24A4882
84A2494982845D49848492C8FC4984845C49B97EA34984A34984A202F0C9121F017F8485
5C01FF8585484984A285484984A2854890CA80A2854848851A7FA24848851A3FA2484885
1A1FA2484885865B00FF1B808651647CE35A>65 D<B712FEEEFFF017FE717E18F08418FE
8401F0C7001F80040114E0DC003F7F050F7F170305007F727E183F727E84721380A2841A
C084A6601A80A2601A00604E5A183F4E5A4E5A4D5B05075B051F5B057F5B0407B5C7FC90
B812FC6018E095C8FC17F8EFFF8018F018FC18FF9026F0000181DB000114E0DC001F7F05
0713FC05017F716C7E84060F13807213C07213E0847213F0A2F17FF8A2193F1AFCA2191F
A5193FA21AF8197FA219FF1AF0604E13E0604E13C04E1380187F4DB5120005075B051F5B
0403B55A90B912E06196C7FC6018F818C04DC8FC17E0466474E35A>I<933807FFF0047F
EBFF800303B612F8031F15FF4B16C092B812F014035C4A17E0023F9038FC003F4A01E013
0391B5C8127F4949151F4901F815074949ED03C04901C015004B16404990CBFC495A495A
A2495A5C5A485B5CA2485BA24890CCFCA25A5BA2123F5BA3485AA6485AB06C7EA66C7EA3
7F121FA27F7EA26C7FA26C7FA2806C7F7E806D7EA26D7E6D6C17106D6D16306F16F06D01
F015016D6D15036D01FEED0FF86D6D153F6E01E0EB01FF6E01FC131F020F90B7FC6E17F0
6E17C002001780033FEDFE006F15F8030315E0DB007F91C7FC040713F0456877E556>I<
B812C017FCEFFF8018E018F88418FF8501F0C7000314E0DC003F7F050F7F05037F05007F
727E061F7F84727F727F727F8486197F737E86191F737EA2851B80A27313C0A2851BE0A3
851BF0A41A7FA21BF8B01BF01AFFA41BE061A31BC061A24F1380A24F1300A261624F5AA2
4F5A19FF4E5B4E5B604E5B4E5B4E90C7FCF0FFFE05035B050F5B053F5B0403B55A90B95A
96C8FC6018F818E0188005FCC9FC17C04D6474E361>I<BA12F0A901F0CBFCB3B090B9FC
A901F0CBFCB3B3A290B912F8AA3D6474E350>I<BA12C0A901F0CBFCB3B290B812F8A901
F0CBFCB3B3AA3A6474E34D>I<933807FFE0047F13FF0303B612F0030F15FC033FEDFF80
92B812E0020317F84A17FC5C023F9038FC003F4A01E0010313F891B5C8127F4949151F49
01F81507494915034901C015004B16704990CA1230494817101A00495A495A5C5A5C485B
A2485BA24890CCFCA25A5BA2123F5BA3127F5BA5485AAF051FB512FE6C7EA57F123FA294
C7120F7F121FA27F7EA26C7FA26C7FA26C7F807E806D7E6D7EA26D7E6D7F816D13F06D7F
6D13FE6D6D151F6E01E0EB01FF6E01FC133F020F90B7FC806E17FC020017F0033F168003
0FEDFE00030315F0DB007F91C7FC040713E0476877E55A>I<EAFFF0B3B3B3B3B3AA0C64
74E325>73 D<EE3FFCB3B3B3B3AB167F17F81220003015FF1278007C4A13F0007E5CD87F
80010F13E001E0133FD9FE01B512C0B8FC178017006C5D001F5D000315F0C615C0011F91
C7FC010013F02E667AE340>I<D8FFF094381FFF804F13004F5A4F5A4E5B4E5B4E5B4E5B
4E5B97C7FC604E5A4E5A4D5B4D5B4D5B4D5B4D5B4D90C8FC60177F4D5A4C5B4C5B4C5B4C
5B4C5B4C90C9FC4C5A5F16FF4B5B4B5B4B5B4B5B4B5B4B90CAFC4B5A4B5A5E5C4A7F4A7F
5C4A7F4A805C91B67E13F103F37F01F38101F713E190B500C07F5D4B6C7E4A804A133F4A
6D7E4A814A7F4A81824A6D7F91C7804980496E7F5B496F7E84173F717E85838583717F85
83717FA2727E85183F727EA2727F8684727F8684727FA2737E86193F737EA27313801BC0
4A6474E35D>I<EAFFF0B3B3B3B3B390B812FCA9366474E349>I<B56C95383FFFE0A36E60
A36E95B5FCA36E5FA2D9EFF84D5AA3D9E7FC4D5AA36E170F01E361A26E171FA201E1616F
163FA301E06D4C5AA36E6C4C5AA26F5D023F60A26F5D021F60A26F5D020F5FA26F150F02
075FA26F151F6E5FA270143F6E5FA270147F6E5FA27014FF037F5EA2705B033F5EA2705B
031F93C7FCA2705B030F5DA270130F03075DA270131F6F5DA2EF803F6F5DA2EFC07F6F5D
A3706C485AA2043F5C17F1A2041F91C8FCA217FB040F5BA217FF705BA3705BA3705BA370
5B94CAFCA25B6473E376>I<B500C0EE1FFCA280A280A280A380A2EBEFFEA2EBE7FFA201
E37FA28113E18113E081147F81143FA281141F81140F8180828082A26E7FA26E7FA2157F
82153F82151F82150F82A26F7FA26F7FA281838183167F83163F83A2707EA2707EA28218
808218C08218E08218F0177FA218F8173F18FC171F18FE170F18FF83A271139FA27113DF
A27113FFA284A384A284A284A2466474E35F>I<EE0FFF93B512F0030714FE031F6E7E03
7F15E04AB712F84A82020F16FF4A834AD9F801804A9026C0003F7F91B5C7000F7F4901FC
02037F4901F002007F49496F7E49496F7E4990C9000F7F4A824948707F017F854A824948
707F4849717EA24849717EA24849717EA291CB120F48864984001F1B80A24984003F1BC0
A34984007F1BE0A44984A200FF1BF0AF6D60007F1BE0A56D60003F1BC0A36D60001F1B80
A26D606C1B006E5FA26C626E173F6C626E177F6C6D4D5AA26C6D4C5B6D6C4C5BA26D6C4C
5B6D6C4C5B6F5D6D6D4B90C7FC6D6D4B5A6D01F84A485A6D6D4A5B6D01FF020F5B6E01C0
013F5B6ED9F801B55A6E90B75A6E94C8FC020316FC6E5E6E6C15E0031F158003074AC9FC
030014F0040F90CAFC546879E563>I<B8FC17F017FE717E18E018F8848401F0C700076D
7EDC007F7F051F7F05077F8305007F727E183F727EA2727E841A80A284A21AC0A284A660
A21A80A260A21A00604E5AA24E5A187F4E5A5F05075B051F5B057F5B0407B55A90B9C7FC
6018F86018C095C8FC17FC17C001F0CCFCB3B3A6426474E356>I<EE0FFF93B512F00307
14FE031F6E7E037F15E04AB712F84A82020F16FF4A834AD9F801804A9026C0003F7F91B5
C7000F7F4901FC02037F4901F002007F49496F7E49496F7E49496F7F92C97E4948707F49
48707F4A8201FF854849707F4A177F48864A173F48864A171FA24890CB6C7EA248487213
80A348487213C0A448487213E0A648487213F0B0007F1BE06D60A56C6C4E13C0A46C6C4E
1380A36C6C4E130093380FFF806E6D5D6C715C707F6C6D6D4B5A6E6F137F6C6F6D5C6E02
7F14FF6C715C6D6C6E6C485B6E6E6C5A6D6C4C5B6D6C6E018F5B6F15DF6D6D6D90B5C7FC
6D6D6D5C6D6D5E6D01FC6D5C6D01FF6D5C6E01C05D6ED9F8015C6E90B75A6E94C8FC1403
6E836E6C82031F821507030002F37F040F01017F93C8FC86737EA2737E737FA2737F737F
8785737F8785747E87547879E563>I<B712FEEEFFF017FEEFFFC018F018FC84727E01F0
C7000380DC003F7F050F7F05037F05007F727E181F8584721380841AC084A21AE0A284A5
60A21AC0A260A24E1380601A0060F07FFE4E5A05035B5F053F5B0403B55A90B9128096C7
FC6018F86018C04DC8FC17F0A201F0C76C7E163F83707E160F83828482848284707FA271
7EA2717E171F84170F84717FA2717FA2717FA2717F187F85183F85727EA2727EA2721380
A27213C0A27213E07213F0A2F17FF8A2F13FFC466474E357>I<ED7FFE0207B512E0021F
14FE91B77E4916E0010716F84916FE49825B5B90B5D8C0035B4849C7123F4801F8140F48
01E014034A14004849153E91C9121C4848160C491604003F94C7FC5BA3485AA77FA2123F
7FA27F6C7E806C7F806C13F814FE6CEBFFC06C14FC6CECFFC016F86DECFF80011F15E06D
15F86D15FE0101816D16C0021F81020781DA007F80030F80030080160F04017F706C1380
83050F13C0837113E0A27113F083A2187F19F8A2183FA9F07FF0A21220003017FF003818
E0007C5E007F4C13C07F01E04B13806D5D01FE033F1300B56C4A5A02F0EB01FF9126FF80
1F5B6C91B65A001F5F6C5F00035FC694C7FC013F5D010F15F8010115E0D9001F91C8FC02
0013F03D687AE54B>I<BD1280A9C9D81FFECAFCB3B3B3B3B351647BE35C>I<D8FFF0EFFF
E0B3B3B3B36C6C4C13C0A4003F4D13807FA26C6C4C1300A2000F4D5A7F6C6D4B5A183F6C
6D5E6E157F6C6D4B5A6C6D4A5B6D6C02075B6DB44A5B6D01C0017F90C7FC6D9039F803FF
FE6D90B65A6D5E01005E6E15C0021F92C8FC020714FC020014E0DB0FFEC9FC436674E35C
>I<D8FFF8F13FF81B7F007F1BF07F1BFF003F1BE07F001F4F13C0A26D606C1B8080626C
1B0080626C62806C4F5AA2806C4F5A801A7F017F61801AFF013F6180011F4D5BA2806D4D
5BA26F5D6D96C7FC81616D60816D4D5AA2816D4D5AA281027F4C5AA281023F4C5AA26E6C
4A5BA2816E4B5BA2826E4B90C8FCA2826E4B5AA26E6D5C181FA26E6D5C183FA26F6C5C18
7FA26F6C5C18FFA26F6C5C5F030F5D16FF5F6F92C9FC178317876F5CA217C76FEBCFFCA2
6F5C17EF17FF705BA3705BA3705BA2705BA255647EE35A>I<D8FFF0932601FFF0933801
FFC0606C6C72188067A26D5E003F734C1300A36D5E001F734C5A19F7A26D93381FF3FF6C
545AA2183F6C6D04E36D5E1F3F19E1187F6C6D725E07C1177FA26EEDFFC06C744B5A61A2
6E4A147F6C744A5BA219006D6C4A6F5E083F5DA2606D6C02076F93C7FC081F5DA24D5A6D
6C725D080F150FA24D5A6D6C725D74151FA26D4B48606F8474153FA26D4B48606F847415
7FA26D4B48606F847415FFA26D4C606F4883097F5B027F6495C8FC6F48EE3FF865023F4A
96C8FCA20407161F03FC18FC021F4A4D5AA21B0FDBFE0F17FE020F4A4D5AA21B07020763
6F484816FF1D1F876E635F8704BF189F6E4AEFBFE0A287A26ED9FF80EFFFC0A2886F6294
CAFCA2886F97C9FC5E88A27A647EE37F>I<D83FFFF03FFE6C6D177F6C626E4D5A6C6D4C
5B6C7F4F5B6C6D4C5B6C7F017F4D5B6E4C90C7FC6D7E6D4D5A6F4B5A6D7F6D4D5A6D6D4A
5B816D6D4A5B6D4C5B816E6C4A5B023F4B90C8FC6E7E70495A6E4B5A6E7F70495A6E4A5B
6E13F06E6D485B70485B037F5D6F6C5A704890C9FC6F5C6F13BF6FEBFFFC60816F5C6081
705B705BA27090CAFCA34C7F4C7F8493B5FC4B80845D4BEBBFFC844BEB1FFF4B487E854B
486C7F4B487E854B486C7F4A497E854A496D7E4A6F7E4C131F4A90C77F4A6F7F4A48804B
82027F6F7F4A486E7F5D49707F49496F7E5D49717E49496F7E92C98049834948707F4A84
017F834948707F874849707F4849177F874849717E4849831C804890CB6C13C048487213
E0A248487213F048487213F855647EE35A>I<D8FFFCF11FFE1B3F6C6C1AFC6C6CF17FF8
1BFF6C6D19F06C6D5F5013E06C6D19C0626C6D4D13806C6D1900626C6D606D6C4D5A1A7F
6D6C606D6D16FF4F5B6D6D5F6D6D5D636D6D4B5B6D5F6F94C7FC6D6D5D4F5A6E6C5E6E6C
157F626E6D4A5A6E6D5B626E6D495B8070495B6E6D5B6E94C8FC70495A6F6C133F616F6C
495A8171485A6F13C16F5D05E35B816F01F75B94B5C9FC81705BA2705B6082705B608270
5BB3B3A557647FE35A>I<003FBA12E0A71AC01A80CB120F4E130060614E5A18FF615F61
4D5B5F615F614D90C7FC5F60177F604D5A5E604C5B5E605E604C90C8FC5E5F167F5F4C5A
5D5F5D5F4B5B5D5F4B90C9FCA24B5A157F5E4B5A5C5E5C5E4A5B5C5E5C93CAFC4A5A147F
5D14FF5D495B5B5D495B5B5D5B92CBFC495A137F5C13FF5C485B5A5C5A5C485B5A91CCFC
485A90BA12E05ABBFCA7436479E352>I<EC1FFE0103B512C0011F14F0017F14FC48B67E
00078148168017C017E0DAC00313F049C713F8D807F0147F01C0EC3FFC5B0006C8EA1FFE
0004150FC9FCA2EE07FFAA163F92B6FC141F91B7FC1307133F5B48B8FC48ECFC07481400
4813F04813804848C7FC485A5B5B485AA55E7F5E6C6C5C6D91B5FC01FF13036CEBC01F91
B7FC7EA26C15F76C15C76C15076C14FC6C6C13E0D91FFCC8FC30417ABF41>97
D<EAFFE0B3B3ED3FF0913803FFFE021F7F027F14C001E1B67E01E78101EF8190B77E83DA
F8077FECC00091C7003F1380498001F8020713C0A2496E13E049807013F0A2177F18F8A2
173FA318FC171FACEF3FF8A4177F18F017FFA24C13E07F4C13C06D5C6D4A13805E01FF02
7F13006E48485AECF00F91B65A5F01EF5D01E75D01E3158001E092C7FC023F13FC020F13
F0C81380366576E345>I<EDFFF80207EBFF80023F14F091B612FC4915FF010716C04916
E05B5B49D9800713C0D9FFFCC7FC4849141F4801E014074A14034849140091CAFC485A12
1F5BA2485AA3485AA4485AAC6C7EA46C7EA27F121F7F000F17406D16C06C6D14016E1407
6C6D141F6C01F8EC7FE06C6DEB01FF90397FFF801F6D90B6FC7F6D16C06D16006D5D0100
15F8023F14E0020F91C7FC020013F033417CBF3C>I<EF1FFCB3B3EC0FF891387FFF8049
B512F0010714FC4914FF49159F4915FF5B90B8FC48ECC03F489038FE000702F813014801
E07F4849147F4A143F4890C8121F5BA2485AA25B127F5BA312FF5BAC7F127FA37F123FA2
7F121F6D153F6D157F6C7F6E14FF6C6D5B6C6D130702FC5B6C9038FF807F6C91B6FC6D15
DF6D159F6D151F6D14FC6D14F8010114E06D6C1300DA1FF890C7FC36657CE345>I<4AB4
FC021F13E0027F13FC49B57E01076E7E498149814981498190B51201489039F8007FFC48
49EB1FFE02C0130F48496D7E91C77E5A496E1380485A82484816C0177F5B127FA24916E0
90B8FCB9FCA701C0CAFCA37FA3127FA27FA2123F7FA26C7E7F120F6D16406C6DEC01C06E
14036C6D140F6C01F8143F6C01FE903801FFE090397FFF801F6D90B6FC7F6D16C06D1600
6D5D010015F8023F14C0020F49C7FC020013E033417CBF3C>I<ED1FFE92B512C0140314
0F5C5C5C91B6FC5BEDF007499038C000404990C8FC5C130F5C131F5CA3133FB3A2B712E0
A926003FF8C8FCB3B3B12A657DE429>I<DA07FCEC1FE0913A3FFF8003FF91B5EAE01F01
0302F8B5FC4991B6FC5B4917F05B90387FFC079026FFF00101E0C7FC489039C0007FF04A
133F488291C7121F48486E7EA448486E7EA96C6C4A5AA46C6C4A5A6E133F6C5E6E137F6C
9039F001FFE0DAFC075B91B65A4893C8FC485D5ED807FB5C01F814E0023F13809026F007
FCC9FC000F90CBFCA37FA37F6CB4FC91B512FCEEFFE06C16FC17FF6C17C06C8348834883
48834883488349C712034848DA003F138049150F48488149817113C0485A83A56D5D007F
18806D5DA2D83FFC030F13006C6C4B5A6D6C147F6C01E049485A6C01FE011F5B6C90B75A
6C5F6C6C16806D93C7FC010F15FC010115E0D9003F91C8FC020313F03C5D7CBE43>I<EA
FFE0B3B3ED7FE0913807FFFC021F13FF027F14C091B612E001E315F013E701EF15F890B7
12FCECF807ECC0004AEB7FFE91C7121F5B49EC0FFFA25B82A25BA35BB3B3A5306476E345
>I<EAFFF0ACC7FCB3A3EA7FF0B3B3B3A80C5F77DE20>I<913803FFC0AC91C8FCB3A39138
01FFC0B3B3B3B3A44A1380122000305B007C491300007E133F397FE1FFFE90B5FCB65A5D
A26C5C001F14C000075CC649C7FCEB0FF8227C89DE24>I<EAFFE0B3B3A293380FFFC04C
13804C13004C5A4C5A4B5B4B5B4B5B4B5B4B5B4B90C7FC4B5A5E4B5A4A5B4A5B4A5B5C4A
5B4A90C8FC4A5A4A5A01E15B01E35B13E701EF7F90B5FC8181A28102F77F14E702E37F02
C17F148102007F496D7E5B496D7E496D7E5B6F7E6F7FA26F7F6F7FA26F7F707EA2707E70
7EA2707E701380A27013C07013E0A27013F0EF7FF8356476E342>I<EAFFE0B3B3B3B3B3
AA0B6476E320>I<DB7FE04AB47E28FFE003FFFE020F13F8021F6D6C017F13FE027F6E48
B6FC91B66C48158001E16F4815C001E7DBF81F15E001EF6F4815F090B76C4815F8DAF803
EDE00F9126E0007F9038FF800102806D6C48C713FC91C76C49147F496E49143F70161F49
4C15FE495E70160FA2495EA3495EB3B3A5573F76BE6C>I<ED7FE03AFFE007FFFC021F13
FF027F14C091B612E001E315F013E701EF15F890B712FCECF807ECC0004AEB7FFE91C712
1F5B49EC0FFFA25B82A25BA35BB3B3A5303F76BE45>I<EDFFC0020F13FC023F13FF91B6
12C0010315F0498149814981498149D9807F7F9027FFFC000F7F4801F001037F48496D7F
4A7F48496E7E4890C86C7E49151F48486F7EA2491507003F83A24981007F1880A3498100
FF18C0AB6D5D007F1880A46C6C4B1300A26D5D001F5F6D151F000F5F6D153F6C6D4A5A6E
14FF6C6D495B6C6D495B02FC130F6C9026FF807F5B6D90B65A6D93C7FC6D5D010715F86D
5D010015C0023F91C8FC020F13FC020013C03A417CBF43>I<ED3FF03AFFE003FFFE021F
7F027F14C001E1B67E01E78101EF8190B77E83DAF8077FECC00191C76C138049141F01F8
6E13C082496E13E05B7013F082A2EF7FF8A3173FA218FCA2171FAA173F18F8A3177FA2EF
FFF0A25E18E06D5C4C13C06D5C6D4A13805E01FF91B51200DA80035BECF01F91B65A5F01
EF5D01E75D01E3158001E092C7FC023F13FC020F13F00200138092C9FCB3A9365B76BE45
>I<DA07FCEB1FFC91383FFFC091B512F0010314FC4914FE011F14FF49159F4915DF90B8
FCEDE03F48EC000F4801FC13034801F07F4A7F485B4A147F4890C8123F5B123F49151FA2
485AA25BA312FF5BAA7FA2127FA27FA2123F7FA26C7E6D153F177F6C7F6E14FF6C6D5B02
F813076C01FE5B6C9038FF807F6C91B6FC17DF6D159F6D151F010F14FC6D14F86D14E001
001400EC1FF891C8FCB3A9365B7CBE45>I<ED1F80D8FFC013FF14075C143F5C01C1B5FC
13C313C713CFEDF00001DF1380D9FFFCC7FC5C14E05C5C91C8FC5BA25BA25BA25BA35BB3
B2213F76BE2E>I<ECFFF8010FEBFF80017F14F090B612FC000315FF4816805A5A170048
EB000F01F813014848EB003F49140F1603484891C7FCA67FA26C7E13FC13FF6C13E014FF
6C14F06C14FE6C6E7E6C15E06C816C15FC013F80010F801303D9003F1480020114C0EC00
1F030713E0150181EE7FF0A2163FA512200070157F007C16E0007E15FFD87FC05B01F049
13C001FF131FB812801700A26C5D001F15F800075DC615C0011F91C7FC010013F02C417C
BF34>I<EB1FFCB1B8FCA926001FFCC8FCB3B3A380178016016D6CEB07C0161FEDC0FF92
B5FC6D15E0A27F17806DECFE006D14F06E1380DA1FF8C7FC2B507ECE31>I<D8FFE0EC07
FFB3B3A95EA25E5EA26D5C4BB5FC6D13076CB4133F91B7FCA26C15E716C76C15076C14FC
6C14F06C148026007FF0C8FC303F76BD45>I<D8FFE0923803FF806D5D007F18007F5F00
3F5F7F001F4C5AA27F000F4C5AA26D157F6C5FA26E14FF6C5F805E6C5F806C4B5BA28001
7F4A90C7FCA280013F4A5AA280011F4A5AA26D6C5C163FA26D6C5C167FA26D5DED80FFA2
6D5D8115C16D5DA2DA7FE190C8FC15E3A2023F5B15F315F7021F5BA215FF6E5BA36E5BA2
6E5BA2393E7EBD3E>I<D8FFE0912603FF80EC0FFE6D5C007FF21FFC84A26D5C003F71EC
3FF8A26DEC1FDF001FF27FF08417CF6C6C023FEEFFE084A26DEC7F8F6C4F13C0EF87FCA2
6C6D01FF1780DD07FE5BA26E4813036C4F13008416FE6CD9E0036D5D1A0F1980017F02FC
5EDAF0077FF1C01FA2013F4A5EDAF80F147FF1E03F011F4A5EA2DAFC1F143F1A7F010F4A
02F05BA2181F902607FE3F4C5A4C80180F0103615E037F15F902FF15076D05FD90C7FC93
C7FC18036D6003FE15FFA284027F5F5D84023F5F5D573E7EBD5C>I<D87FFC923803FFC0
6C6C5D001F4C13806C6C17006E4A5A6C6D4A5A6C167F6C6D5D6C6D4A5A6E495B6D6C5B01
3F5E6D6C495B6D6C4990C7FC6D6D485AA26D6D485A6D6D485A6D6D485A6E6C5B15F96EB5
5A6E5C6E91C8FC6E5BA26E5B6E5B6E5B157FA215FF4A7F4A7F824A7F5CDA1FFD7FDA3FF9
7F03F07F027F6D7E9138FFE03F4901C07F4B6C7E496E7E4901007F49487F011F6E7F4A6D
7F494881017F6E7F49486E7E485B4A6E7E48707E48496E7E4890C814808348486F13C048
4817E0007F7013F048486F13F83D3E80BD3E>I<D8FFF0923803FF805F007F18007F003F
4C5A7FA2001F4C5A7F000F163F6D5EA26C167F6E5D7E6E4A5AA27E6E495B7EA26E495B13
7F80013F4A90C7FCA26E5C011F140FA26D6C5C161FA26D6C5C163F6D5D1580167F6D5D15
C07F4C5A81147F5FEC3FE103F190C8FCA2141F5EEC0FF315FB5E1407A26EB45AA25E80A2
6E5BA35EA25E5CA293C9FC5CA25D1407A24A5AA25D141FA24A5A147F00305C383F01FF90
B55A5DA292CAFC6C5B5C5C14E000031380395B7EBD3E>I<003FB81280A718005FC9EA3F
FC167F4C5A5F5D4B5B4B5B5F5D4B90C7FC5E4B5A157F4B5A5E5C4A5B4A5B5E5C4A90C8FC
5D4A5A147F4A5A5D5B495B495B5D5B4990C9FC5C495A137F495A5C5A485B485B5C5A4890
CAFC5B48B812805AB9FCA7313E7CBD3B>I E /Fk 23 124 df<DD7FFF923807FFF8043F
B500E049B6FC4BB600F8011F15C0030F03FE90B77E037FDBFF0716F84AB5D8E007019F49
C66C7E4A01FCC790B500E0EB07FE020F01F0023F91C7EA01FF4A01C091B500FC14074A90
C74802F04A7F4A484A4A5C4A484A4A4A7F49494D5C49494A91C8FCA249495E9BB57E4976
5B4B5EA284785B727190C7FC72715A72715A9BC9FCAB0B3FB512E0C1FCA6D8000F01E0C8
49C8121F8AB3B3AF003FB6D8F803B7D8803FB612F8A67D657DE486>14
D<EA01FCEA07FF4813804813C04813E04813F0A2B512F8A76C13F0A26C13E06C13C06C13
806C1300EA01FCC8FCB3A4EA01FCEA07FF4813804813C04813E04813F0A2B512F8A76C13
F0A26C13E06C13C06C13806C1300EA01FC154074BF2D>58 D<F00FE04E7EA24E7EA34E7E
A24E7EA34D7FA24D80A24D80A34D80A24D80A34D80A2DD7FBF7FA2181F05FF8017FE0401
6D7FA24D7E04038217F804076D80A24D7E040F8217E0041F6D80A24D7F043F825F047F6E
7FA294C77E4C825E03016F7FA24C800303845E03076F80A24C80030F845E031F6F80A24C
81033F845E037F707F93B9FCA292BA7EA24A85A203FCC912070203865D020771805D8602
0F864B82021F865D87023F864B83027F8692CBFC874A864A840101875C496C728090381F
FFC0B700E092B812FEA66F647BE37A>65 D<BB12E0F2FF801BF01BFE757E1CF0D8000102
80C7000780DF007F13FE080F6D7E0801807480093F7F090F13FC757F757F877580767F8A
88767F8A888AA2767FA28A881F80A37614C0A41FE0A5881FF0B05214E0A51FC0A4521480
A31F006466A2525BA2525BA2525B666499B55A515C5191C7FC515B515B515B097F5B50B5
12C008075C083F91C8FC0707B512FCBD12F01CC051C9FC1BF81B8008E0CAFC6C627AE17C
>68 D<BD12FCA488A2D8000102C0C71201F1000F1A01F2007F1B3F1B0F1B07757EA28787
A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA31801A218031807181F18FF93B6
FCA6EEC000181F180718031801A21800A21D7E197EA21DFCA696C812011DF8A31C03A3F4
07F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13C098B5FC1A0797B6FCBEFCA31D
80A35F617AE06A>I<DBFFFCEC01E0020FD9FFE01303027F02FC130749B7130F0107EEC0
1F011F16F049D9C007EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E014014849804849
153F91C97E484882001F834982003F83845B007F187FA2193FA200FF181FA27F190FA27F
A26D17078080806C01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE6CEEFFE018
F86C17FE6C717E6C846C846D17F86D836D836D8313036D18806D6C17C0020F17E01401DA
000F16F01500040715F8EE007F1703050014FC183F84060713FE84A2007C8300FC83A219
7FA3193F7EA31AFC7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C06E4B138002
E04B130002F84B5A02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B65A6D6C5E48
011F93C7FC48010315FC48D9003F14E048020149C8FC476677E35A>83
D<913803FFFE027FEBFFF00103B612FE010F6F7E4916E090273FFE001F7FD97FE001077F
D9FFF801017F486D6D7F717E486D6E7F85717FA2717FA36C496E7FA26C5B6D5AEB1FC090
C9FCA74BB6FC157F0207B7FC147F49B61207010F14C0013FEBFE004913F048B512C04891
C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E806C047D7F6EEB01F96C6DD903
F1EBFF806C01FED90FE114FF6C9027FFC07FC01580000191B5487E6C6C4B7E011F02FC13
0F010302F001011400D9001F90CBFC49437CC14E>97 D<92380FFFF04AB67E020F15F002
3F15FC91B77E01039039FE001FFF4901F8010113804901E0010713C04901804913E0017F
90C7FC49484A13F0A2485B485B5A5C5A7113E0485B7113C048701380943800FE0095C7FC
485BA4B5FCAE7EA280A27EA2806C18FCA26C6D150119F87E6C6D15036EED07F06C18E06C
6D150F6D6DEC1FC06D01E0EC7F806D6DECFF00010701FCEB03FE6D9039FFC03FFC010091
B512F0023F5D020F1580020102FCC7FCDA000F13C03E437BC148>99
D<F17FF8050FB5FCA6EF000F8484B3A892380FFF804AB512F8020F14FE023FECFF8391B7
12E301039138807FF3499039F8000FFB011F01E00103B5FC494913004990C87E49488148
498148834A815A485BA2485BA25AA3485BA4B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F
6C6D5D6C6D5D017F93B5FC6D6C6C0103806D6D49806D01F0D91FF7EBFFFE6D9039FE01FF
E7010190B612876D6CECFE07021F14F8020314E09127003FFE00ECC0004F657BE35A>I<
92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE037F499039F0007FFF01
1F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A804884485B727E5A5C4871
7EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A27EA27E6E160FF11F806C
183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01E04A5A6D6DEC3FE00103
01FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715E0020092C8FC030713F0
41437CC14A>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDAFE03148049B7128F49
DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC0349486E6C7E4948EC3FFF48
496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60A36C6D4A5BA26C60A2
6C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C060D97C7F4AC9FCD9FC
0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE6CEFFFC019F06D17FC
19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890C9000F7F4848160148
48EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D177F6C6C4D5A6C01C003
035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F90B712F8010717E001
0094C8FC020F15F0DA003F01FCC9FC4A607CC151>103 D<EB0FE0EB3FF8497E48B5FCA2
4880A24880A76C5CA26C91C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FC
A6C6FC7F7FB3B3AEB712C0A622657BE42C>105 D<903807FF80B6FCA6C6FC7F7FB3B3B3
B3ADB712E0A623647BE32C>108 D<902607FF80D91FFFEEFFF8B691B500F00207EBFF80
040702FC023F14E0041F02FF91B612F84C6F488193267FE07F6D4801037F922781FE001F
9027E00FF0007FC6DA83F86D9026F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC780
4C6D027C80039FC76E488203BEEEFDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FC
A44B5EB3B2B7D8F007B7D8803FB612FCA67E417BC087>I<902607FF80EB1FFFB691B512
F0040714FC041F14FF4C8193267FE07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6D
D98FC0814C7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651
417BC05A>I<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C6C7E010701
F0010F13E04901C001037F49496D7F4990C87F49486F7E49486F7E48496F13804819C04A
814819E048496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13
FCA36C19F8A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D
6D495B6D6D495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC020715E002
0092C8FC030713E048437CC151>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B6
12FC038715FF038F010114C09227BFF0003F7FC6DAFFC0010F7F6D91C76C7F6D496E7F03
F86E7F4B6E7F4B17804B6F13C0A27313E0A27313F0A21BF885A21BFCA3851BFEAE4F13FC
A41BF861A21BF0611BE0611BC06F92B512801B006F5C6F4A5B6F4A5B03FF4A5B70495B04
E0017F13C09226CFFC03B55A03C7B648C7FC03C115F803C015E0041F91C8FC040313E093
CBFCB3A3B712F0A64F5D7BC05A>I<913A3FFF8007800107B5EAF81F011FECFE7F017F91
B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F49153FA212
FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C82
6C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F1500041F13F81607
007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D16C001FEED
FF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC
48010F13E035437BC140>115 D<EC07E0A6140FA5141FA3143FA2147FA214FF5BA25B5B
5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2
173F6D16006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C9126003FFC
C7FC325C7DDA3F>I<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B3A260A3
60A2607F60183E6D6D147E4E7F6D6D4948806D6DD907F0ECFF806D01FFEB3FE06D91B55A
6E1500021F5C020314F8DA003F018002F0C7FC51427BC05A>I<B700C00103B512FCA6C6
6C01C0C8381FFE006D6DED07F0A26D6D5E190F6D6D5E191F6D606F153F6D95C7FC6F5DA2
6D6D157E19FE6D6E5C18016E5E7013036E5E701307A26E6D5C180F6E6D5C181F6E6D5C18
3F6E93C8FC705BA26E6D13FEA26E6E5A17816FEBC1F817C36F5C17E76F5C17FFA26F5CA2
6F5CA26F91C9FCA26F5BA36F5BA2705AA2705AA2705AA2705A4E417DBF55>I<007FB600
C0017FB512F8A6D8001F01F8C70007EBF0006D040190C7FC6D6D5D6D6D4A5A6D6D4A5A70
495A6D4C5A6E7F6E6D495A6E6D495A7049C8FC6E4A5A6E6D485A6E6D485A6E13FFEF8FF0
6EEC9FE06FEBFFC06F5C6F91C9FC5F6F5B816F7F6F7F8481707F8493B57E4B805D4B80DB
0FF37FDB1FE17F04C080153F4B486C7F4B486C7F4A486D7F4A486D7F4A5A4B6D7F020F6E
7F4A486D7F4A486D804A5A4AC86C7F49486F7F4A6F7F0107707FEB3FFFB600F049B7FCA6
50407EBF55>120 D<BDFCA5500580A951>123 D E /Fl 36 122
df<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA27EEA1FFEEA0FFCEA03
F0C7FCA6130114E0A3130314C0A21307A21480130F14005B131E133E133C137C5B5B1201
485A485A485A48C7FC5A123E121814336EF737>39 D[<EE0780160F161FEE3E005E4B5A
4B5A15074B5A4B5A4B5A93C7FC157E15FE4A5A4A5A4A5AA24A5A141F4A5A5D147F4AC8FC
A2495AA2495A13075C130F5C131F5C133FA25C137FA2495AA34890C9FCA25A5BA21207A2
5BA2120FA25BA2121FA35B123FA6485AA812FFA35BB37FA3127FA86C7EA6121F7FA3120F
A27FA21207A27FA21203A27F7EA26C7FA36D7EA2133F80A2131F80130F8013078013036D
7EA26D7EA26E7E143F816E7E140F6E7EA26E7E6E7E6E7E157E81826F7E6F7E6F7E15036F
7EED007C82EE1F80160F1607>41 171 108 256 75 I[<127012F8127C7E7EEA0FC06C7E
7F6C7E6C7E6C7E137E7F806D7E6D7E6D7EA26D7E806D7E1300806E7EA26E7EA26E7E8114
0F81140781140381A2140181A26E7FA36F7EA282153FA282A2151FA282A2150FA282A315
0782A66F7EA81780A381B35DA31700A84B5AA65E150FA35EA2151FA25EA2153FA25EA215
7F5EA24B5AA34A90C7FCA25D1403A25D14075D140F5D141F5D4A5AA24A5AA24AC8FC5C13
01495A5C495AA2495A495A495A91C9FC137E13FE485A485A485A5B485A48CAFC123E5A5A
1270>41 171 116 256 75 I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C
13006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E487E481380A2B512C0A66C1380A2
6C13006C5A6C5AEA03F0124A6EC937>58 D<193F4F7EA34F7EA24E7FA34E7FA34E7FA34E
7FA26086A24E7FA34E80F07E7FA206FE804E7EA20501814E7E05038118F08505078118E0
85050F814E7EA2051F814E7E053F81A295C7FC4D82177E8605FE824D80A20401834D80A2
0403834D800407835F86040F834D80A2041F834D80A2043F8394C9FC4C84167E8704FE84
5E870301854C82A20303854C82A24BBA7EA24B85A34B850480C91201A2033F8593CBFCA2
4B86037E8403FE865D880201875D880203874B84A20207874B84020F87A24B84021F875D
023F858A027F858102FF885B496D87010F01F84E80013F6D4E800003B66C053F14FEB700
FC043FB812C0A67A7C78FB8C>65 D<BC7E1BFEF3FFC01CF81CFE767ED8000702E0C80001
14E001004ADB003F13F86E49040F7F6E06037F756D7E756C7F767F767F888A767F888A76
7FA2881F80A37713C0A99AB51280A3521400A2666466525B64525B66525B99B55A5149C7
FC515B090F13F0093F5B98B51280080749C8FC97B512F093B9128099C9FC1CF01CFF0480
C9003F13C0090713F0090113FC756CB4FC0A1F13C0767F767F767F7613FE767FA2771380
7713C01FE0891FF0891FF8A27713FCA31FFEAA1FFCA265A21FF8651FF0655313E0A29AB5
12C052148052140064525B525B0A7F5B99B512E04A06035C91B56C041F5C01076E4BB548
C7FCBE12F81DE01D800AFCC8FC1CE009FCC9FC6F7678F585>I<952603FFF8163895B600
C01578050703F815F8053F03FE14014CB87E040705E01303041FDAE00301F81307047F01
FCC7EA1FFC4BB500C0DA07FF130F030791C80001EB801F4B01F89238007FC0033F01E093
381FE03F4B018093380FF07F92B5CAEA03F84A01FC943801FCFF02074971B5FC4A49844A
01C0844A49844A90CC7E4A5A49874B85494985495B49875D49491A7F5B49491A3FA290B5
CE121FA2485B1E0F485BA2481D075C5A1E03A2485BA3481D015CA35A9BC7FCA35CA2B5FC
B07EA280A47E1FF8A2807EA36C7FA21E016C1EF0807E1E036C7F1FE06C7F1E076D6D1BC0
1E0F6D6D1B806D1C1F6D7F6FF23F007F6D6D1A7E6D6D62816D515A6E6C4F5A6E6D18076E
01E04E5A6E6D4E5A6E6D4E5A02016D4EC7FC6E01FF18FE6F01C0EE03FC6F6D4C5A030F01
F8EE1FF06F01FFEE7FE0030102C0913803FF806F6C01FC021F90C8FC041F903AFFE001FF
FC040791B612F004015FDC003F93C9FC050715FC050015C0060301FCCAFC6D7E74F987>
I<BF12F8A48AA2D8000702F0C9121F01004AEE007F6E4917076E1901F4007F1D3FF50FFE
1D07A21D031D01A21D001E7E1E7FA28AA38AA21F80A21E0FA5F203E0F607C0A49BC7FCA4
1A07A31A0FA21A1FA21A3F1AFF1903193F93B8FCA604C0C7123F190319001A3F1A1FA21A
0FA21A07A31A03A21F3EA31F7CA497CAFCA21FFC1FF8A41E01A21FF01E03A31E07A21FE0
1E0FA21E1FA21E3F1E7F1FC01EFF651D0765650B7F13804A0703B5FC91B56C171F01076E
0407B6FCC0FCA31F00A36F7678F580>69 D<B912F8A6D800074AC7FC010014F06E5B6E5B
B3B3B3B3B3AA4A7F91B57E010714FEB912F8A6357678F546>73 D<92B912F0A692C76CEC
E000050791C7FC83715BB3B3B3B3A713F0EA07FE487E003F13C0487FA2B57EA45F61A34A
4A5BA26C5B4A4A5B91C85CD83FFC5D01805F6C6C4B5B6C6C94C8FC6D4B5A6C6C4B5A6C6C
4A5BC6B44A5BD97FC04913C0D93FF0011F5BD90FFFD9FFFEC9FC010390B512F8010015E0
021F91CAFC020113F04C7A77F562>I<B700C0057FB712C0828282A282D800016EDD007F
ECC000D9003F6D060F49C7FC0B0313F871050013E071725A023E755A6F7F7172C8FC6F7F
816F7F83816F7F846F8081707F8482707F84707F82707F858270808583717F717F858371
7F8583718086718084727F8684727F86727F8472808784737F87737F85737F8785737F88
738085747F8886747F8886747F747F1D80867414C01DE0877513F01DF87513FC877513FE
1DFF8775149F1EDF7514FF8888A28888A2888888A28889A289027F86894A7E496D850107
01F085011F13FC90B66C84B86C838AA28A8A1E0E7A7678F58C>78
D<95380FFFE04DB6FC051F15F094B712FE0403903AFC007FFF80041F01C0010713F0DC7F
FEC813FC922601FFF0ED1FFF4B01C003077F030F496F13E04B48CA7FDB7FFCEF7FFC4B48
717E4A01E0EF0FFF4A49717F4A49717F021F90CB6C13F04A48727FA24A48737E4A48737E
4949737E49894949737F4B8549894949737F498992CD7E49894A8601FF89A24849757EA2
481F804A87481FC0A248497513E0A3481FF0A24A87481FF8A4481FFC4A87A5B51EFEB16C
6D5113FCA56C1FF8A26E63A26C1FF0A36E636C1FE0A26C1FC06E63A26C1F806E98B5FC6C
1F006E626C66A26D6D4F5B6D656F616D656D6D4F5B6F616D656D6D4F5B6D6D4F90C7FCA2
6D6D4F5A6E6C4E5B6E6D4D5B6E6D4D5B6E6D4D5B6E6D4D5B02016D4D90C8FC6E6D4D5A6F
B44C485A031F6D4B13F06F01E0030F5B030301F8033F13806F01FE92B5C9FC9227007FFF
C0010713FC041F01FC017F13F0040790B712C004004CCAFC051F15F0050192CBFCDD000F
13E0777E74F991>I<BB12FEF2FFF01BFF1CE01CF81CFED8000702F0C8001F6D7E01004A
030114E06E49DB003F7F6E060713FC757F09007F767F767F767F767F888A767FA28A888A
A21F8088A31FC0A91F80A3641F00A2666466A2525B66525B525B525B5290C7FC525A0903
5B090F5B093F13E050B51280083F91C8FC93B912F81CE099C9FC1BF850CAFC04C0CEFCB3
B3A94A7F91B57E010714FEB912F0A66A7678F580>I<BB7E1AFEF2FFE01BFCF3FF801CE0
D8000702F0C7000314F801004ADA000F13FE6E4903016D7E6E716C7F091F13F009077F75
7F09007F767E8A767F767F8A888A767FA38A88A28AA966A26466A2666466525B66525B52
90C9FC525A515B515B5113E0091F5B097F90CAFC973801FFFC081F13F00703B512C093B8
48CBFC1BF01BC01BF004C0C7000713FE07006D7E081F7F080713F0747F080013FE757E75
7F89757F8789757FA2757FA3757FA789A78AA87814F8A387A37813018821F04A6D717F91
B56C1B03010702FE7116E0B900F06F6D13077616C0766D130F766DEB1F80766C6CEB3F00
77EBC0FED0000FEBFFFC0B035CE3007F13E00C0313807D7A78F58A>82
D<EF0F804D7EA24D7EA34D7EA34D7EA24C7FA34C7FA24C7F17DFA2040F80178FA2DC1F0F
7F83043F80EE3E03A2047E80EE7C0104FC804C7EA20301814C137FA24B4880183F030781
4C7FA2030F824C7F031F8293C77EA24B82033E80037E82157C8403FC824B80A20201834B
157F0203834B153FA24AB9FCA24A84A3DA1F80C8000F7F92C97EA24A84023E82027E8402
7C82A202FC844A820101854A177F1303870107183FA2010F85A2011F727F496C5F01FF86
486D4D7F000F01FF4CB512FCB600E0033FECFFF8A55D5B7ADA6A>97
D<B912FEF0FFF019FE737E1AE0C602C0C7000F13F8011F4902017F92C96C7E6D717E070F
13C08587737F737FA2737FA3747EA8505AA34F5B63614F5B4F5B4F5B4F90C7FC4F5A9538
01FFF806075B063F13C092B748C8FC19F019FCF1FF8092C8000713E0060013F8F13FFE96
380FFF80737F737F737F737F87747EA2747EA21C8086A21CC0A81C80A262A2501300A250
5A63614F5B4F5B071F5B494D5B6F92B55A90B56C020749C7FCBB5A1AF01A804FC8FC19C0
525878D764>I<DDFFFC15E0041FD9FFC0130193B600F01303030703FC1307031F15FF03
7FD9F003EBC00F4AB5C7383FE01F4A01F891380FF03F020F01C0EC03FC4A90C9EAFE7FDA
7FFEEE7FFFDAFFF8824949824949824949824949824990CA7E494883495A1B7F495A4849
183FA24849181F5A1B0F485BA24A18075AA25A91CC1203A25AA398C7FC5B12FFAE127F7F
A3F303E07EA2807EA26C1A07801CC06C7F1B0F6C1B806C7F1B1F6C6D19006D6C601B3E6D
6C187E6D6C606D7F6D6D4C5A6D6D4C5A6D6D4C5A6D6D4C5ADA7FFEEE3F8091261FFF804B
C7FC6E6DEC01FE020301F8EC07FC6E01FFEC3FF86E6C9039F001FFE0031F90B612800307
93C8FC030015F8041F14C0040001FCC9FC535C77D966>I<BAFC19F019FE737E1AF0C602
E0C7001F7F011F49020113FE4B9138003FFF6D050F13C007037F07007F747E747E747E74
7E747F747FA2747F747FA2757EA2881B3F88A2757EA21D80A287A21DC0A51DE0AE1DC0A4
1D80A263A21D00A2515AA2641B7F641BFF646264505B505B625090C7FC505A505A505A07
0313E04F5B49053F5B6FDBFFFEC8FC90B56C020F5BBB12F01AC04FC9FC19F096CAFC5B58
79D76C>I<BC12F0A5C602E0C86C7F011F4915074B15006D183F1A1F1A0F1A071A03A21A
01871A00A41B7CA5061F80A598C7FCA260A360A2601703171F92B7FCA5923880001F1703
170084A284A384F303E0A3F307C0A395C8FCA31B0F1C80A31B1FA31B3F1C0063A26362A2
62F20FFE1A1F49187F6FED03FF90B56C153FBCFCA263A3535879D760>I<BC12C0A5C602
E0C7000114E0011F49EC000F4B15036D17001A7F1A3F1A1F1A0FA21A071BF01A03A41A01
A5F200F8183EA41B00A3187EA318FEA217011707173F92B6FCA5923880003F1707170117
00A2187EA3183EA795C9FCB3497F8190B512FCB8FCA54D5879D75C>I<DDFFFC15E0041F
D9FFC0130193B600F01303030703FC1307031F15FF037FD9F003EBC00F4AB5C7383FE01F
4A01F891380FF03F020F01C0EC03FC4A90C9EAFE7FDA7FFEEE7FFFDAFFF8824949824949
824949824949824990CA7E494883495A1B7F495A4849183FA24849181F5A1B0F485BA24A
18075AA25A91CC1203A25AA398C8FC5B12FFAE127F6D0407B712F0A47E95C76CEBFC006E
050F13F06C735BA26C6D83A36C7FA26C7F7E807E6D7EA26D7E6D7E6D7F6D6D5E6D7F6D7F
6D01FC5E6E6C5E91261FFF805D6E01E0EDFF3F020301F8913801FE1F6E01FF91380FFC0F
6E6C01F89038FFF807031F90B6EAE0030307EE800103004BC7FC041F02F091C7FC040049
CAFC5C5C77D96E>I<B700F80103B712E0A5C602F8C80003ECE000011F01C0DB007F90C7
FCA26D49705AB3AE92B9FCA50380C9123FB3B1496D4C7EA290B500F80303B512E0B700F8
0103B712E0A55B5879D76A>I<B712FEA5C66CEBFC00011F13F06D5B6D5BB3B3B3B2497F
497F017F13FCB712FEA527587AD734>I<B700F8037FB512F0A5C602F8C96C1400011F01
C07013F81CE06D49188051C7FC1BF8505A63F27F8050C8FC4F5A4F5A4F5A4F5AF11FC04F
5A07FFC9FC4E5A4E5A4E5A4E5A4E5AF03F804ECAFCEF01FE4D5A4D5A4D5A4D5A4D5A4D7E
17FF04037F4C7F4C7F5E4C7F4C7FEEFE3FDB81FC80922687F81F7F92268FF00F7F92389F
E007DBBFC0809226FF80037F4C6C7F15FC4B6D7F4B6E7E4B6E7F5D4B6E7F727F727FA272
7F727F8486737E737F8587737F737FA2737F737F737FA2747E88747F8888496D848890B5
00F893B61280B700F8020715FCA55E5879D76D>107 D<B8FCA5C602FCCBFC011F13E05D
6D5BB3B3AAF20F80A51A1F1B00A562A462A21AFEA21901A219031907190F191F197F49EE
01FF6F140790B56C027F5BBBFCA5495879D758>I<B66C0603B6FC6F606F60A3C66E4E14
00011F1CF8DABFF8183E010F64A2DA9FFC60A2DA8FFE60A3DA87FF4D5AA202836D4C5AA3
02816D4C5AA202806D4C5AA36F6C4C5AA26F6C163EA36F6C5EA26F6C5EA36F6C4B5AA26F
6D4A5AA36F6D4A5AA26F6D4A5AA3706C4AC7FCA2706C143EA3706C5CA2706C5CA3706C49
5AA2706D485AA2706D485AA3706D485AA2716C48C8FCA394383FF83EA2716C5AA3716C5A
A2716C5AA2497E715B497E715B496C4F7F3801FFFC000FD9FF806D49020F13FFB600F805
0FB7FC72C7FCA3183E705878D781>I<B66C0303B612E08181A281D8003F6DDB003FEBFE
00010F060713F06F040113C06F705B8102BF72C7FC82029F6D163E028F7FA202877F0283
7F02817FA202807F6F7E6F7FA26F7F6F7F81836F7F6F7F8183707E707F8284707F707FA2
707F707F707FA2717E717F717FA2717F717F8385717F717F187F857213807213C0A27213
E07213F07213F8A27213FC7213FEF17FFFA27313BE7313FE85A2858585A2851A7F1A3F49
7E1A1F496C170FA2496C17072601FFFC1703000FD9FF801601B612F81A001B7E1B3E1B1C
5B5879D76A>I<933803FFF0043F13FF0303B612F0030F15FC033F9038003FFFDBFFF001
0313C0020301C0010013F0020F90C8EA3FFCDA1FFCED0FFE4A486F7E4A486F7F4948486F
13E049496F7F4949707E4990CA6C7E4948717E4A170F013F854948717F4948717FA24849
717F4887A24849717FA24849727EA24887A291CC123F4887A4481C804985A400FF1CC0AD
007F1C806D61A46C1C00A26E606C63A36C6D4E5AA26C6D4D5BA26C636E5F6C636E5F6C63
6D6C4D5B6D6C4D90C7FCA26D6C4D5A6D6D4C5A6D6D4C5A6D6D4B5B6D6D4B5B6D6D4B5BDA
7FFE031F5BDA1FFF4B48C8FC6E01C0ECFFFC020301F8010713F0020001FF013F13C06F90
B65A030F03FCC9FC030315F0DB003F91CAFC040313F05A5C77D96D>I<B912FCF0FFC019
F819FF1AC0C602E0C7003F7F011F49020313F84B02007F6DEF3FFE737E7313807313C073
13E01BF0851BF8A27313FCA31BFEA91BFCA34F13F8A21BF04F13E0A24F13C04F13804F13
004F5AF1FFFC060313F0063F5B92B812804FC7FC19F096C8FC0380CBFCB3AE497FA290B5
12F8B712F8A54F5879D760>I<B97E18FEF0FFC019F819FEC69126E000016D7E011F49D9
000F13E04B02037F6D040013FCF13FFE737E737F87737F8587A28785A287A763A26163A2
4F5B634F5B98C8FC4F5AF17FFC4F5A060313E0061F13804DB5C9FC92B712F819E096CAFC
19E0922680000313F89438007FFCF01FFF727F727F727F727F8486737EA3737EA586A587
A51D1C75133EA38575137EA2496D6F157C7513FC90B500F881B700F86E9038F801F87390
38FC03F09639007FFE0F74B512E0080F1480CD000114009738001FFC5F5A79D768>114
D<912607FF80EB0380027F01F8130749B6130F010715C0011FEDF01F90263FFC00EBF83F
D97FE090380FFC7FD9FF80903803FEFF4848C8B5FC4848153F4848814848814848818348
488183127F49167FA2183F12FFA2181FA27FA26D160FA27FA26C6C93C7FC7F13FF6C13C0
14F014FF6C14F06C14FF16F86CEDFF806C16F06C16FC6C826D6F7E6D826D820107820101
82D9003F81020781DA003F801503DB003F14801601706C13C0171F050713E08383A27113
F0187F127800F8173FA3181FA27EA319E07EA26CEF3FC0A27FF07F807F6DEEFF006D4B5A
01FC15036D4B5A6D6C4A5A02E04A5AD91FFCEC7FE03CFE0FFFE003FFC0D8FC0390B6C7FC
48C65D023F14F848010714E0489026003FFEC8FC3C5C77D94F>I<003FBC12FEA59126C0
000F9038F8000149C76C49EB003F01F86E49140FD87FE0F103FF4985498590C884A3007E
87A3007C87A600FC1C80481B0FA6C995C7FCB3B3AC4C7FA24C7F047F13FF0207B812F0A5
59577AD666>I<B700F80203B612E0A5C602F8C9003FEBFE00011F01C0040713F0080113
C06D49705BA275C7FCA21B3EB3B3AF1B7EA26D6D177CA21BFC7F6F4C5AA26D616F16036D
18076E6C5F505A6E6C161F6E6C4C5A6E6C4CC8FC6E6D15FE6E6D4A5A6E6DEC07F86E01F8
EC1FF0DB3FFEECFFE092271FFFE00F1380030790B6C9FC030115FC6F6C14F0040F148093
26007FF8CAFC5B5A79D76A>I<B700C0011FB600F8020FB512FEA5000302F0C8003F91C8
000114F0C66C01C0030F01FC6F6C13804B6F49041F13006D71495F6D785A736175705A6D
836F657F746C4C5A816D4E6C5FA26F1C1F6D4D6D94C7FCA26F646D4D6E153E1AEF6F1C7E
027F04076E157C1AC76E6C64070F806F048316016E65DF1F017F701A036E043F60DF3E00
7F701A076E047E6E5D077C137F701A0F6E04FC6E5D4F133F701A1F6E03016F92C8FC4F7F
70626E030370133E4F7F6F6C62060782704A6D15FC033F634E486D7F7019016F021F6096
C76C13F0058018036F4A04F85B063E8005C018076F027E04FC5B067C157F05E0180F6F02
FC04FE5B4E153F05F0181F6F01F105FF90C9FC4E816F01F9183E05FB18BEDDFFE06F13FE
70614E81A270614E81A2706195C97EA270614D82A20407614D177FA20403614D173F0401
96CAFC7048171E875A7CD790>119 D<003FB600F8021FB61280A5D8003F02E00207ECF0
00010F02806E1480010391C86C49C7FC6D7113F86D19E0636E6D5E6E95C8FC6E6D4A5A6E
5F704A5A6E6D5D6E6D4A5A6E160F705D6E6D4A5A6F6C4AC9FC616F6D137E6F6D5B6F4A5A
EFE0036F01F05B6F6D485A4E5A6F13FC6F6D485A706C48CAFC607013FE705B705BA2705B
707FA2707F707F717EA294B57E855E4C80DC07F77F05E37FEE0FC3DC1F817FDC3F807F4D
6C7E167E4C6D7F727F4B487F4B488103076E7F4C6D7F4B5A4B486D7F033F6E7F93C8127F
037E824B6F7F0201707F4B814A48834A486F7F020F707F4A5A023F707F737FDAFF808349
84496D844986011F8690B56C93B512F800076E030314FEB600FC030FECFFFEA55F587BD7
6A>I<B700F093B612E0A5C692CA003FEBFE00011F01FC050F13F06D4919C06D98C7FC6D
6D715A1CF86D6D4D5A6D626E7E515A6E6D5F6E6D4CC8FC1B7E6E7F6E6D5E505A6E7F6E6D
4B5A505A6E7F6F6C4B5A505A6F7F6F6D4AC9FC1A7E6F7F6F6D5C4F5A6F7F6F6D495A4F5A
6F7F706C495A4F5A701380706D48CAFCF0E07E7014FE706D5AF0F9F870EBFBF07013FF61
705C83617190CBFC83B3AA5F854CB512E04BB712F0A563587DD76A>I
E /Fm 4 40 df[<EA7FFEB67E15FE6CECFFF8D80003ECFF8090C714F80303EBFF80DB00
0F13F0040013FE94380FFFC0050013F8F01FFE953803FFC09538007FF0F10FFE963803FF
809638007FE0F21FF8F203FE973800FF80F33FE0F30FF0F303FCF300FFF43FC0767EF407
F8F401FCF4007F777EF50FE0777EF501FC777E1E3FF61FC0787EF603F0787EF600FE1F7F
F71F80797E797E797E797E797E207E8CF81FC0200FF803E08D7A7E7A7E217E8D7B7E7B7E
7B7E7B7E21017B7E8E227E8E8E7C7E8F7C7E22037C7E8F2200237C237E233E8FA17E230F
7D7EA27D7EA17E23017D7EA2A1127CA2A17EA2A17EA2A16C7EA2A16C7EA2A16C7EA2A16C
7EA2A16C7EA2A11378A1137CA2A17FA2A1131EA1131FA2A16D7EA2A11307A180A2A11303
A180A2A11301A2A180A2A11300A180A2A11478A2A1147CA2A1143CA3A1143EA2A1141EA3
A1141FA2A180A5A11580A2A11407A7A115C0A2A11403ADA1EC0180>170
170 294 131 332 36 D[<A1EC0180A1EC03C0ADA11407A2A11580A7A1140FA2A11500A5
A15CA2A1141EA3A1143EA2A1143CA3A1147CA2A11478A2A114F8A2A15CA11301A2A15CA2
A11303A2A15CA11307A2A15CA1130FA2A149C7FCA2A1131EA1133EA2A15BA2A11378A113
F8A2A1485AA2A1485AA2A1485AA2A1485AA2A148C8FCA2A1123EA2A15AA2A15AA2595A23
03A15A595AA2595A231FA1C9FC233E237E237C6B22016B585A2207585A6B58CAFC6A227E
6A6A575A2103575A575A575A57CBFC217E69565A565A69F80FC0565A56CCFC207E68555A
555A555A555A555A0D7FCDFC1FFEF601F8545AF60FE0545A54CEFC1EFE535AF507F0535A
F53F8053CFFCF401FCF407F8F41FE0525A0AFFD0FCF303FCF30FF0F33FE0F3FF80E003FE
D1FCF21FF8F27FE0963803FF80DF0FFED2FCF17FF0953803FFC0DE1FFED3FCF0FFF8050F
13C0DDFFFED4FC040F13F00303B5128092B500F8D5FC0103B61280007FB600F8D6FCB648
D7FC15806C48D7C7FC>170 170 294 297 332 I[<126012F0AD7EA21278A7127CA2123C
A5123EA2121EA3121FA27EA37FA21207A27FA212037FA21201A27FA212007FA21378137C
A27FA2131E131FA26D7EA2130780A26D7EA26D7EA26D7EA2147CA280A280A26E7EA26E7E
A26E7E8114016E7EA2157C157E153E8182150F6F7E8215036F7E826F7E167C82163F707E
707E1607707E83707E707E177E83717E717E717E717E717E717E187E84727E727E727E72
7E727E727E197E737E737EF107E0737EF101FC737E1A3FF21FC0747EF203F8747EF2007F
757EF30FE0F307F8F301FE757EF43FC0F40FF0F403FC76B4FC9938007FC0F51FF0F507FE
9A3801FF809A38007FF0F61FFC9B3803FF800C0013F0F71FFE9C3807FFC00D0013FC9D38
1FFFC00E0313FC9D39007FFFF00F07EBFFC0E7007FEBFFF0100791B51280E8001F15C0FB
007FA1D8001F1380>170 170 128 297 332 I<A190381FFF80A1007FB512C0111FB6FC
1007B71280107F02F0C7FC0F07B500C0C8FC0F7F01F0C9FC9D2603FFFCCAFC0E1F13C0E6
FFFCCBFC0D0713C0E51FFECCFCF7FFF00C031380E41FFCCDFCF67FF09A3801FF80E307FE
CEFCF51FF0F57FC05248CFFCF403FCF40FF0F43FC00AFFD0FC515AF307F8F30FE0F33F80
51D1FCF201FC505AF20FE0505A50D2FC1AFE4F5AF103F04F5AF11FC04F5A077ED3FC614E
5A4E5A4E5A4E5A4E5A4ED4FC187E604D5A4D5A4D5A4D5A4D5A4DD5FC177E5F4C5A4C5A5F
4C5A160F4C5A4CD6FC163E5E16FC4B5A5E4B5A15075E4B5A151F93D7FC153E157E157C5D
A24A5A14035D4A5AA24A5AA24AD7C6FCA2143EA25CA25CA2495AA2495AA2495AA25C130F
A249D7C7FCA2131E133EA25BA2137813F8A25B1201A25BA21203A25B1207A25BA2120FA2
90D7C8FCA35AA2121EA3123EA2123CA5127CA21278A712F8A25AAD1260AAAA80834C>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
/setpagedevice where {
pop 1 dict dup /PageSize [ 595 842 ] put setpagedevice
} {
statusdict /a4tray known {
statusdict begin a4tray end
/a4 where { pop a4 } if
} {
/a4 where {
pop a4
} {
statusdict /setpage known {
statusdict begin
595 842 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

/pstopsxform pstopsmatrix matrix currentmatrix matrix invertmatrix matrix concatmatrix matrix invertmatrix store
%%EndSetup
%%Page: pstops 1
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
1 0 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 398 118 a Fl(Reasoning)64 b(with)g(Joint)h(Pr)l
(obability)12 1947 y Fk(Example:)60 b Fj(Ala)l(rm)135
2213 y Fi(\017)49 b Fj(Sto)l(ry:)54 b(In)34 b(LA,)f(burgla)l(ry)g(and)h
(ea)l(rthquak)l(e)f(a)l(re)g(not)g(uncommon.)56 b(They)256
2395 y(b)t(oth)37 b(can)g(cause)f(ala)l(rm.)56 b(In)37
b(case)e(of)j(ala)l(rm,)f(t)l(w)l(o)g(neighb)t(o)l(rs)h(John)f(and)256
2578 y(Ma)l(ry)44 b(ma)l(y)g(call.)135 2844 y Fi(\017)49
b Fj(V)l(a)l(riables:)60 b(Burgla)l(ry)46 b(\(B\),)h(Ea)l(rthquak)l(e)f
(\(E\),)h(Ala)l(rm)d(\(A\),)i(JohnCalls)256 3026 y(\(J\),)g(Ma)l
(ryCalls)e(\(M\).)135 3292 y Fi(\017)49 b Fj(Problem:)69
b(Estimate)48 b(the)i(p)l(robabilit)l(y)h(of)f(a)g(burgla)l(ry)g(based)
g(on)h(who)256 3475 y(has)45 b(o)l(r)g(has)g(not)h(called.)135
3740 y Fi(\017)j Fj(Problem)44 b(can)h(b)t(e)h(solved)f(if)g
Fh(joint)g(p)l(robabilit)l(y)i Fj(is)d(available.)1513
4022 y Fg(P)20 b Ff(\()p Fg(B)7 b(;)24 b(E)8 b(;)24 b(A;)g(J)n(;)g(M)15
b Ff(\))12 6034 y Fe(COMP221)1947 b(Probabilistic)30
b(Reasoning)i(Systems)1865 6206 y(1)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
2 1 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 398 118 a Fl(Reasoning)64 b(with)g(Joint)h(Pr)l
(obability)p 474 1399 2856 4 v 472 1581 4 183 v 524 1526
a Fj(B)p 662 1581 V 99 w(E)p 842 1581 V 100 w(A)p 1031
1581 V 103 w(J)p 1200 1581 V 102 w(M)p 1417 1581 V 186
w(Prob)p 1959 1581 V 1976 1581 V 203 w(B)p 2165 1581
V 100 w(E)p 2345 1581 V 100 w(A)p 2535 1581 V 102 w(J)p
2704 1581 V 102 w(M)p 2921 1581 V 119 w(Prob)p 3328 1581
V 474 1585 2856 4 v 472 1767 4 183 v 538 1712 a(y)p 662
1767 V 123 w(y)p 842 1767 V 122 w(y)p 1031 1767 V 117
w(y)p 1200 1767 V 131 w(y)p 1417 1767 V 162 w(.00001)p
1959 1767 V 1976 1767 V 162 w(n)p 2165 1767 V 120 w(y)p
2345 1767 V 123 w(y)p 2535 1767 V 117 w(y)p 2704 1767
V 131 w(y)p 2921 1767 V 127 w(.0002)p 3328 1767 V 472
1950 V 538 1895 a(y)p 662 1950 V 123 w(y)p 842 1950 V
122 w(y)p 1031 1950 V 117 w(y)p 1200 1950 V 128 w(n)p
1417 1950 V 124 w(.000025)p 1959 1950 V 1976 1950 V 129
w(n)p 2165 1950 V 120 w(y)p 2345 1950 V 123 w(y)p 2535
1950 V 117 w(y)p 2704 1950 V 127 w(n)p 2921 1950 V 124
w(.0004)p 3328 1950 V 472 2132 V 538 2078 a(y)p 662 2132
V 123 w(y)p 842 2132 V 122 w(y)p 1031 2132 V 114 w(n)p
1200 2132 V 127 w(y)p 1417 2132 V 128 w(.000025)p 1959
2132 V 1976 2132 V 129 w(n)p 2165 2132 V 120 w(y)p 2345
2132 V 123 w(y)p 2535 2132 V 113 w(n)p 2704 2132 V 128
w(y)p 2921 2132 V 127 w(.0004)p 3328 2132 V 472 2315
V 538 2260 a(y)p 662 2315 V 123 w(y)p 842 2315 V 122
w(y)p 1031 2315 V 114 w(n)p 1200 2315 V 124 w(n)p 1417
2315 V 158 w(.00000)p 1959 2315 V 1976 2315 V 162 w(n)p
2165 2315 V 120 w(y)p 2345 2315 V 123 w(y)p 2535 2315
V 113 w(n)p 2704 2315 V 124 w(n)p 2921 2315 V 124 w(.0002)p
3328 2315 V 472 2498 V 538 2443 a(y)p 662 2498 V 123
w(y)p 842 2498 V 118 w(n)p 1031 2498 V 114 w(y)p 1200
2498 V 131 w(y)p 1417 2498 V 162 w(.00001)p 1959 2498
V 1976 2498 V 162 w(n)p 2165 2498 V 120 w(y)p 2345 2498
V 119 w(n)p 2535 2498 V 114 w(y)p 2704 2498 V 131 w(y)p
2921 2498 V 127 w(.0002)p 3328 2498 V 472 2680 V 538
2626 a(y)p 662 2680 V 123 w(y)p 842 2680 V 118 w(n)p
1031 2680 V 114 w(y)p 1200 2680 V 128 w(n)p 1417 2680
V 124 w(.000015)p 1959 2680 V 1976 2680 V 129 w(n)p 2165
2680 V 120 w(y)p 2345 2680 V 119 w(n)p 2535 2680 V 114
w(y)p 2704 2680 V 127 w(n)p 2921 2680 V 124 w(.0002)p
3328 2680 V 472 2863 V 538 2808 a(y)p 662 2863 V 123
w(y)p 842 2863 V 118 w(n)p 1031 2863 V 111 w(n)p 1200
2863 V 127 w(y)p 1417 2863 V 128 w(.000015)p 1959 2863
V 1976 2863 V 129 w(n)p 2165 2863 V 120 w(y)p 2345 2863
V 119 w(n)p 2535 2863 V 110 w(n)p 2704 2863 V 128 w(y)p
2921 2863 V 127 w(.0002)p 3328 2863 V 472 3046 V 538
2991 a(y)p 662 3046 V 123 w(y)p 842 3046 V 118 w(n)p
1031 3046 V 111 w(n)p 1200 3046 V 124 w(n)p 1417 3046
V 158 w(.00000)p 1959 3046 V 1976 3046 V 162 w(n)p 2165
3046 V 120 w(y)p 2345 3046 V 119 w(n)p 2535 3046 V 110
w(n)p 2704 3046 V 124 w(n)p 2921 3046 V 124 w(.0002)p
3328 3046 V 472 3228 V 538 3174 a(y)p 662 3228 V 119
w(n)p 842 3228 V 119 w(y)p 1031 3228 V 117 w(y)p 1200
3228 V 131 w(y)p 1417 3228 V 162 w(.00001)p 1959 3228
V 1976 3228 V 162 w(n)p 2165 3228 V 116 w(n)p 2345 3228
V 120 w(y)p 2535 3228 V 117 w(y)p 2704 3228 V 131 w(y)p
2921 3228 V 127 w(.0001)p 3328 3228 V 472 3411 V 538
3356 a(y)p 662 3411 V 119 w(n)p 842 3411 V 119 w(y)p
1031 3411 V 117 w(y)p 1200 3411 V 128 w(n)p 1417 3411
V 124 w(.000025)p 1959 3411 V 1976 3411 V 129 w(n)p 2165
3411 V 116 w(n)p 2345 3411 V 120 w(y)p 2535 3411 V 117
w(y)p 2704 3411 V 127 w(n)p 2921 3411 V 124 w(.0002)p
3328 3411 V 472 3594 V 538 3539 a(y)p 662 3594 V 119
w(n)p 842 3594 V 119 w(y)p 1031 3594 V 114 w(n)p 1200
3594 V 127 w(y)p 1417 3594 V 128 w(.000025)p 1959 3594
V 1976 3594 V 129 w(n)p 2165 3594 V 116 w(n)p 2345 3594
V 120 w(y)p 2535 3594 V 113 w(n)p 2704 3594 V 128 w(y)p
2921 3594 V 127 w(.0002)p 3328 3594 V 472 3776 V 538
3722 a(y)p 662 3776 V 119 w(n)p 842 3776 V 119 w(y)p
1031 3776 V 114 w(n)p 1200 3776 V 124 w(n)p 1417 3776
V 158 w(.00000)p 1959 3776 V 1976 3776 V 162 w(n)p 2165
3776 V 116 w(n)p 2345 3776 V 120 w(y)p 2535 3776 V 113
w(n)p 2704 3776 V 124 w(n)p 2921 3776 V 124 w(.0001)p
3328 3776 V 472 3959 V 538 3904 a(y)p 662 3959 V 119
w(n)p 842 3959 V 115 w(n)p 1031 3959 V 114 w(y)p 1200
3959 V 131 w(y)p 1417 3959 V 162 w(.00001)p 1959 3959
V 1976 3959 V 162 w(n)p 2165 3959 V 116 w(n)p 2345 3959
V 116 w(n)p 2535 3959 V 114 w(y)p 2704 3959 V 131 w(y)p
2921 3959 V 127 w(.0001)p 3328 3959 V 472 4142 V 538
4087 a(y)p 662 4142 V 119 w(n)p 842 4142 V 115 w(n)p
1031 4142 V 114 w(y)p 1200 4142 V 128 w(n)p 1417 4142
V 158 w(.00001)p 1959 4142 V 1976 4142 V 162 w(n)p 2165
4142 V 116 w(n)p 2345 4142 V 116 w(n)p 2535 4142 V 114
w(y)p 2704 4142 V 127 w(n)p 2921 4142 V 124 w(.0001)p
3328 4142 V 472 4324 V 538 4269 a(y)p 662 4324 V 119
w(n)p 842 4324 V 115 w(n)p 1031 4324 V 111 w(n)p 1200
4324 V 127 w(y)p 1417 4324 V 162 w(.00001)p 1959 4324
V 1976 4324 V 162 w(n)p 2165 4324 V 116 w(n)p 2345 4324
V 116 w(n)p 2535 4324 V 110 w(n)p 2704 4324 V 128 w(y)p
2921 4324 V 127 w(.0001)p 3328 4324 V 472 4507 V 538
4452 a(y)p 662 4507 V 119 w(n)p 842 4507 V 115 w(n)p
1031 4507 V 111 w(n)p 1200 4507 V 124 w(n)p 1417 4507
V 158 w(.00001)p 1959 4507 V 1976 4507 V 162 w(n)p 2165
4507 V 116 w(n)p 2345 4507 V 116 w(n)p 2535 4507 V 110
w(n)p 2704 4507 V 124 w(n)p 2921 4507 V 124 w(.9969)p
3328 4507 V 474 4510 2856 4 v 12 6034 a Fe(COMP221)1947
b(Probabilistic)30 b(Reasoning)i(Systems)1865 6206 y(2)p
eop
pstopssaved restore
%%Page: pstops 2
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
3 2 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 398 118 a Fl(Reasoning)64 b(with)g(Joint)h(Pr)l
(obability)135 1606 y Fi(\017)49 b Fg(P)20 b Ff(\()p
Fg(B)7 b Ff(=)o Fg(y)e Fi(j)p Fg(M)15 b Ff(=)q Fg(y)5
b Ff(\))p Fj(?)135 1872 y Fi(\017)49 b Fj(Compute)c Fh(ma)l(rginal)f(p)
l(robabilit)l(y)p Fj(:)1006 2237 y Fg(P)20 b Ff(\()p
Fg(B)7 b(;)24 b(M)15 b Ff(\))38 b(=)1802 2143 y Fd(X)1728
2350 y Fc(E)6 b(;A;J)2020 2237 y Fg(P)20 b Ff(\()p Fg(B)7
b(;)24 b(E)8 b(;)24 b(A;)g(J)n(;)g(M)15 b Ff(\))p 1549
2514 949 4 v 1547 2696 4 183 v 1599 2641 a Fj(B)p 1737
2696 V 100 w(M)p 1954 2696 V 163 w(Prob)p 2496 2696 V
1549 2699 949 4 v 1547 2882 4 183 v 1613 2827 a(y)p 1737
2882 V 141 w(y)p 1954 2882 V 128 w(.000115)p 2496 2882
V 1547 3065 V 1613 3010 a(y)p 1737 3065 V 138 w(n)p 1954
3065 V 124 w(.000085)p 2496 3065 V 1547 3247 V 1609 3193
a(n)p 1737 3247 V 138 w(y)p 1954 3247 V 195 w(.0015)p
2496 3247 V 1547 3430 V 1609 3375 a(n)p 1737 3430 V 135
w(n)p 1954 3430 V 191 w(.9983)p 2496 3430 V 1549 3433
949 4 v 135 3630 a Fi(\017)783 3942 y Fg(P)20 b Ff(\()p
Fg(B)7 b Ff(=)o Fg(y)e Fi(j)p Fg(M)15 b Ff(=)p Fg(y)5
b Ff(\))84 b(=)1932 3845 y Fg(P)20 b Ff(\()p Fg(B)7 b
Ff(=)o Fg(y)e(;)24 b(M)15 b Ff(=)q Fg(y)5 b Ff(\))p 1932
3908 894 4 v 2109 4041 a Fg(P)20 b Ff(\()p Fg(M)15 b
Ff(=)o Fg(y)5 b Ff(\))1736 4299 y(=)2167 4202 y Fg(:)p
Ff(000115)p 1932 4265 904 4 v 1932 4398 a Fg(:)p Ff(000115)31
b(+)h Fg(:)p Ff(0015)2885 4299 y(=)40 b(0)p Fg(:)p Ff(07)12
6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1865
6206 y(3)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
4 3 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 398 118 a Fl(Reasoning)64 b(with)g(Joint)h(Pr)l
(obability)12 1315 y Fk(Adv)-9 b(an)l(tages)p Fj(:)135
1606 y Fi(\017)49 b Fj(Clea)l(r)c(semantics)135 1871
y Fi(\017)k Fj(In)c(theo)l(ry)-11 b(,)46 b(can)f(p)t(erfo)l(rm)g(a)l
(rbitra)l(ry)g(inference)h(among)e(the)h(va)l(riables.)12
2162 y Fk(Di\016culties)p Fj(:)62 b(Complexit)l(y)135
2428 y Fi(\017)49 b Fj(In)c(the)g(Ala)l(rm)f(example:)341
2693 y Fk({)k Fj(31)e(numb)t(ers)f(needed,)341 2917 y
Fk({)j Fj(quite)e(unnatural)f(to)h(assess:)59 b(e.g.)971
3200 y Fg(P)20 b Ff(\()p Fg(B)46 b Ff(=)40 b Fg(y)5 b(;)24
b(E)49 b Ff(=)40 b Fg(y)5 b(;)24 b(A)40 b Ff(=)h Fg(y)5
b(;)24 b(J)53 b Ff(=)40 b Fg(y)5 b(;)24 b(M)55 b Ff(=)40
b Fg(y)5 b Ff(\))341 3503 y Fk({)48 b Fj(Many)d(additions)h(in)f
(inference.)135 3768 y Fi(\017)k Fj(In)h(general,)i Fg(P)20
b Ff(\()p Fg(X)1179 3790 y Fe(1)1231 3768 y Fg(;)k(X)1411
3790 y Fe(2)1463 3768 y Fg(;)g(:)g(:)g(:)g(;)g(X)1895
3790 y Fc(n)1957 3768 y Ff(\))50 b Fj(needs)g(at)g(least)f
Ff(2)2955 3716 y Fc(n)3052 3768 y Fi(\000)35 b Ff(1)50
b Fj(numb)t(ers)256 3951 y(to)45 b(sp)t(ecify)g(the)g(joint)g(p)l
(robabilities.)341 4242 y Fk({)j Fj(Kno)l(wledge)g(acquisition)d
(\(complex,)h(unnatural\))341 4466 y Fk({)i Fj(Sto)l(rage)341
4690 y Fk({)g Fj(Inference)12 6034 y Fe(COMP221)1947
b(Probabilistic)30 b(Reasoning)i(Systems)1865 6206 y(4)p
eop
pstopssaved restore
%%Page: pstops 3
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
5 4 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 398 118 a Fl(Reasoning)64 b(with)g(Joint)h(Pr)l
(obability)12 423 y Fk(Solution)p Fj(:)135 689 y Fi(\017)49
b Fj(Use)c(p)l(ro)t(duct)h(rule:)452 971 y Fg(P)20 b
Ff(\()p Fg(B)7 b(;)24 b(E)8 b(;)24 b(A;)g(J)n(;)g(M)15
b Ff(\))81 b(=)j Fg(P)20 b Ff(\()p Fg(B)7 b Ff(\))p Fg(P)20
b Ff(\()p Fg(E)8 b(;)24 b(A;)g(J)n(;)g(M)15 b Fi(j)p
Fg(B)7 b Ff(\))1556 1179 y(=)84 b Fg(P)20 b Ff(\()p Fg(B)7
b Ff(\))p Fg(P)20 b Ff(\()p Fg(E)8 b Fi(j)p Fg(B)f Ff(\))p
Fg(P)20 b Ff(\()p Fg(A;)k(J)n(;)g(M)15 b Fi(j)p Fg(B)7
b(;)24 b(E)8 b Ff(\))1556 1386 y(=)84 b Fg(:)24 b(:)g(:)1556
1594 y Ff(=)84 b Fg(P)20 b Ff(\()p Fg(B)7 b Ff(\))p Fg(P)20
b Ff(\()p Fg(E)8 b Fi(j)p Fg(B)f Ff(\))p Fg(P)20 b Ff(\()p
Fg(A)p Fi(j)p Fg(B)7 b(;)24 b(E)8 b Ff(\))1743 1801 y
Fg(P)20 b Ff(\()p Fg(J)13 b Fi(j)p Fg(B)7 b(;)24 b(E)8
b(;)24 b(A)p Ff(\))p Fg(P)c Ff(\()p Fg(M)15 b Fi(j)p
Fg(B)7 b(;)24 b(E)8 b(;)24 b(A;)g(J)13 b Ff(\))p Fg(:)135
2125 y Fi(\017)49 b Fj(Conditional)d(indep)t(endences:)341
2391 y Fk({)i Fg(P)20 b Ff(\()p Fg(E)8 b Fi(j)p Fg(B)f
Ff(\))39 b(=)h Fg(P)20 b Ff(\()p Fg(E)8 b Ff(\))p Fj(.)341
2615 y Fk({)48 b Fg(P)20 b Ff(\()p Fg(J)13 b Fi(j)p Fg(B)7
b(;)24 b(E)8 b(;)24 b(A)p Ff(\))39 b(=)h Fg(P)20 b Ff(\()p
Fg(J)13 b Fi(j)p Fg(A)p Ff(\))p Fj(.)341 2839 y Fk({)48
b Fg(P)20 b Ff(\()p Fg(M)15 b Fi(j)p Fg(B)7 b(;)24 b(E)8
b(;)24 b(A;)g(J)13 b Ff(\))39 b(=)h Fg(P)20 b Ff(\()p
Fg(M)15 b Fi(j)p Fg(A)p Ff(\))p Fg(:)135 3105 y Fi(\017)49
b Fj(Thus)256 3387 y Fg(P)20 b Ff(\()p Fg(B)7 b(;)24
b(E)8 b(;)24 b(A;)g(J)n(;)g(M)15 b Ff(\))38 b(=)i Fg(P)20
b Ff(\()p Fg(B)7 b Ff(\))p Fg(P)20 b Ff(\()p Fg(E)8 b
Ff(\))p Fg(P)20 b Ff(\()p Fg(A)p Fi(j)p Fg(B)7 b(;)24
b(E)8 b Ff(\))p Fg(P)20 b Ff(\()p Fg(J)13 b Fi(j)p Fg(A)p
Ff(\))p Fg(P)20 b Ff(\()p Fg(M)15 b Fi(j)p Fg(A)p Ff(\))p
Fg(:)135 3711 y Fi(\017)49 b Fj(Probabilities:)p 433
3872 3182 4 v 431 4054 4 183 v 483 4000 a(B)p 621 4054
V 99 w Fg(P)20 b Ff(\()p Fg(B)7 b Ff(\))p 1046 4054 V
1063 4054 V 115 w Fj(E)p 1242 4054 V 100 w Fg(P)20 b
Ff(\()p Fg(E)8 b Ff(\))p 1666 4054 V 1683 4054 V 115
w Fj(A)p 1872 4054 V 99 w(J)p 2035 4054 V 100 w Fg(P)20
b Ff(\()p Fg(J)13 b Fi(j)p Fg(A)p Ff(\))p 2582 4054 V
2599 4054 V 115 w Fj(A)p 2788 4054 V 99 w(M)p 3006 4054
V 99 w Fg(P)20 b Ff(\()p Fg(M)15 b Fi(j)p Fg(A)p Ff(\))p
3613 4054 V 433 4058 3182 4 v 431 4240 4 183 v 497 4186
a Fj(y)p 621 4240 V 156 w(.001)p 1046 4240 V 1063 4240
V 170 w(y)p 1242 4240 V 151 w(.002)p 1666 4240 V 1683
4240 V 174 w(y)p 1872 4240 V 114 w(y)p 2035 4240 V 272
w(.9)p 2582 4240 V 2599 4240 V 302 w(y)p 2788 4240 V
142 w(y)p 3006 4240 V 328 w(.7)p 3613 4240 V 431 4423
V 621 4423 V 1046 4423 V 1063 4423 V 1242 4423 V 1666
4423 V 1683 4423 V 1744 4368 a(n)p 1872 4423 V 111 w(y)p
2035 4423 V 238 w(.05)p 2582 4423 V 2599 4423 V 266 w(n)p
2788 4423 V 138 w(y)p 3006 4423 V 295 w(.01)p 3613 4423
V 433 4426 3182 4 v 711 4587 2626 4 v 709 4770 4 183
v 761 4715 a(B)p 899 4770 V 99 w(E)p 1079 4770 V 100
w(A)p 1268 4770 V 99 w Fg(P)20 b Ff(\()p Fg(A)p Fi(j)p
Fg(B)7 b(;)24 b(E)8 b Ff(\))p 2014 4770 V 2031 4770 V
116 w Fj(B)p 2220 4770 V 99 w(E)p 2400 4770 V 100 w(A)p
2589 4770 V 99 w Fg(P)20 b Ff(\()p Fg(A)p Fi(j)p Fg(B)7
b(;)24 b(E)8 b Ff(\))p 3335 4770 V 711 4773 2626 4 v
709 4956 4 183 v 775 4901 a Fj(y)p 899 4956 V 122 w(y)p
1079 4956 V 123 w(y)p 1268 4956 V 350 w(.95)p 2014 4956
V 2031 4956 V 365 w(n)p 2220 4956 V 119 w(y)p 2400 4956
V 123 w(y)p 2589 4956 V 350 w(.29)p 3335 4956 V 709 5139
V 775 5084 a(y)p 899 5139 V 119 w(n)p 1079 5139 V 119
w(y)p 1268 5139 V 350 w(.94)p 2014 5139 V 2031 5139 V
365 w(n)p 2220 5139 V 116 w(n)p 2400 5139 V 119 w(y)p
2589 5139 V 317 w(.001)p 3335 5139 V 711 5142 2626 4
v 135 5399 a Fi(\017)49 b Fj(Only)60 b(10)f(numb)t(ers)g(a)l(re)g
(needed.)104 b(Those)59 b(numb)t(ers)g(a)l(re)f(natural)h(to)256
5582 y(assess.)12 6034 y Fe(COMP221)1947 b(Probabilistic)30
b(Reasoning)i(Systems)1865 6206 y(5)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
6 5 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1151 118 a Fl(Belief)65 b(Netw)l(orks)135
1446 y Fi(\017)49 b Fj(Dra)l(w)41 b(an)h(a)l(rc)f(to)g(each)h(va)l
(riable)f(from)g(each)g(of)h(its)f(conditioning)j(va)l(ri-)256
1628 y(ables.)484 3552 y @beginspecial 43 @llx 467 @lly
382 @urx 696 @ury 3401 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.02.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Times-Roman reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 10 10 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 8.98768 477.845 ] concat
%I
382 323 505 146 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.998631 0 0 0.998631 -183.748 308.577 ] concat
%I
443 415 395 355 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 256.424 670.283 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 655.681 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 644.414 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 634.014 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 622.747 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 278.091 670.283 ] concat
%I
[
(E)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 655.681 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 644.414 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 634.014 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 622.747 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 303.968 670.283 ] concat
%I
[
(P\(A\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 655.681 ] concat
%I
[
(.95)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 634.014 ] concat
%I
[
(.29)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 622.747 ] concat
%I
[
(.001)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.01639 0 -10.0355 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12406 0 0 1.58079 103.915 193.256 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12406 0 0 1.58079 135.389 368.724 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -1.49799 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.161902 0 0 0.124829 218.373 611.697 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.161902 0 0 0.124829 218.373 612.332 ] concat
%I
190 398 715 398 Line
%I 8
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.249658 0 0 0.230552 76.1456 628.542 ] concat
%I
297 371 475 501 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 0.878788 -0.0623992 63.2143 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.252 ] concat
%I
144 478 855 478 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.887 ] concat
%I
144 478 855 478 Line
%I 16
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 163.884 724.438 ] concat
%I
[
(.001)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 162.664 740.773 ] concat
%I
[
(P\(B\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.866667 2.7675 288.6 ] concat
%I
404 514 441 514 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.249658 0 0 0.230552 278.199 633.838 ] concat
%I
297 371 475 501 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 0.878788 201.991 68.5108 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.252 ] concat
%I
144 478 855 478 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.887 ] concat
%I
144 478 855 478 Line
%I 16
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 365.9 730.092 ] concat
%I
[
(.002)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 364.959 746.58 ] concat
%I
[
(P\(E\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
279 584 396 454 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
423 408 298 236 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.96247 0 0 1.2 -151.225 -202.75 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 164.12 654.05 ] concat
%I
[
(Alarm)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -24.9658 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.29416 0 0 1.2 -252.235 -117.65 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 271.16 739.15 ] concat
%I
[
(Earthquake)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -16.9767 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.00044 0 0 1.2 -209.11 -320.55 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 268.566 536.25 ] concat
%I
[
(MaryCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.93677 0 0 1.2 -406.841 -318.35 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 60.4834 538.45 ] concat
%I
[
(JohnCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.58335 0 0 1.22857 -344.062 -136.436 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 69.0742 740.563 ] concat
%I
[
(Burglary)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 161.756 552.307 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 188.485 552.806 ] concat
%I
[
(P\(J\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 161.756 538.335 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 161.756 527.935 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 188.485 538.335 ] concat
%I
[
(.90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 188.485 527.935 ] concat
%I
[
(.05)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.06667 0 -34.4301 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 41.4966 260.784 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 55.3633 367.875 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 2.49658 -4.24426 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 127.263 496.819 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 127.263 497.454 ] concat
%I
190 398 715 398 Line
%I 8
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.02667 0 -13.6622 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 235.521 256.666 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 249.388 363.757 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 323.784 488.457 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 323.784 489.092 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 355.347 547.573 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 381.618 547.573 ] concat
%I
[
(P\(M\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 355.347 533.851 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 355.347 523.452 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 381.618 533.851 ] concat
%I
[
(.70)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 381.618 523.452 ] concat
%I
[
(.01)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 644.414 ] concat
%I
[
(.94)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 135 3817 a Fi(\017)49 b Fj(A)l(ttach)43
b(to)h(each)g(va)l(riable)f(its)g(conditional)i(p)l(robabilit)l(y)g
(table)f(\(CPT\).)135 4083 y Fi(\017)49 b Fj(Result:)60
b(A)45 b Fh(b)t(elief)g(net)l(w)l(o)l(rk)p Fj(.)135 4349
y Fi(\017)k Fj(Also)33 b(kno)l(w)g(as)g(Ba)l(y)l(esian)f(net)l(w)l(o)l
(rks,)37 b(Ba)l(y)l(esian)32 b(b)t(elief)i(net)l(w)l(o)l(rks,)i(p)l
(rob-)256 4531 y(abilistic)44 b(in\015uence)i(diagrams.)12
6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1865
6206 y(6)p eop
pstopssaved restore
%%Page: pstops 4
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
7 6 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1151 118 a Fl(Belief)65 b(Netw)l(orks)135
976 y Fi(\017)49 b Fj(A)55 b Fh(b)t(elief)h(net)l(w)l(o)l(rk)h
Fj(is)f(a)f(compact)g(graphical)h(rep)l(resentation)h(of)f(the)256
1158 y(joint)45 b(p)l(robabilit)l(y)h(distribution)g(of)g(the)f(random)
g(va)l(riables.)135 1424 y Fi(\017)k Fj(A)44 b(b)t(elief)i(net)l(w)l(o)
l(rk)f(is)g(a)g(directed)g(acyclic)f(graph)i(\(D)l(A)l(G\):)341
1690 y Fk({)i Fj(No)t(des:)61 b(va)l(riables)341 1914
y Fk({)48 b Fj(Links:)61 b(direct)45 b(p)l(robabilistic)g(dep)t
(endencies)h(b)t(et)l(w)l(een)g(va)l(riables)341 2138
y Fk({)i Fj(No)t(de)e(attributes:)60 b(conditional)46
b(p)l(robabilit)l(y)g(tables)f(\(CPT\))135 2404 y Fi(\017)k
Fj(As)k(a)i(decomp)t(osable)f(rep)l(resentation)h(of)g(the)f(joint)h(p)
l(robabilit)l(y)g(dis-)256 2586 y(tribution:)341 2852
y Fk({)48 b Fj(The)55 b Fh(global)f Fj(joint)g(p)l(robabilit)l(y)i(is)d
(exp)l(ressed)h(as)g(the)g(p)l(ro)t(duct)h(of)470 3034
y Fh(lo)t(cal)45 b Fj(conditional)h(p)l(robabilities:)941
3340 y Fg(P)20 b Ff(\()p Fg(X)1220 3362 y Fe(1)1272 3340
y Fg(;)k(:)g(:)g(:)g(;)g(X)1704 3362 y Fc(n)1765 3340
y Ff(\))40 b(=)2049 3222 y Fc(n)2025 3246 y Fd(Y)1999
3450 y Fc(i)p Fe(=1)2181 3340 y Fg(P)20 b Ff(\()p Fg(X)2460
3362 y Fc(i)2496 3340 y Fi(j)p Fb(Par)-7 b(ents)11 b
Ff(\()p Fg(X)3182 3362 y Fc(i)3219 3340 y Ff(\)\))470
3674 y Fj(where)46 b Fb(Par)-7 b(ents)11 b Ff(\()p Fg(X)1489
3695 y Fc(i)1526 3674 y Ff(\))44 b Fj(is)h(the)g(set)f(of)i(pa)l(rent)f
(no)t(des)h(of)g Fg(X)3369 3695 y Fc(i)3406 3674 y Fj(.)341
3898 y Fk({)i Fj(This)e(view)f(can)h(help)g(to)g(design)g(the)g(net)l
(w)l(o)l(rk)g(construction)g(p)l(ro-)470 4081 y(cedure.)135
4346 y Fi(\017)j Fj(Example:)63 b(Calculate)46 b(the)g(p)l(robabilit)l
(y)i(of)f(the)g(event)f(that)g(the)h(ala)l(rm)256 4529
y(has)d(sounded)j(but)e(neither)g(a)g(burgla)l(ry)h(no)l(r)f(and)h(ea)l
(rthquak)l(e)f(has)f(o)t(c-)256 4712 y(curred,)i(and)f(b)t(oth)h(John)g
(and)f(Ma)l(ry)g(call.)1145 4994 y Fg(P)20 b Ff(\()p
Fg(J)44 b Fi(^)31 b Fg(M)47 b Fi(^)32 b Fg(A)g Fi(^)f(:)p
Fg(B)39 b Fi(^)31 b(:)p Fg(E)8 b Ff(\))40 b(=)12 6034
y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1865
6206 y(7)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
8 7 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1151 118 a Fl(Belief)65 b(Netw)l(orks)12
325 y Fj(Tw)l(o)45 b(levels:)135 590 y Fi(\017)k Fj(Qualitative)44
b(level:)60 b(Net)l(w)l(o)l(rk)46 b(structure)1319 2132
y @beginspecial 43 @llx 467 @lly 314 @urx 696 @ury 1984
@rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.01.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.487 477.346 ] concat
%I
382 325 500 150 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.487 477.346 ] concat
%I
510 488 403 373 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
279 584 396 454 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
423 408 298 236 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.96247 0 0 1.2 -151.225 -202.75 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 164.12 654.05 ] concat
%I
[
(Alarm)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -30.9576 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.29416 0 0 1.2 -252.235 -117.65 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 271.16 739.15 ] concat
%I
[
(Earthquake)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -22.4692 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.00044 0 0 1.2 -209.11 -320.55 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 268.566 536.25 ] concat
%I
[
(MaryCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.93677 0 0 1.2 -406.841 -318.35 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 60.4834 538.45 ] concat
%I
[
(JohnCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.58335 0 0 1.22857 -344.062 -136.436 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 69.0742 740.563 ] concat
%I
[
(Burglary)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 341 2398 a Fk({)i Fb(A)e Fj(dep)t(ends)g(on)g
Fb(B)59 b Fj(and)46 b Fb(E)17 b Fj(.)341 2622 y Fk({)48
b Fb(J)64 b Fj(and)46 b Fb(M)67 b Fj(a)l(re)45 b(conditionally)h(indep)
t(endent)h(given)f(the)f(event)g Fb(A)p Fj(.)135 2888
y Fi(\017)k Fj(Numerical)44 b(level:)60 b(Conditional)46
b(p)l(robabilities)846 4797 y @beginspecial 43 @llx 467
@lly 382 @urx 696 @ury 3118 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.02.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Times-Roman reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 10 10 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 8.98768 477.845 ] concat
%I
382 323 505 146 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.998631 0 0 0.998631 -183.748 308.577 ] concat
%I
443 415 395 355 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 256.424 670.283 ] concat
%I
[
(B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 655.681 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 644.414 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 634.014 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 256.424 622.747 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 278.091 670.283 ] concat
%I
[
(E)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 655.681 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 644.414 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 634.014 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 278.091 622.747 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 303.968 670.283 ] concat
%I
[
(P\(A\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 655.681 ] concat
%I
[
(.95)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 634.014 ] concat
%I
[
(.29)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 622.747 ] concat
%I
[
(.001)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.01639 0 -10.0355 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12406 0 0 1.58079 103.915 193.256 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12406 0 0 1.58079 135.389 368.724 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -1.49799 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.161902 0 0 0.124829 218.373 611.697 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.161902 0 0 0.124829 218.373 612.332 ] concat
%I
190 398 715 398 Line
%I 8
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.249658 0 0 0.230552 76.1456 628.542 ] concat
%I
297 371 475 501 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 0.878788 -0.0623992 63.2143 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.252 ] concat
%I
144 478 855 478 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.887 ] concat
%I
144 478 855 478 Line
%I 16
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 163.884 724.438 ] concat
%I
[
(.001)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 162.664 740.773 ] concat
%I
[
(P\(B\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.866667 2.7675 288.6 ] concat
%I
404 514 441 514 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.249658 0 0 0.230552 278.199 633.838 ] concat
%I
297 371 475 501 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 0.878788 201.991 68.5108 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.252 ] concat
%I
144 478 855 478 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.0624144 0 0 0.0624144 141.369 728.887 ] concat
%I
144 478 855 478 Line
%I 16
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 365.9 730.092 ] concat
%I
[
(.002)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 364.959 746.58 ] concat
%I
[
(P\(E\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
279 584 396 454 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 -35.2018 435.653 ] concat
%I
423 408 298 236 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.96247 0 0 1.2 -151.225 -202.75 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 164.12 654.05 ] concat
%I
[
(Alarm)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -24.9658 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.29416 0 0 1.2 -252.235 -117.65 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 271.16 739.15 ] concat
%I
[
(Earthquake)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -16.9767 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.00044 0 0 1.2 -209.11 -320.55 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 268.566 536.25 ] concat
%I
[
(MaryCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.93677 0 0 1.2 -406.841 -318.35 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 60.4834 538.45 ] concat
%I
[
(JohnCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.58335 0 0 1.22857 -344.062 -136.436 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 69.0742 740.563 ] concat
%I
[
(Burglary)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 161.756 552.307 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 188.485 552.806 ] concat
%I
[
(P\(J\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 161.756 538.335 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 161.756 527.935 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 188.485 538.335 ] concat
%I
[
(.90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 188.485 527.935 ] concat
%I
[
(.05)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.06667 0 -34.4301 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 41.4966 260.784 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 55.3633 367.875 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 2.49658 -4.24426 ] concat

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 127.263 496.819 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 127.263 497.454 ] concat
%I
190 398 715 398 Line
%I 8
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1.02667 0 -13.6622 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 235.521 256.666 ] concat
%I 4
129 265
129 303
205 303
205 265
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.866667 0 0 0.964782 249.388 363.757 ] concat
%I
139 192 139 154 Line
%I 1
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 323.784 488.457 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.124829 0 0 0.124829 323.784 489.092 ] concat
%I
190 398 715 398 Line
%I 8
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 355.347 547.573 ] concat
%I
[
(A)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.686295 0 0 0.686295 381.618 547.573 ] concat
%I
[
(P\(M\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 355.347 533.851 ] concat
%I
[
(T)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 355.347 523.452 ] concat
%I
[
(F)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 381.618 533.851 ] concat
%I
[
(.70)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 381.618 523.452 ] concat
%I
[
(.01)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-12-*-*-*-*-*-*-*
Times-Roman 12 SetF
%I t
[ 0.866667 0 0 0.866667 303.968 644.414 ] concat
%I
[
(.94)
] Text
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 341 5063 a Fk({)i Fj(The)62 b(CPT)g(fo)l(r)g(a)f(Bo)t
(olean)h(va)l(riable)f(with)g Fg(n)h Fj(Bo)t(olean)f(pa)l(rents)470
5246 y(contains)46 b Ff(2)1045 5194 y Fc(n)1152 5246
y Fj(ro)l(ws.)341 5470 y Fk({)i Fb(B)61 b Fj(and)46 b
Fb(E)63 b Fj(have)46 b(no)h(pa)l(rent)f(no)t(des.)63
b(The)46 b(conditional)h(p)l(robabili-)470 5652 y(ties)e(thus)g
(degenerate)g(to)h(p)l(rio)l(r)g(p)l(robabilities.)12
6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1865
6206 y(8)p eop
pstopssaved restore
%%Page: pstops 5
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
9 8 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 359 118 a Fl(Netw)l(ork)66 b(Constr)l(uction)e
(Pr)l(ocedure)102 1714 y Fj(1.)50 b(Cho)t(ose)57 b(the)g(set)e(of)j
(relevant)d(va)l(riables)h Fg(X)2485 1736 y Fc(i)2579
1714 y Fj(that)g(describ)t(e)g(the)h(do-)256 1897 y(main.)102
2163 y(2.)50 b(Cho)t(ose)c(an)f(o)l(rdering)i(fo)l(r)e(the)g(va)l
(riables.)102 2428 y(3.)50 b(While)45 b(there)g(a)l(re)g(va)l(riables)f
(left:)252 2694 y(\(a\))49 b(Pick)i(a)f(va)l(riable)h
Fg(X)1475 2716 y Fc(i)1562 2694 y Fj(and)h(add)f(the)g(co)l(rresp)t
(onding)i(no)t(de)f(to)e(the)470 2877 y(net)l(w)l(o)l(rk)c(under)g
(construction.)247 3101 y(\(b\))k(Set)i Fb(Par)-7 b(ents)11
b Ff(\()p Fg(X)1352 3122 y Fc(i)1389 3101 y Ff(\))52
b Fj(to)g(some)f(minimal)e(set)j(of)g(no)t(des)h(already)e(in)470
3284 y(the)66 b(net)l(w)l(o)l(rk)g(such)g(that)f(the)g(follo)l(wing)j
(conditional)e(indep)t(en-)470 3466 y(dence)46 b(p)l(rop)t(ert)l(y)g
(holds:)802 3748 y Fg(P)20 b Ff(\()p Fg(X)1081 3770 y
Fc(i)1117 3748 y Fi(j)p Fg(X)1274 3770 y Fe(1)1326 3748
y Fg(;)k(:)g(:)g(:)g(;)g(X)1758 3770 y Fc(i)p Fa(\000)p
Fe(1)1921 3748 y Ff(\))40 b(=)g Fg(P)20 b Ff(\()p Fg(X)2434
3770 y Fc(i)2470 3748 y Fi(j)p Fb(Par)-7 b(ents)11 b
Ff(\()p Fg(X)3156 3770 y Fc(i)3192 3748 y Ff(\)\))470
4031 y Fj(where)46 b Fb(Par)-7 b(ents)11 b Ff(\()p Fg(X)1489
4052 y Fc(i)1526 4031 y Ff(\))39 b Fi(\022)h(f)p Fg(X)1957
4052 y Fe(1)2009 4031 y Fg(;)24 b(:)g(:)g(:)g(;)g(X)2441
4052 y Fc(i)p Fa(\000)p Fe(1)2604 4031 y Fi(g)p Fj(.)257
4255 y(\(c\))49 b(De\014ne)d(the)f(CPT)g(fo)l(r)h Fg(X)1719
4276 y Fc(i)1756 4255 y Fj(.)12 6034 y Fe(COMP221)1947
b(Probabilistic)30 b(Reasoning)i(Systems)1865 6206 y(9)p
eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
10 9 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1230 118 a Fl(Node)66 b(Ordering)135
537 y Fi(\017)49 b Fj(The)c(resulting)h(net)l(w)l(o)l(rk)f(structure)g
(dep)t(ends)h(on)g(the)f(o)l(rder:)341 803 y Fk({)j Fj(Example)d(1)g
(\(left\):)61 b(in)46 b(the)f(o)l(rder)h Fb(M)23 b Fj(,)44
b Fb(J)19 b Fj(,)46 b Fb(A)p Fj(,)g Fb(B)15 b Fj(,)45
b Fb(E)341 1027 y Fk({)j Fj(Example)d(2)g(\(right\):)62
b(in)45 b(the)g(o)l(rder)h Fb(M)23 b Fj(,)45 b Fb(J)19
b Fj(,)46 b Fb(E)17 b Fj(,)46 b Fb(B)15 b Fj(,)45 b Fb(A)248
2903 y @beginspecial 51 @llx 468 @lly 573 @urx 732 @ury
3968 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.03.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 181.261 483.35 ] concat
%I
730 464 671 407 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
269 568 431 496 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
213 544 312 399 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
480 464 397 394 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
285 163 394 119 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
384 336 446 137 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 9.98631 484.336 ] concat
%I
337 348 248 216 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
456 548 458 220 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
582 336 511 215 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
520 546 573 408 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
570 566 695 498 Line
%I 2
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I 8
486 548
481 438
493 358
519 292
551 250
599 200
645 164
681 138
8 BSpl
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
534 159 659 119 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
655 335 711 149 Line
%I 2
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I 7
776 453
760 376
735 302
693 242
629 194
589 178
558 174
7 BSpl
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499316 0 0 0.499316 174.76 484.336 ] concat
%I
808 452 739 145 Line
%I 2
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.93677 0 0 1.2 65.159 -123.35 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 532.483 731.05 ] concat
%I
[
(JohnCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.00044 0 0 1.2 -397.11 -77.55 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 80.5657 776.85 ] concat
%I
[
(MaryCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.96247 0 0 1.2 -153.225 -185.75 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 162.12 668.65 ] concat
%I
[
(Alarm)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 1.99731 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.29416 0 0 1.2 -453.235 -279.65 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 82.1605 577.15 ] concat
%I
[
(Burglary)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.866667 0 0 0.866667 27.7333 299 ] concat
%I
265 267 65 25 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 214.2 538.8 ] concat
%I
[
(Earthquake)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.00044 0 0 1.2 -100.11 -76.55 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 377.566 777.85 ] concat
%I
[
(MaryCalls)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.96247 0 0 1.2 198.775 -313.75 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 514.12 540.65 ] concat
%I
[
(Alarm)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 3.29416 0 0 1.2 -80.235 -182.65 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 443.16 671.75 ] concat
%I
[
(Earthquake)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.58335 0 0 1.22857 -38.0621 -298.436 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 375.074 576.163 ] concat
%I
[
(Burglary)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2.93677 0 0 1.2 -231.841 -124.35 ] concat
%I
172 707 17 17 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1.2 0 0 1.2 235.483 730.05 ] concat
%I
[
(JohnCalls)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 135 3169 a Fi(\017)k Fj(Which)d(o)l(rder?)317
3434 y(1.)j(Naturalness)c(of)g(p)l(robabilit)l(y)i(assessment.)653
3658 y(The)62 b(o)l(rder)h(M,)e(J,)h(E,)h(B,)f(A)f(is)h(not)g(go)t(o)t
(d)h(b)t(ecause,)j(fo)l(r)653 3841 y(instance,)42 b Fg(P)20
b Ff(\()p Fg(B)7 b Fi(j)p Fg(J)n(;)24 b(M)7 b(;)24 b(E)8
b Ff(\))39 b Fj(is)h(unnatural)h(and)h(hence)f(di\016-)653
4024 y(cult)k(to)g(assess)e(directly)-11 b(.)317 4248
y(2.)49 b(Minimize)44 b(numb)t(er)g(of)i(a)l(rcs.)653
4472 y(The)41 b(o)l(rder)i(M,)e(J,)g(E,)h(B,)g(A)f(is)g(bad)g(b)t
(ecause)g(there)h(a)l(re)f(to)t(o)653 4655 y(many)j(a)l(rcs.)60
b(The)45 b(o)l(rder)h(B,)f(E,)h(A,)f(J,)g(M)g(is)f(go)t(o)t(d.)317
4879 y(3.)49 b(Use)c(causal)g(relationships:)61 b(causes)44
b(come)g(b)t(efo)l(re)i(their)f(e\013ects.)653 5103 y(The)62
b(o)l(rder)h(M,)e(J,)h(E,)h(B,)f(A)f(is)h(not)g(go)t(o)t(d)h(b)t
(ecause,)j(fo)l(r)653 5286 y(instance,)55 b(M)d(and)h(J)f(a)l(re)h
(e\013ects)e(of)j(A)e(but)h(come)f(b)t(efo)l(re)653 5468
y(A.)12 6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i
(Systems)1841 6206 y(10)p eop
pstopssaved restore
%%Page: pstops 6
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
11 10 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 318 118 a Fl(Conditional)65 b(Independence)e
(in)i(Belief)1462 238 y(Netw)l(orks)135 516 y Fi(\017)49
b Fj(T)-11 b(o)31 b(determine)g(whether)h(a)f(set)g(of)h(no)t(des)g(X)f
(is)g(indep)t(endent)j(of)e(another)256 698 y(set)44
b(Y,)h(given)h(a)f(set)f(of)i(evidence)f(no)t(des)h(E.)135
964 y Fi(\017)j Fj(If)59 b(every)f(undirected)h(path)g(from)f(a)g(no)t
(de)i(in)f(X)f(to)g(a)g(no)t(de)i(in)f(Y)f(is)256 1147
y(d-sepa)l(rated)51 b(b)l(y)h(E,)g(then)g(X)f(and)g(Y)g(a)l(re)g
(conditionally)i(indep)t(endent)256 1329 y(given)45 b(E.)135
1595 y Fi(\017)k Fj(A)39 b(set)h(of)g(no)t(des)h(E)f(d-sepa)l(rates)g
(t)l(w)l(o)g(sets)f(of)i(no)t(des)f(X)g(and)g(Y)g(if)g(every)256
1778 y(undirected)60 b(path)f(from)f(a)g(no)t(de)i(in)f(X)f(to)h(a)f
(no)t(de)i(in)f(Y)f(is)h(blo)t(ck)l(ed)256 1960 y(given)45
b(E.)135 2226 y Fi(\017)k Fj(A)41 b(path)h(is)f(blo)t(ck)l(ed)h(given)h
(a)e(set)g(of)h(no)t(des)g(E)g(if)g(there)g(is)f(a)g(no)t(de)i(Z)f(on)
256 2409 y(path)j(fo)l(r)h(which)f(one)h(of)g(three)f(conditions)h
(holds:)317 2674 y(1.)j(Z)k(is)f(in)g(E)h(and)f(Z)h(has)f(one)h(a)l
(rro)l(w)f(on)h(the)f(path)h(leading)g(in)f(and)470 2857
y(one)46 b(a)l(rro)l(w)g(out.)317 3081 y(2.)j(Z)d(is)e(in)i(E)f(and)h
(Z)f(has)g(b)t(oth)h(path)f(a)l(rro)l(ws)g(leading)h(out.)317
3305 y(3.)j(Neither)57 b(Z)g(no)l(r)h(any)f(desendant)h(of)f(Z)g(is)g
(in)g(E,)g(and)h(b)t(oth)f(path)470 3488 y(a)l(rro)l(ws)46
b(lead)f(in)g(to)g(Z.)135 3754 y Fi(\017)k Fj(Figure)c(illustrating)g
(the)g(three)g(cases:)728 5489 y @beginspecial 15 @llx
564 @lly 319 @urx 726 @ury 3401 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.04.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.86747 0 0 0.86747 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I 4
223 278
223 379
296 379
296 278
4 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
103 232 167 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 101.5 827.5 ] concat
%I
[
(X)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
140 352 186 352 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
140 306 186 306 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
140 260 186 260 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 200.5 457.5 ] concat
%I
103 232 167 379 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 349.5 827.5 ] concat
%I
[
(Y)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
397 352 434 352 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
397 306 434 306 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
397 260 434 260 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 230.5 827.5 ] concat
%I
[
(E)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 18.5 813.906 ] concat
%I
[
(\(1\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 18.5 767.906 ] concat
%I
[
(\(2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 18.5 721.906 ] concat
%I
[
(\(3\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 167.898 770.551 ] concat
%I
-172 586 491 585 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 231.059 776.661 ] concat
%I
-144 494 526 493 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 231.059 746.11 ] concat
%I
-144 262 521 263 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 143.391 746.11 ] concat
%I
890 262 216 262 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 194.531 703.339 ] concat
%I
1084 213 426 211 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 194.531 703.339 ] concat
%I
-573 213 89 213 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 216.448 654.457 ] concat
%I
-82 791 159 273 Line
%I 16
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.0664154 0 0 0.0664154 187.225 660.567 ] concat
%I
358 699 113 187 Line
%I 16
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 365.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 411.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
195 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
195 306 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
195 260 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 -1.5 594 ] concat
%I
389 136 18 20 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 -1.5 594 ] concat
%I
463 136 18 20 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
1 SetP
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
259 352 10 10 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.75 0 0 0.75 208.875 813.625 ] concat
%I
[
(Z)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
1 SetP
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
259 306 10 10 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.75 0 0 0.75 208.875 767.625 ] concat
%I
[
(Z)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p
1 SetP
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -47.5 457.5 ] concat
%I
259 260 10 10 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.75 0 0 0.75 208.875 721.625 ] concat
%I
[
(Z)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 200.5 457.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 200.5 365.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 200.5 411.5 ] concat
%I
131 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
388 352 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
388 306 9 10 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -111.5 457.5 ] concat
%I
388 260 9 10 Elli
End

End %I eop

showpage


end
%%EndDocument
 @endspecial 12 6034 a Fe(COMP221)1947 b(Probabilistic)30
b(Reasoning)i(Systems)1841 6206 y(11)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
12 11 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 141 118 a Fl(Conditional)65 b(Independence:)83
b(An)65 b(Example)12 1334 y Fj(Example)44 b(to)h(illustrate)f(the)h
(three)g(cases)f(of)i(conditional)g(indep)t(endence:)484
3299 y @beginspecial 127 @llx 571 @lly 400 @urx 734 @ury
3401 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.05.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.86747 0 0 0.86747 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.531323 0 0 0.531323 -14.877 567.453 ] concat
%I
450 481 395 431 Line
%I 2
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.265661 0 0 0.265661 102.545 665.748 ] concat
%I
578 574 681 493 Line
%I 4
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.265661 0 0 0.265661 131.768 641.307 ] concat
%I
703 487 811 401 Line
%I 4
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.265661 0 0 0.265661 190.241 592.425 ] concat
%I
671 471 671 397 Line
%I 4
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.265661 0 0 0.265661 190.214 592.425 ] concat
%I
856 676 750 584 Line
%I 4
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 81 367.5 ] concat
%I
94 414 27 19 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 159.5 785.5 ] concat
%I
[
(Radio)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 71.559 340.5 ] concat
%I
167 487 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 218.559 831.5 ] concat
%I
[
(Battery)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 43.5 340.5 ] concat
%I
259 441 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 282.5 785.5 ] concat
%I
[
(Ignition)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 173.5 339.5 ] concat
%I
259 441 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 422 784.5 ] concat
%I
[
(Gas)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 109.5 293.5 ] concat
%I
259 441 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 352.5 738.5 ] concat
%I
[
(Starts)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0.999958 0 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 108.5 236.5 ] concat
%I
259 441 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 349 681.5 ] concat
%I
[
(Moves)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 102 3564 a(1.)k(Whether)37 b(there)g(is)g(Gas)g(in)g(the)g
(ca)l(r)g(and)h(whether)f(the)g(ca)l(r)g(Radio)h(pla)l(ys)256
3747 y(a)l(re)50 b(indep)t(endent)j(given)e(evidence)g(ab)t(out)g
(whether)g(the)g(Spa)l(rkPlugs)256 3930 y(\014re.)102
4195 y(2.)f(Gas)44 b(and)i(Radio)f(a)l(re)g(indep)t(endent)i(if)e
(given)g(the)h(Battery)d(w)l(o)l(rks.)102 4461 y(3.)50
b(Gas)j(and)h(Radio)g(a)l(re)g(indep)t(endent)i(given)e(no)h(evidence)f
(at)f(all.)87 b(But)256 4644 y(they)34 b(a)l(re)f(dep)t(endent)i(given)
g(evidence)f(ab)t(out)g(whether)h(the)e(ca)l(r)h(Sta)l(rts.)12
6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1841
6206 y(12)p eop
pstopssaved restore
%%Page: pstops 7
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
13 12 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 382 118 a Fl(Ca)l(usality)64
b(and)g(Ba)-11 b(yesian)63 b(Netw)l(orks)135 1238 y Fi(\017)49
b Fj(Arcs)64 b(in)i(a)f(Ba)l(y)l(esian)g(net)l(w)l(o)l(rk)h(can)f
(usually)g(\(but)h(not)g(alw)l(a)l(ys\))f(b)t(e)256 1421
y(interp)l(reted)e(as)g(indicating)h(cause-e\013ect)e(relationships.)
114 b(They)64 b(a)l(re)256 1603 y(from)44 b(causes)h(to)g(e\013ects)f
(\()p Fh(causal)h(net)l(w)l(o)l(rk)p Fj(\).)135 1869
y Fi(\017)k Fj(Making)64 b(use)h(of)g(cause-e\013ect)e(relationships)i
(in)g(Ba)l(y)l(esian)f(net)l(w)l(o)l(rk)256 2052 y(construction:)341
2317 y Fk({)48 b Fj(Cho)t(ose)e(a)f(set)f(of)i(va)l(riables)e(that)h
(describ)t(es)g(the)g(domain.)341 2542 y Fk({)j Fj(Dra)l(w)d(an)f(a)l
(rc)g(to)g(a)g(va)l(riable)g(from)f(each)h(of)h(its)f(DIRECT)h(causes.)
341 2766 y Fk({)j Fj(Assess)65 b(the)i(conditional)h(p)l(robabilit)l(y)
g(of)f(each)g(no)t(de)h(given)f(its)470 2948 y(pa)l(rents.)12
3239 y Fk(Examples)102 3530 y Fj(1.)50 b(P)l(o)t(ole's)c(example:)470
3795 y(tamp)t(ering,)f(\014re,)h(smok)l(e,)e(ala)l(rm,)g(p)t
(eople-leaving.)102 4061 y(2.)50 b(Africa)44 b(visit)470
4327 y(Africa-visit,)61 b(TB,)d(smok)l(e,)i(lung-cancer,)j(b)l
(ronchitis,)f(dysp-)470 4509 y(nea,)46 b(p)t(ositive-X-y)l(a)l(y)-11
b(.)102 4775 y(3.)50 b(1-bit)45 b(adder)12 6034 y Fe(COMP221)1947
b(Probabilistic)30 b(Reasoning)i(Systems)1841 6206 y(13)p
eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
14 13 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1468 118 a Fl(Inference)135 878
y Fi(\017)49 b Fj(Any)57 b(no)t(de)g(can)g(serve)f(as)h(either)f(a)h
Fh(query)g Fj(va)l(riable)g(o)l(r)g(an)g Fh(evidence)256
1061 y Fj(va)l(riable.)135 1326 y Fi(\017)49 b Fj(F)l(our)d(inference)f
(t)l(yp)t(es:)341 1592 y Fk({)j Fj(Diagnostic)e(inference:)532
1816 y Fi(\003)j Fj(F)l(rom)44 b(e\013ects)g(to)h(causes.)532
2020 y Fi(\003)k Fj(Example:)60 b Fg(P)20 b Ff(\()p Fb(Bur)-7
b(glary)11 b Fi(j)p Fb(JohnCal)c(ls)k Ff(\))341 2244
y Fk({)48 b Fj(Causal)d(inference:)532 2468 y Fi(\003)k
Fj(F)l(rom)44 b(causes)h(to)g(e\013ects.)532 2671 y Fi(\003)k
Fj(Example:)60 b Fg(P)20 b Ff(\()p Fb(JohnCal)7 b(ls)j
Fi(j)p Fb(Bur)-7 b(glary)12 b Ff(\))341 2895 y Fk({)48
b Fj(Intercausal)d(inference:)532 3120 y Fi(\003)k Fj(Bet)l(w)l(een)c
(causes)f(of)i(a)f(common)f(e\013ect.)532 3323 y Fi(\003)49
b Fj(Example:)60 b Fg(P)20 b Ff(\()p Fb(Bur)-7 b(glary)11
b Fi(j)p Fb(A)l(larm)f Fg(;)24 b Fb(Earthquake)9 b Ff(\))653
3506 y Fj(\(Even)64 b(though)h(burgla)l(ries)e(and)h(ea)l(rthquak)l(es)
f(a)l(re)f(indep)t(en-)653 3688 y(dent,)46 b(the)f(p)l(resence)g(of)h
(one)g(mak)l(es)d(the)i(other)h(less)e(lik)l(ely)-11
b(.\))341 3912 y Fk({)48 b Fj(Mixed)d(inference:)532
4137 y Fi(\003)k Fj(Combining)d(t)l(w)l(o)f(o)l(r)h(mo)l(re)f(of)g(the)
g(ab)t(ove.)532 4340 y Fi(\003)k Fj(Example:)60 b Fg(P)20
b Ff(\()p Fb(A)l(larm)9 b Fi(j)p Fb(JohnCal)e(ls)12 b
Fg(;)24 b Fi(:)p Fb(Earthquake)8 b Ff(\))653 4523 y Fj(\(Simultaneous)
45 b(use)g(of)g(diagnostic)h(and)g(causal)e(inferences\))532
4726 y Fi(\003)49 b Fj(Example:)60 b Fg(P)20 b Ff(\()p
Fb(Bur)-7 b(glary)11 b Fi(j)p Fb(JohnCal)c(ls)k Fg(;)24
b Fi(:)p Fb(Earthquake)8 b Ff(\))653 4909 y Fj(\(Simultaneous)65
b(use)h(of)g(diagnostic)g(and)f(intercausal)g(infer-)653
5091 y(ences\))12 6034 y Fe(COMP221)1947 b(Probabilistic)30
b(Reasoning)i(Systems)1841 6206 y(14)p eop
pstopssaved restore
%%Page: pstops 8
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
15 14 bop -92 -235 a Fm(')p -92 5739 4 5810 v -92 5907
a(&)3924 -235 y($)p 3924 5739 V 3924 5907 a(\045)p 76
5908 3684 4 v 76 -235 V 1070 129 a Fl(Inference)64 b(\(cont'd\))135
2078 y Fi(\017)49 b Fj(Examples:)492 3634 y @beginspecial
74 @llx 417 @lly 395 @urx 553 @ury 3968 @rwi @setspecial
%%BeginDocument: $HOME/DOS/comp221/figures/fig15.06.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 9 def
/arrowWidth 4 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.923077 0 0 0.923077 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.939759 0 0 0.939759 81.8313 466.12 ] concat
%I
[
(Diagnostic)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.939759 0 0 0.939759 171.216 466.12 ] concat
%I
[
(Causal)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.939759 0 0 0.939759 388.932 466.12 ] concat
%I
[
(Mixed)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.939759 0 0 0.939759 262.264 466.12 ] concat
%I
[
(Intercausal)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-bold-r-normal-*-14-*-*-*-*-*-*-*
Times-Bold 14 SetF
%I t
[ 0.939759 0 0 0.939759 241.589 483.976 ] concat
%I
[
(\(Explaining Away\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 164.767 488.016 ] concat
%I
206 663 206 505 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 164.767 488.016 ] concat
%I
206 305 206 123 Line
%I 8
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 102.52 234.455 ] concat
%I
117 402 28 18 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 102.52 282.202 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 187.192 590.067 ] concat
%I
[
(E)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 102.52 186.708 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 186.252 494.573 ] concat
%I
[
(Q)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 86.6586 487.539 ] concat
%I
206 663 206 505 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 86.6586 487.539 ] concat
%I
206 305 206 123 Line
%I 8
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 24.412 186.231 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 109.084 494.096 ] concat
%I
[
(E)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 24.412 281.725 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 108.145 589.59 ] concat
%I
[
(Q)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 24.412 233.978 ] concat
%I
117 402 28 18 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 219.699 488.081 ] concat
%I
318 678 604 509 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 219.699 488.081 ] concat
%I
882 674 616 510 Line
%I 8
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 207.195 234.455 ] concat
%I
117 402 28 18 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 171.99 282.202 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 255.723 590.067 ] concat
%I
[
(Q)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 242.399 282.202 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 327.071 590.067 ] concat
%I
[
(E)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 380.603 488.624 ] concat
%I
206 663 206 505 Line
%I 8
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.124829 0 0 0.124829 380.603 488.624 ] concat
%I
206 305 206 123 Line
%I 8
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 318.356 235.063 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 402.089 542.928 ] concat
%I
[
(Q)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 318.356 187.316 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 403.028 495.181 ] concat
%I
[
(E)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.751807 0 0 0.751807 318.356 282.81 ] concat
%I
117 402 28 18 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.939759 0 0 0.939759 403.028 590.675 ] concat
%I
[
(E)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument
 @endspecial 135 3899 a Fi(\017)g Fj(There)c(exist)f(e\016cient)h(algo)
l(rithms)f(fo)l(r)i(all)f(t)l(yp)t(es)f(of)i(inference.)12
6034 y Fe(COMP221)1947 b(Probabilistic)30 b(Reasoning)i(Systems)1841
6206 y(15)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
showpage
pstopssaved restore
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
