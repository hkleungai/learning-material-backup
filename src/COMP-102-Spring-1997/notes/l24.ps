%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 20 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Courier-Bold FMFONTDEFINE
2 0 /Courier-BoldOblique FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 0 /Courier-Oblique FMFONTDEFINE
5 0 /Times-Italic FMFONTDEFINE
6 0 /Times-BoldItalic FMFONTDEFINE
7 0 /Palatino-Roman FMFONTDEFINE
8 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "mini" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
27 292.26 416.45 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 55.64 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 206.79 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 1) 383.04 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
55.64 332.35 387.81 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 14 Q
(Syntax of) 133.53 741.1 T
2 F
(struct) 217.52 741.1 T
3 F
(type) 276.32 741.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 10.18 Q
1 0 1 0 0 1 0 K
(struct) 95.73 710.55 T
3 F
( <) 132.38 710.55 T
4 F
(struct-type) 144.6 710.55 T
3 F
(>) 211.8 710.55 T
1 F
({) 224.01 710.55 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
3 F
(<) 118.64 699.1 T
4 F
(type> <id-list>) 124.74 699.1 T
3 F
(;) 216.38 699.1 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(\245\245\245) 153 687.64 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(<) 118.64 676.19 T
4 F
(type> <id-list>) 124.74 676.19 T
3 F
(;) 216.38 676.19 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 F
(};) 95.73 664.74 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
3 F
(<struct-type> <struct-variable>) 95.73 653.28 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 12.73 Q
1 1 0 0 0 0 1 K
(Example:) 72.82 626.77 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
3 10.18 Q
1 0 1 0 0 1 0 K
(struct) 95.73 601.74 T
0 1 1 0 1 0 0 K
1 F
0 1 1 0 1 0 0 K
(StudentRecord) 138.49 601.74 T
1 0 1 0 0 1 0 K
3 F
1 0 1 0 0 1 0 K
( {) 217.91 601.74 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(char Name[15];) 118.64 590.28 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(int Id;) 118.64 578.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(char Department[5];) 118.64 567.37 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(char sex;) 118.64 555.92 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(};) 95.73 544.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// StudentRecord) 120.16 544.46 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
1 F
0 1 1 0 1 0 0 K
-1.22 (StudentRecord) 95.73 519.86 P
1 0 1 0 0 1 0 K
1 0 0 0 0 1 1 K
3 F
1 0 0 0 0 1 1 K
-1.22 (Student1) 180.03 519.86 P
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
-1.22 (,) 228.9 519.86 P
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
-1.22 (Student2) 239.9 519.86 P
1 0 1 0 0 1 0 K
1 12.73 Q
1 0 1 0 0 1 0 K
-1.53 (;) 288.77 519.86 P
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 F
1 1 0 0 0 0 1 K
(T) 72.82 493.77 T
(w) 79.58 493.77 T
(o v) 88.64 493.77 T
(ariables,) 104.23 493.77 T
1 0 0 0 0 1 1 K
5 F
1 0 0 0 0 1 1 K
(Student1) 150.17 493.77 T
1 1 0 0 0 0 1 K
0 F
1 1 0 0 0 0 1 K
( and) 194.72 493.77 T
0 1 0 0 1 0 1 K
5 F
0 1 0 0 1 0 1 K
(Student2) 219.46 493.77 T
1 1 0 0 0 0 1 K
0 F
1 1 0 0 0 0 1 K
(, of) 264 493.77 T
0 1 1 0 1 0 0 K
6 F
0 1 1 0 1 0 0 K
(StudentRecord) 284.15 493.77 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 F
1 1 0 0 0 0 1 K
(type are de\336ned; each has four \336elds:) 72.82 480.41 T
1 0 1 0 0 1 0 K
5 F
1 0 1 0 0 1 0 K
(Name) 266.15 480.41 T
(, Id, Depart-) 295.72 480.41 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(ment) 72.82 467.04 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
( and) 97.56 467.04 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(se) 123.01 467.04 T
(x) 133.36 467.04 T
1 1 0 0 0 0 1 K
0 F
1 1 0 0 0 0 1 K
(.) 139.01 467.04 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(These \336elds are being referred to as:) 72.82 440.32 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(Student1.) 95.73 413.59 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Name,) 144.16 413.59 T
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Student2.) 184.1 413.59 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Name) 232.54 413.59 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(Student1.) 95.73 400.23 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Id,) 144.16 400.23 T
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Student2.) 164.31 400.23 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Id) 212.75 400.23 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(Student1.) 95.73 386.86 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Department,) 144.16 386.86 T
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Student2.) 213.79 386.86 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Department) 262.23 386.86 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(Student1.) 95.73 373.5 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(se) 144.16 373.5 T
(x,) 154.58 373.5 T
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Student2.) 170.49 373.5 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(se) 218.92 373.5 T
(x) 229.34 373.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
425.45 292.26 814.9 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 454.08 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 605.24 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 2) 781.49 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
454.08 332.35 786.26 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 11.45 Q
(Access to struct members) 537.7 742.79 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
3 10.18 Q
(\245) 471.27 706.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Using the member access operator, a period) 487.81 706.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(o) 488.45 687.64 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Syntax) 505.63 687.64 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(<) 505.63 669.19 T
4 F
(struct-variable) 511.74 669.19 T
3 F
(>.<) 603.37 669.19 T
4 F
(member name) 621.7 669.19 T
3 F
(>) 688.9 669.19 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(o) 488.45 646.28 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Example) 505.63 646.28 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(strcpy \050Student.Name, "CHAN Tai Man"\051;) 505.63 627.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Student.Id = 12345;) 505.63 616.37 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(strcpy \050Student.Department, "COMP"\051;) 505.63 604.92 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Student.sex = \325M\325;) 505.63 593.46 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(cout << "The student is ";) 505.63 559.1 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(switch \050Student.sex\051 {) 505.63 547.65 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(case \325F\325: case \325f\325:) 528.54 536.19 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cout << "Ms. ";) 539.99 524.74 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(break;) 539.99 513.28 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(case \325M\325: case \325m\325:) 528.54 501.83 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cout << "Mr. ";) 539.99 490.37 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(break;) 539.99 478.92 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(}) 505.63 467.47 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(cout << Student.Name << endl;) 505.63 456.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 1
%%Page: "mini" 2
595.3 841.9 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 292.26 416.45 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 55.64 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 206.79 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 3) 383.04 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
55.64 332.35 387.81 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 11.45 Q
(struct-to-struct Assignment) 128.94 742.79 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
3 10.18 Q
(\245) 72.82 706.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(both structs must be of the same type) 89.36 706.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(o) 90 687.64 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Example) 107.18 687.64 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(StudentRecord Student1, Student2;) 107.18 669.19 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(strcpy \050Student1.Name, "CHAN Tai Man"\051;) 107.18 646.28 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Student1.Id = 12345;) 107.18 634.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(strcpy \050Student1.Department, "COMP"\051;) 107.18 623.37 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Student1.sex = \325M\325;) 107.18 611.92 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Student2 = Student1;) 107.18 589.01 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(o) 90 554.65 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(More Example) 107.18 554.65 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(StudentRecord Class[200];) 107.18 536.19 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(strcpy \050Class[10].Name, "CHAN Tai Man"\051;) 107.18 513.28 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Class[10].Id = 12345;) 107.18 501.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(strcpy \050Class[10].Department, "COMP"\051;) 107.18 490.37 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Class[10].sex = \325M\325;) 107.18 478.92 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(Class[0] = Class[10];) 107.18 456.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
425.45 292.26 814.9 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 454.08 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 605.24 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 4) 781.49 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
454.08 332.35 786.26 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 11.45 Q
(Nested Structure) 565.19 742.79 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 8.91 Q
(\245) 471.27 709.49 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(More Example) 487.81 709.49 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
3 10.18 Q
0 1 1 0 1 0 0 K
(struct point {) 494.17 692.1 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(float X,Y;) 517.08 680.64 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(};) 494.17 669.19 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// a line is defined as two points) 494.17 646.28 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(struct line {) 494.17 634.83 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(point p1,p2;) 517.08 623.37 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(}) 494.17 611.92 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// a triangle is defined by three points) 494.17 589.01 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(struct triangle {) 494.17 577.56 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(point p1,p2,p3;) 517.08 566.1 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(};) 494.17 554.65 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// a square is defined by) 494.17 531.74 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// an) 494.17 520.28 T
2 F
(array) 530.83 520.28 T
3 F
( of four points) 561.37 520.28 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(struct square {) 494.17 508.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(point vertex[4];) 517.08 497.37 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(};) 494.17 485.92 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(point P;) 494.17 463.01 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(line L;) 494.17 451.56 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(triangle polygon3;) 494.17 440.1 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(square polygon4;) 494.17 428.65 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 8.91 Q
1 1 0 0 0 0 1 K
(\245) 471.27 398.95 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Access to members of nested structure) 487.81 398.95 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
3 10.18 Q
(L.p1.x = 1.0;   L.p1.y = 2.0;) 494.17 381.56 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(polygon4.vertex[0].x = 1.0;) 494.17 358.65 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(polygon4.vertex[0].y = 2.0;) 494.17 347.2 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 2
%%Page: "mini" 3
595.3 841.9 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 292.26 416.45 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 55.64 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 206.79 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 5) 383.04 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
55.64 332.35 387.81 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
290.45 522.54 307.63 533.99 R
0 0 1 0 1 1 0 K
V
0.64 H
2 Z
N
290.45 533.99 353.45 556.9 R
V
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11.45 Q
0 0 0 1 0 0 0 K
(//Program to demonstrate the CD) 72.82 742.79 T
(Account structure type.) 224.44 742.79 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(#include <iostream.h>) 72.82 727.52 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( //Structure for a bank certi\336cate of deposit:) 72.82 708.43 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(struct CD) 72.82 693.16 T
(Account {) 116.58 693.16 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(    double balance;) 72.82 677.89 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(    double interest_rate;) 72.82 662.61 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(    int term;) 72.82 647.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(//months until maturity) 255.14 647.34 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(};) 72.82 632.07 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
( v) 72.82 612.98 T
(oid open_account\050) 81.18 612.98 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(CD) 166.11 612.98 T
(Account& the_account) 181.57 612.98 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(\051;) 287.49 612.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(//Postcond: the_account.balance and the_account.interest_rate) 72.82 597.71 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(//ha) 72.82 582.43 T
(v) 89.77 582.43 T
(e been gi) 95.32 582.43 T
(v) 136.39 582.43 T
(en v) 141.94 582.43 T
(alues that the user entered at the k) 161.06 582.43 T
(e) 316.5 582.43 T
(yboard.) 321.41 582.43 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(v) 72.82 563.34 T
(oid  main\050  \051  {) 78.32 563.34 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(CD) 84.27 548.07 T
(Account account) 99.72 548.07 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(;) 177.02 548.07 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(open_account\050) 84.27 532.8 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account) 151.7 532.8 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(\051;) 187.33 532.8 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(    double rate_fraction, interest;) 72.82 507.34 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    rate_fraction =) 72.82 492.07 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.interest_rate) 154.98 492.07 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(/100.0;) 250.09 492.07 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    interest =) 72.82 476.8 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.balance) 130.18 476.8 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(*rate_fraction*\050) 203.65 476.8 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.term) 277.44 476.8 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(/12.0\051;) 336.92 476.8 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.balance) 84.27 461.53 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
( =) 157.74 461.53 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.balance) 169.93 461.53 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
( + interest;) 243.4 461.53 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    cout.setf\050ios::\336x) 72.82 436.07 T
(ed\051;) 158.87 436.07 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    cout.setf\050ios::sho) 72.82 420.8 T
(wpoint\051;) 162.57 420.8 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    cout.precision\0502\051;) 72.82 405.53 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(    cout << "When your CD matures in " <<) 72.82 390.26 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.term) 274.39 390.26 T
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(             <<  " months,\134n"  << "it will ha) 72.82 376.26 T
(v) 253.1 376.26 T
(e a balance of $") 258.65 376.26 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(             <<) 72.82 360.98 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(account.balance) 125.83 360.98 T
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
( << endl;) 199.3 360.98 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(}) 72.82 345.71 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
290.45 545.45 353.45 556.9 R
0 0 0 1 0 0 0 K
N
290.45 533.99 353.45 545.45 R
N
290.45 522.54 307.63 533.99 R
N
7 10.18 Q
(?) 296.18 522.54 T
(?) 319.09 533.99 T
(?) 319.09 545.45 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 0 1 0 0 1 0 K
0 1 1 0 1 0 0 K
283.43 549.98 283.43 551.66 289.3 549.98 283.43 548.3 4 Y
0 Z
0 1 1 0 1 0 0 K
N
283.43 549.98 283.43 551.66 289.3 549.98 283.43 548.3 4 Y
V
204.54 549.98 283.11 549.98 2 L
2 Z
N
0 0 0 1 0 0 0 K
425.45 292.26 814.9 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 454.08 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 605.24 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 6) 781.49 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
454.08 332.35 786.26 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 11.45 Q
1 0 1 0 0 1 0 K
(v) 471.27 742.79 T
(oid open_account\050) 476.76 742.79 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(CD) 561.7 742.79 T
(Account&  the_account) 577.15 742.79 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(\051) 685.94 742.79 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
({) 471.27 727.52 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cout) 471.27 712.25 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(<< "Enter account balance: $";) 505.63 712.25 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cin) 471.27 696.98 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(>>) 505.63 696.98 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(the_account.balance) 521.41 696.98 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 614.6 696.98 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cout) 471.27 681.7 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(<< "Enter account interest rate: ";) 505.63 681.7 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cin) 471.27 666.43 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(>>) 505.63 666.43 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(the_account.interest_rate) 521.41 666.43 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 636.24 666.43 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cout) 471.27 651.16 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(<< "Enter the number of months until maturity\134n") 505.63 651.16 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(<< "\050must be 12 or fe) 505.63 635.89 T
(wer months\051: ";) 604.06 635.89 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(    cin) 471.27 620.61 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(>>) 505.63 620.61 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(the_account.term) 521.41 620.61 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 600.62 620.61 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(}) 471.27 605.34 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(//  The function create_account returns a structure) 471.27 528.98 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(CD) 471.27 513.71 T
(Account) 486.72 513.71 T
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(  open_account   {) 525.53 513.71 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(CD) 482.72 498.44 T
(Account  temp) 498.17 498.44 T
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(;) 565.61 498.44 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 0 0 0 1 1 K
(cout) 482.72 483.16 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< "Enter account balance: $";) 505.63 483.16 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(    cin) 471.27 467.89 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(>>) 505.63 467.89 T
1 0 1 0 0 1 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(temp.balance) 521.41 467.89 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 582.17 467.89 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(cout) 482.72 452.62 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< "Enter account interest rate: ";) 505.63 452.62 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(    cin) 471.27 437.35 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(>>) 505.63 437.35 T
1 0 1 0 0 1 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(temp.interest_rate) 521.41 437.35 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 603.8 437.35 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(cout) 482.72 422.07 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< "Enter the number of months until maturity\134n") 505.63 422.07 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< "\050must be 12 or fe) 505.63 406.8 T
(wer months\051: ";) 604.06 406.8 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(    cin) 471.27 391.53 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(>>) 505.63 391.53 T
1 0 1 0 0 1 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(temp.term) 521.41 391.53 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(;) 568.18 391.53 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(    return) 471.27 360.98 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(temp) 512.94 360.98 T
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(;) 535.84 360.98 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(}) 471.27 346.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 3
%%Page: "mini" 4
595.3 841.9 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 292.26 416.45 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 55.64 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 206.79 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 7) 383.04 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
55.64 332.35 387.81 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
101.45 349.53 112.91 360.98 R
0 1 0 0 1 0 1 K
V
0.64 H
2 Z
N
1 0 1 0 0 1 0 K
101.45 389.62 112.91 401.07 R
1 0 1 0 0 1 0 K
V
N
101.45 401.07 238.9 412.53 R
V
N
1 0 0 0 0 1 1 K
112.91 429.71 124.36 441.16 R
1 0 0 0 0 1 1 K
V
N
101.45 429.71 112.91 441.16 R
V
N
0 0 0 1 0 0 0 K
101.45 429.71 124.36 441.16 R
0 0 0 1 0 0 0 K
N
1 0 0 0 0 1 1 K
101.45 441.16 336.27 452.62 R
1 0 0 0 0 1 1 K
V
N
0 0 0 1 0 0 0 K
101.45 441.16 336.27 452.62 R
0 0 0 1 0 0 0 K
N
0 1 0 0 1 0 1 K
124.36 349.53 135.82 360.98 R
0 1 0 0 1 0 1 K
V
N
112.91 349.53 124.36 360.98 R
V
N
1 0 1 0 0 1 0 K
101.45 378.16 158.73 389.62 R
1 0 1 0 0 1 0 K
V
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 10.18 Q
1 1 0 0 0 0 1 K
(De\336nitions for) 72.82 749.37 T
8 F
(Date, Student, Classlist) 135.04 749.37 T
0 F
(and) 238.27 749.37 T
8 F
(Class102) 255.52 749.37 T
0 F
(:) 293.98 749.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(struct) 95.73 722.64 T
8 F
(Date) 120.89 722.64 T
0 F
( {) 141.25 722.64 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(int day;) 107.18 710.55 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// day of a Date,) 187.36 710.55 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1 <= day <= 31) 256.09 710.55 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(int month;) 107.18 698.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// month of a Date,) 187.36 698.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1 <= month <= 12) 264 698.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(int year;) 107.18 686.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// year of a Date,) 187.36 686.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1 <= year <= 2000) 256.09 686.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(};) 95.73 674.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(struct) 95.73 650.1 T
8 F
(Student) 120.89 650.1 T
0 F
( {) 154.84 650.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(char name[20];) 107.18 638.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Student\325) 187.36 638.01 T
(s name) 229.51 638.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Date birthdate;) 107.18 625.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Date of a student\325) 187.36 625.92 T
(s birthday) 267.67 625.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(int) 107.18 613.83 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(score[5]) 120.48 613.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Student\325) 187.36 613.83 T
(s test scores) 229.51 613.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(};) 95.73 601.74 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(struct) 95.73 577.56 T
8 F
(Classlist) 120.89 577.56 T
0 F
( {) 157.1 577.56 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Student clist[50];) 107.18 565.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Current list of students in the class) 187.36 565.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(int no_tests;) 107.18 553.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Number of tests students ha) 187.36 553.37 T
(v) 308.48 553.37 T
(e tak) 313.42 553.37 T
(en) 332.83 553.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(int size;) 107.18 541.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Number of students currently enrolled) 187.36 541.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(};) 95.73 529.19 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(Classlist) 95.73 505.01 T
8 F
(Class102) 132.79 505.01 T
0 F
(;) 171.25 505.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
112.91 452.62 112.91 441.16 2 L
0 0 0 1 0 0 0 K
N
124.36 452.62 124.36 441.16 2 L
N
112.91 441.16 112.91 429.71 2 L
N
112.91 412.53 112.91 401.07 2 L
N
313.36 452.62 313.36 441.16 2 L
N
324.81 452.62 324.81 441.16 2 L
N
124.36 412.53 124.36 401.07 2 L
N
112.91 360.98 112.91 349.53 2 L
N
124.36 360.98 124.36 349.53 2 L
N
216 412.53 216 401.07 2 L
N
227.45 412.53 227.45 401.07 2 L
N
101.45 389.62 112.91 401.07 R
N
101.45 378.16 158.73 389.62 R
N
147.27 389.62 147.27 378.16 2 L
N
135.82 389.62 135.82 378.16 2 L
N
124.36 389.62 124.36 378.16 2 L
N
112.91 389.62 112.91 378.16 2 L
N
101.45 349.53 135.82 360.98 R
N
1 1 0 0 0 0 1 K
94.43 406.8 94.43 408.48 100.3 406.8 94.43 405.12 4 Y
0 Z
1 1 0 0 0 0 1 K
N
94.43 406.8 94.43 408.48 100.3 406.8 94.43 405.12 4 Y
V
107.18 446.89 84.27 446.89 84.27 406.8 94.11 406.8 4 L
2 Z
N
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
0 8.91 Q
0 0 0 1 0 0 0 K
(0) 107.18 458.34 T
(49) 324.81 458.34 T
(0) 107.18 418.25 T
(19) 227.45 418.25 T
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(Classlist) 341.99 446.89 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(Student) 250.36 395.35 T
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(Date) 153 355.26 T
0 0 0 1 0 0 0 K
101.45 401.07 238.9 412.53 R
0 0 0 1 0 0 0 K
N
1 1 0 0 0 0 1 K
94.43 355.26 94.43 356.94 100.3 355.26 94.43 353.57 4 Y
0 Z
1 1 0 0 0 0 1 K
N
94.43 355.26 94.43 356.94 100.3 355.26 94.43 353.57 4 Y
V
107.18 395.35 84.27 395.35 84.27 355.26 94.11 355.26 4 L
2 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
147.27 471.09 148.95 471.09 147.27 465.23 145.59 471.09 4 Y
0 Z
N
147.27 471.09 148.95 471.09 147.27 465.23 145.59 471.09 4 Y
V
147.27 498.44 147.27 471.41 2 L
2 Z
N
0 0 0 1 0 0 0 K
425.45 292.26 814.9 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 454.08 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 605.24 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 8) 781.49 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
454.08 332.35 786.26 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10.18 Q
0 0 0 1 0 0 0 K
(// The function in_class reads the student records from the input stream ins) 471.27 744.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// and stores them in the Classlist Class.) 471.27 733.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(void) 471.27 712.04 T
8 F
(in_class) 491.91 712.04 T
0 F
(\050ifstream& ins, Classlist& Class\051 {) 528.41 712.04 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(char temp, j;) 482.72 701.22 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(for \050int i=0; i<Class.size; i++\051 {) 482.72 679.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read student records into Class) 631.63 679.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(ins.get\050temp\051;) 494.17 668.77 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read student names) 631.63 668.77 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(j = 0;) 494.17 657.95 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(while \050temp != '/' && j < 19\051 {) 494.17 647.13 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Student names ends with '/') 639.78 647.13 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(Class.clist[i].name[j] = temp;) 505.63 636.31 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(ins.get\050temp\051;) 505.63 625.49 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(j++;) 505.63 614.68 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(}) 494.17 603.86 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Class.clist[i].name[j] = '\1340';) 494.17 593.04 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// End the string with null char) 644.35 593.04 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(ins >> Class.clist[i].birthdate.day;) 494.17 571.4 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read day of birth) 653.01 571.4 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(ins >> Class.clist[i].birthdate.month;) 494.17 560.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read month of birth) 654.15 560.59 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(ins >> Class.clist[i].birthdate.year;) 494.17 549.77 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( // Read year of birth) 650.74 549.77 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(for \050int k=0; k < Class.no_tests; k++\051) 494.17 528.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read in scores) 656.01 528.13 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(ins >> Class.clist[i].score[k];) 505.63 517.31 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(ins.get\050temp\051;) 494.17 495.68 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(// Read newline character) 654.53 495.68 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(}) 482.72 484.86 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(}) 471.27 474.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 8.91 Q
0 0 0 1 0 0 0 K
(Input file:) 471.27 452.41 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Chan Tai Man/ 10 9 1975 60 70 80) 471.27 441.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Cheng Hong Chung/ 5 8 1976 70 84 65) 471.27 430.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chung Lok Hang/ 12 7 1973 81 87 98) 471.27 419.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Fung Kwok Kay/ 26 12 1972 100 100 100) 471.27 409.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Lam Yuk Yee/ 8 5 1971 91 86 83) 471.27 398.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Poon Wai Wah/ 7 8 1975 56 77 74) 471.27 387.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pang Wing Sum/ 30 8 1973 84 59 74) 471.27 376.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Tam Ka Hung/ 19 11 1975 100 95 99) 471.27 365.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Wong Tak Sun/ 20 3 1974 83 54 71) 471.27 355.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Wong Siu Wing/ 1 5 1972 75 85 95) 471.27 344.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 4
%%Page: "mini" 5
595.3 841.9 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 292.26 416.45 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 55.64 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 206.79 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 9) 383.04 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
55.64 332.35 387.81 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 10.18 Q
1 0 0 0 0 1 1 K
(void main \050  \051 {) 72.82 743.64 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(int ntest, csize, option, testn;) 90 731.55 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(char sname[20], nwln;) 90 719.46 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(Date today = {1, 5, 1997};) 90 707.37 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(ifstream ins;) 90 695.28 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cout << "Enter number of tests: ";) 90 671.1 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cin >> ntest;) 90 659.01 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cout << "Enter number of students: ";) 90 646.92 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(cin >> csize;) 90 634.83 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(Class102.no_tests = ntest;) 90 610.65 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(Class102.size = csize;) 90 598.55 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(ins.open\050\322class102.dat\323\051;) 90 574.37 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(in_class\050ins, Class102\051;) 90 562.28 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(for \050int i = 0;  i  < csize; i++\051 {) 90 538.1 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(   cout) 107.18 526.01 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< setw\05025\051 << setiosflags\050ios:left\051) 141.54 526.01 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< Class102.clist[i].name) 141.54 513.92 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<< setw\05025\051 << setiosflags\050ios:right\051) 141.54 501.83 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(<<) 141.54 489.74 T
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(age \050 today, index, Class102\051) 155.57 489.74 T
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
( << endl;) 274.34 489.74 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(}) 90 477.65 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(ins.close\050 \051;) 90 453.47 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(}) 72.82 441.38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
425.45 292.26 814.9 796.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
0 6.36 Q
0 X
1 1 0 0 0 0 1 K
(COMP102) 454.08 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
(Lectures 24) 605.24 315.58 T
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
-0.8 ( 10) 778.31 315.58 P
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
454.08 332.35 786.26 767.61 11.45 RR
0.32 H
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10.18 Q
0 0 0 1 0 0 0 K
(// The function age returns the ith student in the class list) 471.27 743.64 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(int age \050 Date today, int i, Classlist Class \051 {) 471.27 731.55 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(int csize;) 488.45 719.46 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
(csize = Class.size;) 488.45 695.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(if \050 i < csize \051 {) 488.45 683.19 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(if \050Class.clist[i].birthdate.month <= today.month\051 {) 505.63 671.1 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(if \050  Class.clist[i].birthdate.month == today.month &&) 522.81 659.01 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(Class.clist[i].birthdate.day >  today.day\051) 539.99 646.92 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(return \050today.year - Class.clist[i].birthdate.year - 1\051;) 539.99 634.83 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(else) 522.81 622.74 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(return \050today.year - Class.clist[i].birthdate.year\051;) 539.99 610.65 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
1 0 0 0 0 1 1 K
(}) 505.63 598.55 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(else) 505.63 586.46 T
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
0 0 0 1 0 0 0 K
1 0 0 0 0 1 1 K
(return \050today.year - Class.clist[i].birthdate.year - 1\051;) 522.81 574.37 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 1 0 0 1 0 1 K
(}) 488.45 562.28 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(else  {) 488.45 550.19 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(cout << "Error: Index out-of-range" << endl;) 505.63 538.1 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(eturn 0;) 505.63 526.01 T
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
0 0 0 1 0 0 0 K
0 1 0 0 1 0 1 K
(}) 488.45 513.92 T
0 0 0 1 0 0 0 K
1 0 1 0 0 1 0 K
1 0 1 0 0 1 0 K
(}) 471.27 501.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
8 8.91 Q
0 0 0 1 0 0 0 K
(Sample output:) 471.27 461.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Chan Tai Man) 471.27 439.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 574.35 439.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Cheng Hong Chung) 471.27 428.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 574.35 428.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chung Lok Hang) 471.27 418.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 574.35 418.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Fung Kwok Kay) 471.27 407.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 574.35 407.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Lam Yuk Yee) 471.27 396.41 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 574.35 396.41 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Poon Wai Wah) 471.27 385.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 574.35 385.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pang Wing Sum) 471.27 374.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 574.35 374.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Tam Ka Hung) 471.27 363.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 574.35 363.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Wong Tak Sun) 471.27 353.14 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(23) 574.35 353.14 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Wong Siu Wing) 471.27 342.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(25) 574.35 342.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 5
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 5
%%DocumentFonts: Times-Roman
%%+ Courier-Bold
%%+ Courier-BoldOblique
%%+ Courier
%%+ Courier-Oblique
%%+ Times-Italic
%%+ Times-BoldItalic
%%+ Palatino-Roman
%%+ Times-Bold
%%EOF
