%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 14 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 0 /NewCenturySchlbk-Italic FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /AvantGarde-Book FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "mini" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-1) 152.49 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 458.3 280.79 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(User Interface) 124.21 768.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (The user interface controls how the user interacts with the system.) 67.24 743.13 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 727.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Command-line interface: dif\336cult to learn & use) 67.24 727.48 T
(.) 205.77 727.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 711.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Full-screen, c) 67.24 711.83 T
(haracter) 106.02 711.83 T
(-based interface \050e) 130.48 711.83 T
(.g) 183.34 711.83 T
(., pine/pico on UNIX\051) 188.28 711.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 696.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Graphical interface: straightforw) 67.24 696.18 T
(ard interaction with the system) 162.76 696.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(by manipulating pictures of objects on the screen.) 67.24 688.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Graphical User Interface \050GUI\051) 59.19 659.97 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 431.97 568.29 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-2) 427.64 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 458.3 555.94 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(The X11 W) 373.11 768.28 T
(indow System) 427.97 768.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\322) 342.39 743.13 T
2 F
(T) 344.82 743.13 T
(he X W) 348.95 743.13 T
(indow System is an industry-standard software system) 369.11 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that allows programmer to develop portable graphical user) 342.39 735.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interfaces) 342.39 727.93 T
(.) 369.76 727.93 T
1 F
(\323) 371.27 727.93 T
1 5.01 Q
(1) 373.7 730.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
(\245) 334.34 712.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.24 (It provides a) 342.39 712.28 P
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
-0.24 (device-independent) 379.82 712.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.24 ( arc) 435.91 712.28 P
-0.24 (hitecture so that programs can) 446.41 712.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(displa) 342.39 704.68 T
(y graphics on any hardw) 359.83 704.68 T
(are that supports the X protocol) 430.89 704.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(without ha) 342.39 697.08 T
(ving to c) 373.86 697.08 T
(hange the program \050i.e) 398.16 697.08 T
(. the program interfaces) 463.89 697.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with the X protocol rather than with a terminal speci\336c graphics) 342.39 689.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(library) 342.39 681.88 T
(.\051) 361.43 681.88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 666.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(F) 342.39 666.23 T
(irst developed as part of the Athena researc) 346.5 666.23 T
(h project at MIT into) 472.81 666.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(distributed, hardw) 342.39 658.63 T
(are independent user interfaces) 396.41 658.63 T
(, X has) 488.06 658.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (developed into an industry standard for user interface construction) 342.39 651.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in softw) 342.39 643.43 T
(are products) 365.23 643.43 T
(.) 401.23 643.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 627.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(X does NO) 342.39 627.78 T
(T de\336ne a particular user interface style) 373.06 627.78 T
(. An important) 489.68 627.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(difference between X and other window managers like the one on) 342.39 620.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Macintoshes and MS W) 342.39 612.58 T
(indows) 410.67 612.58 T
(, is that X does not enforce any user) 430.8 612.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface) 342.39 604.98 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(\322look & feel\323.) 369.74 604.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Instead, you can create whatever \322look &) 408.93 604.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(feel\323 you w) 342.39 597.38 T
(ant if you program X applications at a low enough level) 373.69 597.38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050more below) 342.39 589.78 T
(.\051) 376.61 589.78 T
0 0 0 1 0 0 0 K
334.34 472.21 536.1 478.92 C
0 0 0 1 0 0 0 K
338.36 478.02 402.75 478.02 2 L
0.22 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
302.15 431.97 568.29 808.38 C
0 0 0 1 0 0 0 K
0 5.36 Q
0 X
0 0 0 1 0 0 0 K
(1.  X W) 334.34 468.64 T
(indo) 351.11 468.64 T
(w Systems, by D. A. Y) 360.52 468.64 T
(oung) 409.4 468.64 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 33.52 293.15 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-3) 152.49 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 59.85 280.79 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(A Graphics Protocol) 110.6 370.59 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
1 6.26 Q
0 1 1 0 1 0 0 K
(\245) 59.19 344.06 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(Bidirectional) 67.24 344.06 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 331.09 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(X Clients send messages to the X server requesting displa) 75.29 331.09 T
(y of) 242.62 331.09 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(graphics and text, window operations) 75.29 323.49 T
(, etc) 183.4 323.49 T
(.) 195.12 323.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 310.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (The X server sends messages to X c) 75.29 310.53 P
-0.17 (lients) 176.29 310.53 P
-0.17 (, notifying c) 192.36 310.53 P
-0.17 (lients when) 225.94 310.53 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the mouse is moved, keys are pressed, etc) 75.29 302.93 T
(.) 195.27 302.93 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(\245) 59.19 287.28 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(Networked) 67.24 287.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 274.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X protocol operates over standard computer networks) 75.29 274.31 T
(. The) 242.86 274.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (X server ma) 75.29 266.71 P
-0.16 (y ha) 109.92 266.71 P
-0.16 (ve simultaneous connections to multiple remote) 122.1 266.71 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and local c) 75.29 259.11 T
(lients) 105.73 259.11 T
(.) 121.81 259.11 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 246.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The network is completely transparent to the users; users only) 75.29 246.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(feel the speed differences when connected to different hosts) 75.29 238.54 T
(.) 246.56 238.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 33.52 568.29 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-4) 427.64 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 59.85 555.94 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 8.05 Q
1 1 0 0 0 0 1 K
(Example - The most common situation) 363.53 372.38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(Probably) 334.34 346.74 T
(, you ha) 359.42 346.74 T
(ve used a computer running X W) 382.19 346.74 T
(indows already) 477.13 346.74 T
(.) 520.17 346.74 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (When you run a program, suc) 334.34 332.44 P
-0.26 (h as xc) 418.76 332.44 P
-0.26 (loc) 438.01 332.44 P
-0.26 (k, the X server whic) 445.85 332.44 P
-0.26 (h is used to) 502.49 332.44 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (displa) 334.34 324.83 P
-0.03 (y the output from the program is running on the same mac) 351.79 324.83 P
-0.03 (hine) 521.73 324.83 P
-0.03 (.) 534.36 324.83 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Here is an illustration of the situation. All the elements are on the) 334.34 310.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(same computer system.) 334.34 302.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 8.05 Q
(Mac) 334.34 260.01 T
(hine X) 349.93 260.01 T
1 4.47 Q
(\050i.e) 376.46 260.01 T
(.,) 382.76 260.01 T
2 F
( csl3su6) 385.24 260.01 T
1 F
(is the name of a mac) 402.88 260.01 T
(hine in lab 3\051) 445.33 260.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
338.36 96.07 527.49 257.02 R
7 X
V
0.22 H
2 Z
0 X
N
346.41 128.26 386.65 216.79 R
7 X
V
0 X
N
410.79 128.26 451.03 216.79 R
7 X
V
0 X
N
479.2 128.26 519.44 216.79 R
7 X
V
0 X
N
90 450 0.67 0.67 397.74 172.52 G
398.42 172.52 398.42 174.22 404.34 172.52 398.42 170.83 4 Y
1.34 H
0 Z
N
398.42 172.52 398.42 174.22 404.34 172.52 398.42 170.83 4 Y
V
390.67 172.52 397.74 172.52 2 L
2 Z
N
90 450 0.67 0.67 466.15 172.52 G
466.82 172.52 466.82 174.22 472.74 172.52 466.82 170.83 4 Y
0 Z
N
466.82 172.52 466.82 174.22 472.74 172.52 466.82 170.83 4 Y
V
459.08 172.52 466.15 172.52 2 L
2 Z
N
3 F
(Xclient program) 346.41 220.81 T
(X server) 410.79 220.81 T
(Display Hardware) 479.2 220.81 T
90 450 0.67 0.67 180 399.7 164.47 GG
399.03 164.48 399.03 162.78 393.11 164.48 399.03 166.17 4 Y
0 Z
N
399.03 164.48 399.03 162.78 393.11 164.48 399.03 166.17 4 Y
V
399.7 164.48 406.77 164.48 2 L
2 Z
N
90 450 0.67 0.67 180 468.11 164.47 GG
467.43 164.48 467.43 162.78 461.51 164.48 467.43 166.17 4 Y
0 Z
N
467.43 164.48 467.43 162.78 461.51 164.48 467.43 166.17 4 Y
V
468.11 164.48 475.18 164.48 2 L
2 Z
N
2 5.36 Q
(xcloc) 354.46 173.86 T
(k) 366.28 173.86 T
1 F
(F) 350.43 184.59 T
(or example) 353.72 184.59 T
(,) 380.95 184.59 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 1
%%Page: "mini" 2
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-5) 152.49 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 458.3 280.79 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 8.05 Q
1 1 0 0 0 0 1 K
(Putting the displa) 84.4 770.82 T
(y on another computer) 151.7 770.82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(Y) 59.19 745.19 T
(ou can use the capabilities of X windows to put the displa) 62.97 745.19 T
(y on) 228.58 745.19 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(another mac) 59.19 737.59 T
(hine instead.) 95.32 737.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 (The information is communicated from one mac) 59.19 723.28 P
-0.22 (hine to another across) 196 723.28 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the network.) 59.19 715.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (This can work for any mac) 59.19 701.37 P
-0.09 (hines that speak the X protocol, even if one) 135.35 701.37 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of the mac) 59.19 693.77 T
(hines is on the other side of the world!) 89.06 693.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
59.19 464.16 260.96 776.19 C
62.83 466.8 257.32 677.38 C
0 0 0 1 0 0 0 K
66.85 580.81 255.97 657.26 R
7 X
0 0 0 1 0 0 0 K
V
0.45 H
2 Z
0 X
N
0 0 1 0 1 1 0 K
137.95 592.88 178.18 638.48 R
7 X
0 0 1 0 1 1 0 K
V
0.22 H
0 X
N
206.35 592.88 246.59 638.48 R
7 X
V
0 X
N
90 450 0.67 0.67 190.62 617.02 G
191.29 617.02 191.29 618.72 197.21 617.02 191.29 615.32 4 Y
1.34 H
0 Z
N
191.29 617.02 191.29 618.72 197.21 617.02 191.29 615.32 4 Y
V
183.55 617.02 190.62 617.02 2 L
2 Z
N
0 0 0 1 0 0 0 K
3 4.47 Q
0 0 0 1 0 0 0 K
(Xclient program) 73.56 642.51 T
0 0 1 0 1 1 0 K
0 0 1 0 1 1 0 K
(X server) 137.95 642.51 T
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
(Display Hardware) 206.35 642.51 T
90 450 0.67 0.67 180 192.57 608.97 GG
191.9 608.97 191.9 607.28 185.98 608.97 191.9 610.67 4 Y
0 Z
N
191.9 608.97 191.9 607.28 185.98 608.97 191.9 610.67 4 Y
V
192.57 608.97 199.64 608.97 2 L
2 Z
N
0 0 0 1 0 0 0 K
2 5.36 Q
0 0 0 1 0 0 0 K
(,) 82.95 621.05 T
(xcloc) 82.95 610.32 T
(k) 94.77 610.32 T
1 F
(F) 78.93 621.05 T
(or example) 82.21 621.05 T
(,) 109.44 621.05 T
1 8.05 Q
(Mac) 70.88 661.28 T
(hine A) 86.47 661.28 T
1 4.47 Q
(\050i.e) 113.14 661.28 T
(.,) 119.44 661.28 T
2 F
( csl3su6) 121.93 661.28 T
1 F
(\051) 139.56 661.28 T
66.85 472.16 255.97 548.62 R
7 X
V
0.22 H
0 X
N
137.94 484.23 178.18 529.84 R
7 X
V
0 X
N
206.35 484.23 246.59 529.84 R
7 X
V
0 X
N
90 450 0.67 0.67 190.62 508.38 G
191.29 508.38 191.29 510.08 197.21 508.38 191.29 506.68 4 Y
1.34 H
0 Z
N
191.29 508.38 191.29 510.08 197.21 508.38 191.29 506.68 4 Y
V
183.55 508.38 190.62 508.38 2 L
2 Z
N
3 F
(X server) 137.94 533.86 T
(Display Hardware) 206.35 533.86 T
90 450 0.67 0.67 180 192.57 500.33 GG
191.9 500.33 191.9 498.63 185.98 500.33 191.9 502.03 4 Y
0 Z
N
191.9 500.33 191.9 498.63 185.98 500.33 191.9 502.03 4 Y
V
192.57 500.33 199.64 500.33 2 L
2 Z
N
1 8.05 Q
(Mac) 70.88 560.69 T
(hine B) 86.47 560.69 T
1 4.47 Q
(\050i.e) 70.88 552.64 T
(.) 77.17 552.64 T
2 F
(,csl3su7) 78.42 552.64 T
1 F
(\051) 94.81 552.64 T
90 450 0.67 0.67 128.55 508.38 G
129.22 508.38 129.22 509.41 132.83 508.38 129.22 507.34 4 Y
0 Z
N
129.22 508.38 129.22 509.41 132.83 508.38 129.22 507.34 4 Y
V
128.55 508.38 127.21 508.38 127.21 617.02 119.17 617.02 4 L
2 Z
N
127.21 500.33 123.19 500.33 123.19 613 119.17 613 4 L
N
2 5.36 Q
(Networ) 131.24 564.71 T
(k) 149.02 564.71 T
123.19 500.33 135.26 500.33 2 L
N
90 450 0.67 0.67 180 121.85 613 GG
121.18 613 121.18 611.97 117.57 613 121.18 614.03 4 Y
0 Z
N
121.18 613 121.18 611.97 117.57 613 121.18 614.03 4 Y
V
121.85 613 123.19 613 2 L
2 Z
N
115.14 617.02 127.21 617.02 2 L
N
70.88 591.54 111.12 637.14 R
7 X
V
0.22 H
0 X
N
1 F
(F) 74.9 621.05 T
(or example) 78.18 621.05 T
(,) 105.41 621.05 T
2 F
(xcloc) 74.9 610.32 T
(k) 86.72 610.32 T
0 0 0 1 0 0 0 K
59.19 464.16 260.96 776.19 C
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 431.97 568.29 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-6) 427.64 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 458.3 555.94 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
479.2 687.66 519.44 748.02 8.05 RR
7 X
V
0.22 H
2 Z
0 X
N
350.43 687.66 390.67 715.83 8.05 RR
7 X
V
0 X
N
350.43 719.85 390.67 748.02 8.05 RR
7 X
V
0 X
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(Complicated Example) 380.77 769.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
354.46 723.88 386.65 744 R
7 X
0 0 0 1 0 0 0 K
V
0 X
N
1 8.05 Q
(Client) 358.48 731.93 T
354.46 691.69 386.65 711.81 R
7 X
V
0 X
N
483.22 723.88 515.41 744 R
7 X
V
0 X
N
483.22 691.69 515.41 711.81 R
7 X
V
0 X
N
(Client) 487.25 731.93 T
(Client) 487.25 699.74 T
(Client) 358.48 699.74 T
(Mac) 354.46 752.05 T
(hine A) 370.05 752.05 T
(Mac) 350.43 675.59 T
(hine B) 366.02 675.59 T
(Mac) 479.2 679.61 T
(hine C) 494.79 679.61 T
406.77 707.78 451.03 727.9 8.05 RR
7 X
V
0 X
N
(Network) 414.82 715.83 T
386.65 735.95 406.77 723.88 2 L
N
386.65 699.74 406.77 711.81 2 L
N
451.03 719.85 483.22 731.93 2 L
N
451.03 719.85 483.22 699.74 2 L
N
374.58 631.33 406.77 651.45 R
N
455.06 631.33 487.25 651.45 R
N
402.75 591.09 459.08 615.23 R
N
410.79 546.83 451.03 574.99 8.05 RR
N
406.77 542.8 455.06 579.02 R
N
430.91 550.85 442.98 562.92 R
N
438.96 562.92 438.96 566.95 2 L
N
438.96 566.95 422.86 566.95 2 L
N
422.86 566.95 422.86 554.88 2 L
N
422.86 554.88 430.91 554.88 2 L
N
430.91 570.97 414.82 570.97 2 L
N
414.82 570.97 414.82 558.9 2 L
N
414.82 558.9 422.86 558.9 2 L
N
406.77 502.57 463.1 522.68 R
N
402.75 498.54 467.13 526.71 8.05 RR
N
90 450 4.02 8.05 487.25 526.71 A
483.22 526.71 491.27 530.73 R
N
487.25 526.71 487.25 526.71 2 L
N
491.27 530.73 491.27 526.71 2 L
N
487.25 530.73 487.25 526.71 2 L
N
(K) 418.84 510.61 T
(eyboard) 425.18 510.61 T
(Displa) 422.64 532.85 T
(y) 446.71 532.85 T
418.84 542.8 410.79 526.71 2 L
N
0 90 32.19 16.1 455.06 534.76 A
1 10.73 Q
(Server) 406.77 603.16 T
1 8.05 Q
(Client) 378.6 639.38 T
(Client) 459.08 639.38 T
370.55 494.52 495.29 655.47 R
N
430.91 591.09 430.91 579.02 2 L
1.79 H
N
430.91 703.76 430.91 615.23 2 L
1.34 H
N
(Mac) 374.58 659.5 T
(hine D) 390.17 659.5 T
1 6.26 Q
(USER) 418.84 486.47 T
0 0 0 1 0 0 0 K
27 33.52 293.15 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-7) 152.49 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 59.85 280.79 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(Client/Server Multitasking) 93 369.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(When the X server is running on a) 67.24 344.68 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(multitasking) 168.67 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( system suc) 206.12 344.68 T
(h as a) 239.34 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.03 (Unix workstation, c) 67.24 337.08 P
-0.03 (lients are often run on the same computer that) 124.06 337.08 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is running the X server) 67.24 329.48 T
(. In this case) 133.73 329.48 T
(, the c) 170.36 329.48 T
(lients communicate with) 187.71 329.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the X server through inter) 67.24 321.88 T
(-process communication facilities) 143.16 321.88 T
(. The) 238.75 321.88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(network need not be used in this case) 67.24 314.28 T
(.) 175.52 314.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 298.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(When the X server is running on a) 67.24 298.63 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(non-multitasking) 168.67 298.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( system, all) 218.98 298.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0 (c) 67.24 291.03 P
-0 (lients must be accessed over the network. X is not useful on these) 69.97 291.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mac) 67.24 283.43 T
(hines unless a host system is a) 79.02 283.43 T
(vailable to run c) 168 283.43 T
(lient softw) 214.79 283.43 T
(are) 245.17 283.43 T
(.) 254.45 283.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 267.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Mac) 67.24 267.78 T
(hines running MS-DOS generally cannot run X c) 79.36 267.78 T
(lients at the) 220.27 267.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(same time that they are running an X server) 67.24 260.18 T
(, although products) 196.22 260.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ha) 67.24 252.58 T
(ve been announced that will support X c) 74.48 252.58 T
(lients under various) 190.48 252.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(multi-tasking systems) 67.24 244.98 T
(.) 131.54 244.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 229.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unix products a) 67.24 229.33 T
(vailable for the PC and Macintosh do provide) 113.43 229.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(support for local c) 67.24 221.73 T
(lient/server operation.) 118.77 221.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 1 0 0 0 0 1 K
(eXcursion is an X-server that runs on PC) 59.19 193.12 T
(.) 177.78 193.12 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 33.52 568.29 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-8) 427.64 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 59.85 555.94 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(A GUI Support System) 377.89 369.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 334.34 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X protocol provides comprehensive support for windows) 342.39 344.68 T
(.) 515.87 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.23 (Any window ma) 342.39 329.03 P
-0.23 (y contain other windows) 388.35 329.03 P
-0.23 (. The containing window is) 457.97 329.03 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 (said to be the) 342.39 321.43 P
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
-0.22 (parent) 381.96 321.43 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 ( or) 401.2 321.43 P
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
-0.22 (ancestor) 410.14 321.43 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.22 ( window) 434.59 321.43 P
-0.22 (, the contained window the) 457.58 321.43 P
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(c) 342.39 313.83 T
(hild) 345.12 313.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( or) 356.48 313.83 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(descendent) 365.87 313.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. Multiple windows with the same parent are) 398.21 313.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(said to be siblings) 342.39 306.23 T
(.) 393.95 306.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Sibling windows ma) 342.39 290.58 T
(y overlap eac) 400.53 290.58 T
(h other) 438.16 290.58 T
(.) 458.4 290.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(All windows are descendents of the root window) 342.39 274.93 T
(.) 480.36 274.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
342.39 144.36 527.49 257.02 R
0.22 H
2 Z
N
362.51 168.5 503.34 232.88 R
N
378.6 172.52 406.77 184.59 R
N
418.84 172.52 447.01 184.59 R
N
455.06 172.52 483.22 184.59 R
N
362.51 232.88 418.84 244.95 R
N
362.51 168.5 370.55 232.88 R
6 X
V
0 X
N
(Example W) 366.53 236.91 T
(indow) 399.92 236.91 T
(button) 382.63 176.55 T
(button) 422.86 176.55 T
(button) 459.08 176.55 T
(W) 378.6 200.69 T
(indow A.1) 384.63 200.69 T
(W) 418.84 200.69 T
(indow A.2) 424.87 200.69 T
(W) 459.08 200.69 T
(indow A.3) 465.11 200.69 T
390.67 189.64 392.01 189.64 390.67 185 389.34 189.64 4 Y
0 Z
N
390.67 189.64 392.01 189.64 390.67 185 389.34 189.64 4 Y
V
390.67 200.69 390.67 189.75 2 L
2 Z
N
434.94 189.64 436.27 189.64 434.94 185 433.61 189.64 4 Y
0 Z
N
434.94 189.64 436.27 189.64 434.94 185 433.61 189.64 4 Y
V
434.94 200.69 434.94 189.75 2 L
2 Z
N
467.13 189.64 468.46 189.64 467.13 185 465.8 189.64 4 Y
0 Z
N
467.13 189.64 468.46 189.64 467.13 185 465.8 189.64 4 Y
V
467.13 200.69 467.13 189.75 2 L
2 Z
N
(W) 382.63 220.81 T
(indow A.4) 388.65 220.81 T
375.6 220.81 375.6 219.48 370.96 220.81 375.6 222.14 4 Y
0 Z
N
375.6 220.81 375.6 219.48 370.96 220.81 375.6 222.14 4 Y
V
382.63 220.81 375.71 220.81 2 L
2 Z
N
474.18 236.92 475.24 236.12 471.39 233.21 473.11 237.72 4 Y
0 Z
N
474.18 236.92 475.24 236.12 471.39 233.21 473.11 237.72 4 Y
V
483.22 248.98 474.25 237.01 2 L
2 Z
N
(W) 487.25 244.95 T
(indow A) 493.27 244.95 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(Root W) 390.67 132.28 T
(indow) 411.66 132.28 T
0 0 0 1 0 0 0 K
414.82 147.36 413.49 147.36 414.82 152 416.15 147.36 4 Y
0 Z
0 0 0 1 0 0 0 K
N
414.82 147.36 413.49 147.36 414.82 152 416.15 147.36 4 Y
V
414.82 140.33 414.82 147.25 2 L
2 Z
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 2
%%Page: "mini" 3
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-9) 152.49 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 458.3 280.79 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(The W) 102.39 768.28 T
(indow Hierarc) 134.78 768.28 T
(hy) 205.44 768.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Like the UNIX \336le system, X windows are hierarc) 67.24 743.13 T
(hical:) 211.3 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 676.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A root window is create whic) 75.29 676.78 T
(h covers the whole screen) 158.24 676.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 665.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Every window except the root has a parent) 75.29 665.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 653.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A window can ha) 75.29 653.53 T
(ve c) 124.61 653.53 T
(hildren windows) 135.58 653.53 T
(.) 183.41 653.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 637.88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 67.24 637.88 T
(oolkits) 71.07 637.88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 624.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 75.29 624.92 T
(oolkits are object oriented libraries that give programs a) 79.12 624.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(consistent look and feel.) 75.29 617.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 67.24 604.35 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (Libraries are generally statically linked into the c) 75.29 604.35 P
-0.14 (lient program.) 218 604.35 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Eac) 75.29 596.75 T
(h c) 86.02 596.75 T
(lient program contains code to handle an entire user) 94.32 596.75 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(interface) 75.29 589.15 T
(.) 100.79 589.15 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
99.23 686.32 220.92 741.04 C
0 0 0 1 0 0 0 K
4 4.47 Q
0 X
0 0 0 1 0 0 0 K
(Root) 157.15 729.69 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 122.98 721.78 T
(indo) 127.3 721.78 T
(w A) 136.82 721.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 180.66 721.33 T
(indo) 184.98 721.33 T
(w B) 194.51 721.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 106.88 709.71 T
(indo) 111.2 709.71 T
(w C) 120.73 709.71 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 137 709.57 T
(indo) 141.32 709.57 T
(w E) 150.84 709.57 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 137 697.5 T
(indo) 141.32 697.5 T
(w G) 150.84 697.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 165.17 709.71 T
(indo) 169.49 709.71 T
(w D) 179.01 709.71 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 193.33 709.57 T
(indo) 197.65 709.57 T
(w F) 207.18 709.57 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 193.33 697.5 T
(indo) 197.65 697.5 T
(w H) 207.18 697.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
154.23 728.34 146.62 725.21 2 L
0.22 H
2 Z
N
128.29 718.51 120.69 715.38 2 L
N
183.29 718.51 175.69 715.38 2 L
N
176.58 725.66 168.98 728.79 2 L
N
203.18 714.26 197.65 717.93 2 L
N
146.68 715.7 139.08 718.82 2 L
N
146.85 706.88 147.07 702.86 2 L
N
203.18 707.11 203.41 703.08 2 L
N
0 0 0 1 0 0 0 K
99.23 686.32 220.92 741.04 R
0.89 H
0 Z
N
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
75.29 502.57 248.31 570.97 R
0.22 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
83.33 530.73 196 554.88 R
N
83.33 518.66 216.12 530.73 R
N
83.33 506.59 232.22 518.66 R
N
1 6.26 Q
(T) 87.36 546.83 T
(oolkit/W) 91.19 546.83 T
(idgets-Motif) 115.31 546.83 T
(,) 150.08 546.83 T
(OpenLook, Athena W) 87.36 540.57 T
(idget Set) 149.38 540.57 T
(X Intrinsics-T) 87.36 522.68 T
(oolkit Support Library) 127.35 522.68 T
(XLIB- C Language X W) 87.36 510.61 T
(indow Protocol Interface) 155.64 510.61 T
(User Code) 87.36 558.9 T
(X Client) 75.29 574.99 T
0 0 0 1 0 0 0 K
302.15 431.97 568.29 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-10) 426.74 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 458.3 555.94 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
(\245) 334.34 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The diagram above indicates that X c) 342.39 743.13 T
(lient softw) 450.17 743.13 T
(are is built on a) 480.54 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(softw) 342.39 735.53 T
(are hierarc) 357.69 735.53 T
(hy) 389.52 735.53 T
(. At the bottom is the XLIB library) 395.92 735.53 T
(, whic) 495.31 735.53 T
(h) 512.19 735.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(handles the X protocol and networking issues) 342.39 727.93 T
(.) 473.69 727.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 712.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X Intrinsics library provides an object-oriented framework for) 342.39 712.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the high level toolkits) 342.39 704.68 T
(.) 405.07 704.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 689.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The toolkit provides user interface objects) 342.39 689.03 T
(, called W) 463.25 689.03 T
(idgets) 491.42 689.03 T
(, suc) 508.65 689.03 T
(h as) 521.59 689.03 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(menus) 342.39 681.43 T
(, buttons) 361.47 681.43 T
(, text boxes) 386.82 681.43 T
(, \336le requesters) 419.25 681.43 T
(, scroll bars) 463.72 681.43 T
(,) 496.95 681.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( and) 498.69 681.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(whatever else ma) 342.39 673.83 T
(y form part of the look and feel de\336ned by the) 392.99 673.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(makers of the toolkit.) 342.39 666.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 650.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The toolkits are provided by outside sources and are not an of\336cial) 342.39 650.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(part of X, although the Athena W) 342.39 642.98 T
(idget Set is provided as a) 438.96 642.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(demonstration toolkit witht the X window system.) 342.39 635.38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 619.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 342.39 619.73 T
(indow Manager) 348.42 619.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 606.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Because the server provides only the support mec) 350.43 606.77 T
(hanism for a) 493.66 606.77 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(graphical user interface) 350.43 599.16 T
(, a special X c) 419.29 599.16 T
(lient called a) 458.43 599.16 T
3 F
(W) 497.39 599.16 T
(indow) 503.42 599.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Manager) 350.43 591.56 T
1 F
( is responsible for providing a consistent work) 379.18 591.56 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(environment on) 350.43 583.96 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(the root window) 397.84 583.96 T
(.) 443.66 583.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 571 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The window manager is often designed to complement a) 350.43 571 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(particular toolkit, so that the top level c) 350.43 563.4 T
(lient windows are) 465.28 563.4 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(decorated in a style similar to the style of the user interface) 350.43 555.8 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(objects within the c) 350.43 548.2 T
(lient windows) 406.38 548.2 T
(.) 446.45 548.2 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 535.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Generally) 350.43 535.23 T
(, c) 378.17 535.23 T
(lients compiled with any given toolkit ma) 384.39 535.23 T
(y be used) 503.97 535.23 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with any given window manager) 350.43 527.63 T
(, although the window) 444.06 527.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(decorations ma) 350.43 520.03 T
(y c) 394.31 520.03 T
(lash with the c) 402.14 520.03 T
(lient\325) 444.76 520.03 T
(s internal look and feel.) 459.22 520.03 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 33.52 293.15 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-11) 151.6 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 59.85 280.79 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(The Event Model) 117.55 369.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(When the user does something with the keyboard or the mouse) 67.24 344.68 T
(,) 249.36 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(this creates an) 67.24 337.08 T
0 1 1 0 1 0 0 K
2 F
0 1 1 0 1 0 0 K
(event) 111.53 337.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
0 0 0 1 0 0 0 K
(\245) 59.19 321.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X server reports the event to one \050and only one\051 of its c) 67.24 321.43 T
(lient) 237.83 321.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(applications) 67.24 313.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 298.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The c) 67.24 298.18 T
(lient generates a message \050using Xlib and eventually X) 82.84 298.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(protocol\051 for the server in response to the event) 67.24 290.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 274.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X server then updates the displa) 67.24 274.93 T
(y) 174.29 274.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 259.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The window that gets keyboard events has \322input focus\323) 67.24 259.29 T
0 0 0 1 0 0 0 K
71.67 192.64 248.48 257.2 C
0 0 0 1 0 0 0 K
156.17 253.18 156.17 200.87 2 L
1.79 H
2 Z
2 X
0 0 0 1 0 0 0 K
N
239.01 247.27 243.03 243.25 242.75 225.63 239.01 223.13 4 Y
5 X
V
0.22 H
0 Z
0 X
N
210.84 215.08 239.01 219.11 R
5 X
V
0 X
N
210.84 219.11 214.86 223.13 243.03 223.13 239.01 219.11 4 Y
5 X
V
0 X
N
239.01 215.08 239.01 219.11 243.03 223.13 243.03 219.11 4 Y
5 X
V
0 X
N
5 X
180 270 8.05 2.24 226.94 221.79 G
2 Z
0 X
180 270 8.05 2.24 226.94 221.79 A
5 X
270 360 8.05 2.24 226.94 221.79 G
0 X
270 360 8.05 2.24 226.94 221.79 A
213.07 221.34 240.79 249.06 R
5 X
V
0 Z
0 X
N
214.86 223.13 239.01 247.27 R
7 X
V
214.86 223.13 239.01 247.27 R
0 X
N
222.91 235.2 230.96 243.25 R
14 X
V
0 X
N
226.93 231.18 234.98 239.22 R
12 X
V
0 X
N
234.24 242.13 238.26 246.15 R
4 X
V
0 X
N
4 4.47 Q
(User mo) 184.09 245.85 T
(v) 201.23 245.85 T
(es) 203.62 245.85 T
(mouse into) 184.09 239.59 T
(a windo) 184.09 233.33 T
(w) 201.62 233.33 T
230.58 231.34 230.24 231.04 230.06 231.93 230.92 231.64 4 Y
N
230.58 231.34 230.24 231.04 230.06 231.93 230.92 231.64 4 Y
V
230.81 231.09 230.66 231.25 2 L
4 X
V
2 Z
0 X
N
(Ser) 184.87 223.04 T
(v) 191.52 223.04 T
(er tells) 193.91 223.04 T
(client) 184.87 216.78 T
138.26 221.18 138.36 220.04 136.27 221.01 138.15 222.33 4 Y
0 Z
N
138.26 221.18 138.36 220.04 136.27 221.01 138.15 222.33 4 Y
V
180.32 225.01 138.37 221.2 2 L
4 X
V
2 Z
0 X
N
(Client sends) 107.89 220.5 T
(message to) 107.89 214.24 T
(ser) 107.89 209.77 T
(v) 114.05 209.77 T
(er) 116.44 209.77 T
178.11 209.11 178.22 210.26 180.09 208.93 178.01 207.97 4 Y
0 Z
N
178.11 209.11 178.22 210.26 180.09 208.93 178.01 207.97 4 Y
V
136.05 212.94 178 209.12 2 L
4 X
V
2 Z
0 X
N
(Ser) 184.34 205.61 T
(v) 191 205.61 T
(er updates) 193.38 205.61 T
(display) 184.34 201.14 T
0 0 0 1 0 0 0 K
27 33.52 293.15 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 33.52 568.29 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-12) 426.74 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 59.85 555.94 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(Why Use the X-W) 353.84 369.83 T
(indows System) 442.27 369.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 334.34 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(One user ma) 342.39 344.68 T
(y work with, and view the results from, many) 379.3 344.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(programs and remote hosts simultaneously) 342.39 337.08 T
(.) 466.69 337.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 321.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Cut and paste is supported between applications) 342.39 321.43 T
(.) 482.85 321.43 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 305.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Use of the X window system is a w) 342.39 305.78 T
(a) 442.1 305.78 T
(y to ac) 445.52 305.78 T
(hieve applications) 464.14 305.78 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(portability) 342.39 298.18 T
(. The X window system is the de-facto standard in) 372.21 298.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(networked graphics) 342.39 290.58 T
(, and is used all over the world.) 399.26 290.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 274.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The X window system\325) 342.39 274.93 T
(s network support allows c) 406.81 274.93 T
(lients to be used) 483.86 274.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on any server reac) 342.39 267.33 T
(hable through the network by the c) 395.43 267.33 T
(lient\325) 497.17 267.33 T
(s host.) 511.62 267.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 251.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 342.39 251.68 T
(oolkits a) 346.22 251.68 T
(vailable for X allow for relatively easy creation of) 370.62 251.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(application user interfaces) 342.39 244.09 T
(.) 419.08 244.09 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 3
%%Page: "mini" 4
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
27 431.97 293.15 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-13) 151.6 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 458.3 280.79 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(X Clients) 137.02 768.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Application c) 67.24 743.13 T
(lients) 104.98 743.13 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 727.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 67.24 727.48 T
(indow managers) 73.27 727.48 T
(.) 120.76 727.48 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 431.97 568.29 808.38 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-14) 426.74 448.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 458.3 555.94 796.31 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(Application Clients) 387.43 769.04 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
1 6.26 Q
0 1 1 0 1 0 0 K
(\245) 334.34 742.51 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(xterm) 342.39 742.51 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 729.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(VT102 terminal emulator) 350.43 729.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 716.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Supports text history with scroll bar) 350.43 716.58 T
(.) 454.83 716.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 700.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(xman) 342.39 700.93 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 687.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unix manual page browser) 350.43 687.96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 672.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(xload) 342.39 672.31 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 659.35 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(CPU load a) 350.43 659.35 T
(verage monitor) 383.3 659.35 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(\245) 334.34 643.7 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(xc) 342.39 643.7 T
(loc) 348.48 643.7 T
(k) 356.32 643.7 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 630.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Digital or analog c) 350.43 630.73 T
(loc) 403.61 630.73 T
(k) 411.45 630.73 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 615.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(xcalc) 342.39 615.08 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 602.12 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(On-screen calculator utility) 350.43 602.12 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 334.34 586.47 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(xdtm- X Desktop Manager) 342.39 586.47 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 573.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Combination \336le manager and program manager) 350.43 573.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 560.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Customizable) 350.43 560.54 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(\245) 334.34 544.89 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
(ghostview) 342.39 544.89 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 342.39 531.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(P) 350.43 531.92 T
(ostscript viewer) 354.38 531.92 T
(, interactive interpreter for X windows) 399.65 531.92 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
27 33.52 293.15 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-15) 151.6 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
39.36 59.85 280.79 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(W) 113.77 370.59 T
(indow Managers) 124.11 370.59 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
0 0 0 1 0 0 0 K
(\245) 59.19 344.06 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (A window manager is an X c) 67.24 344.06 P
-0.29 (lient that is granted special permission) 147.67 344.06 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(by the X server to ha) 67.24 336.46 T
(ve supervisory powers over window requests) 127.46 336.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(from other c) 67.24 328.86 T
(lients on the server) 102.31 328.86 T
(. Any top-level window operation) 157.56 328.86 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that a c) 67.24 321.26 T
(lient requests must be veri\336ed by the window manager) 89.11 321.26 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(before it takes place) 67.24 313.66 T
(. The window manager is free to ignore any) 125.1 313.66 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(c) 67.24 306.06 T
(lient request that does not conform with the GUI maintained by) 69.97 306.06 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the window manager) 67.24 298.46 T
(.) 127.36 298.46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\245) 59.19 282.81 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Some popular window managers:) 67.24 282.81 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Ultrix uwm) 67.24 271.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(One of the \336rst and most basic window) 119.55 271.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(management systems; good if you don\325t w) 119.55 263.58 T
(ant to) 239.31 263.58 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(spare a lot of memory for window management) 119.55 255.98 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Motif mwm) 67.24 244.36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(A consolidation of several window management) 119.55 244.36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(systems \320 similar to Microsoft W) 119.55 236.76 T
(indows or) 214.26 236.76 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Presentation Manager look & feel) 119.55 229.16 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Openlook olwm) 67.24 217.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(A Macintosh-like look & feel with 3D features) 119.55 217.53 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(T) 67.24 205.91 T
(om\325) 71.06 205.91 T
(s twm) 80.88 205.91 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
-0.08 (One of the most popular) 119.55 205.91 P
-0.08 (. Distributed with X11R6) 188.38 205.91 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(fvwm) 67.24 194.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(Standard window manager with Linux. A little) 119.55 194.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(like mwm.) 119.55 186.68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
302.15 33.52 568.29 409.93 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 3.58 Q
0 X
0 0 0 1 0 0 0 K
(III-16) 426.74 50.22 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
314.51 59.85 555.94 397.86 R
0.11 H
0 Z
N
0 0 0 1 0 0 0 K
1 1 0 0 0 0 1 K
1 10.73 Q
1 1 0 0 0 0 1 K
(W) 388.92 369.83 T
(indow Managers) 399.25 369.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 8.05 Q
0 0 0 1 0 0 0 K
(Sample xterm without window management) 352.64 343.49 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 6.26 Q
(\245) 334.34 220.84 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 342.39 220.84 T
(ith no window manager running) 348.42 220.84 T
(, an xterm window opens on the) 441.69 220.84 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.05 (root window looking like this) 342.39 213.24 P
-0.05 (. The user has no w) 425.75 213.24 P
-0.05 (a) 481.63 213.24 P
-0.05 (y to move) 485.05 213.24 P
-0.05 (, resize) 512.43 213.24 P
-0.05 (,) 532.67 213.24 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(or otherwise manipulate the window\325) 342.39 205.63 T
(s con\336guration or position.) 449.47 205.63 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
342.39 240.93 527.49 325.43 R
0.22 H
2 Z
N
342.39 240.93 350.44 325.43 R
4 X
V
0 X
N
(% more start_x_script) 354.46 317.38 T
(#!/bin/csh) 354.46 311.12 T
(setenv DISPLA) 354.46 304.86 T
(Y 129.116.224.153:0.3) 398.74 304.86 T
(xterm -j -ls -s -sb -sk -sl 256) 354.46 298.6 T
(%) 354.46 292.35 T
362.51 293.24 366.53 297.26 R
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "mini" 4
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 4
%%DocumentFonts: Times-Roman
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Bold
%%+ AvantGarde-Book
%%EOF
