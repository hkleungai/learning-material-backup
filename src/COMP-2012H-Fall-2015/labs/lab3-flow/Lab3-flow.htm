<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>COMP2012H Lab (Flow Control)</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META content="Nicole Chan" name=Author>
<META content="Microsoft FrontPage 12.0" name=GENERATOR></HEAD>
<BODY text=#000000 vLink=#551A8B aLink=#FF0000 link=#CC66CC 
bgColor=#CCFFFF><B><FONT size=+2 face="Arial,Helvetica">COMP 2012H <br>Honors 
OOP and Data Structures</FONT></B>&nbsp;<P><B><FONT size=+2 color="#cc0000" face="Arial,Helvetica">Lab 
3 : Flow Control 
and Loops</FONT></B><BR>
<HR width="100%">

<CENTER>
</CENTER>

<h2>Number Guessing Game</h2>
<p>In this lab, you are going to use C++ to implement a game about 
guessing a number between 1 to 100. This is a repeating guessing game that 
adjusts the upper and lower boundaries according to the player's guesses to 
approach the secret number. The program also keeps a counter on the number of 
attempts the player has made.</p>
<p>Program Flow Algorithm:</p>
<ol>
  <li>First, your program needs to generate a secret number (this part is given 
  to you). </li>
  <li>Then, the user inputs a number within the lower boundary and the upper 
  boundary (1 and 100). </li>
  <li>Check whether the input number is within the lower boundary and the upper 
  boundary. </li>
  <li>If the input number is out of range, output an error statement and ask the 
  user to input again. </li>
  <li>If the input is within the range, check whether it is the correct answer. 
  If the input number is not the correct answer, update the new upper boundary 
  or lower boundary according to the secret number and the input number. </li>
  <li>Loop back to Step 2 until the answer is correct. </li>
  <li>When the user has guessed the number, output a message that the user has 
  guesses the number correctly and show the number of his/her attempts to guess 
  the number. </li>
  <li>Ask the user whether he/she wants to play again, if yes (y/Y), loop back 
  to Step 1. </li>
</ol>
<p>A suggested skeleton is given <a href="lab_ske.cpp">here.</a> You can add 
anything to the skeleton and design your own style but your program should match 
the program flow.</p>
<h2>Assessment: </h2>
<ul>
  <li>Does the statement asking for user input display the updated upper and 
  lower boundaries correctly? </li>
  <li>Can the program check out of range inputs? </li>
  <li>Can the program reach the final result and output the number of attempts?
  </li>
  <li>Does the program let the user play again by entering either &quot;Y&quot; or 'y'?
  </li>
</ul>

	</BODY></HTML>