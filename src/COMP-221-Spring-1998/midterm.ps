%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: exam1.dvi
%%Pages: 5 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%%BeginProcSet: pstops-clip 1 0
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/lcvx{dup load dup type dup/operatortype eq{pop exch pop}
 {/arraytype eq{dup xcheck{exch pop aload pop}
 {pop cvx}ifelse}{pop cvx}ifelse}ifelse}bind def
/pstopsmatrix matrix currentmatrix def
/pstopsxform matrix def
/defaultmatrix{pstopsmatrix exch pstopsxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/pathtoproc{[{currentpoint}stopped{$error/newerror false
 put{newpath}}{/newpath cvx 3 1 roll/moveto cvx 4 array
 astore cvx}ifelse]{[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}def
/initclip[/matrix lcvx/currentmatrix lcvx/pstopsmatrix cvx/setmatrix lcvx
 /pathtoproc lcvx/initclip lcvx/newpath lcvx
 0 0 /moveto lcvx 595.000000 0/rlineto lcvx
 0 842.000000/rlineto lcvx -595.000000 0/rlineto lcvx
 /closepath lcvx/clip lcvx
 /newpath lcvx/exec lcvx/setmatrix lcvx]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
%%EndProcSet
%DVIPSCommandLine: dvips -o exam1.ps exam1
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.03.24:0920
%%BeginProcSet: thicken.ps
% Increase the strokewidth of a stroked (PaintType 1 or 3) font.
% If the font is not of the right PaintType or does not have a 
% StrokeWidth entry, does nothing.

% Mario Wolczko, 10 Sep 92

/ThickenFont {  % factor ThickenFont
20 dict begin
  /factor exch def
  /StrokeWidth where {
    /fdict exch def
    PaintType dup
    1 eq exch 3 eq or
      { StrokeWidth factor mul
	fdict /StrokeWidth 3 2 roll put
      } if
  } if
end
} def
%%EndProcSet
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (exam1.dvi)
@start /Fa 4 95 df<EF01E0841700841878187C84A284727E727E851803727E007FB9
12FCBA7E856C85CCEA07E0737EF101FCF1007FF21FC0F20FF8F203FFA2F20FF8F21FC0F2
7F00F101FCF103F04F5A007FBA1280BBC7FC616C60CBEA01F04E5A1807614E5A4EC8FC18
3EA260187818F86017016050327BAF5B>41 D<0060EE018000F0EE03C06C1607A2007817
80007C160FA2003C1700003E5EA26C163EA26C163C6D157CA2000716786D15F8A26C6C4A
5AA200015E6D140390B7FC6C5EA3017CC7EA0F80A2013C92C7FC013E5CA2011E141E011F
143EA26D6C5BA2010714786E13F8A26D6C485AA201015CECF003A201005CECF807A29138
7C0F80A2023C90C8FCEC3E1FA2EC1E1EEC1F3EA2EC0FFCA26E5AA36E5AA36E5A6E5A3241
80BE33>56 D<007FB612FEB8FCA27EC9120FB3A7001FB7FC127FA3C9120FB3A8007FB7FC
B8FCA26C15FE283F7BBE33>I<15C04A7E4A7EA24A7EA34A7EA2EC1F3EA2EC3E1FA2EC3C
0F027C7FA24A6C7EA249486C7EA2ECE001010380A249486C7EA24948137CA249C77EA201
1E141E013E141FA2496E7EA2496E7EA2491403000182A248486E7EA248486E7EA2491578
000F167CA248C97EA2003E82A2003C82007C1780A248EE07C0A24816030060EE01803239
7BB63D>94 D E /Fb 21 122 df<49B812F8A390260003FEC7121F18074B14031801F000
F014075DA3140F5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5C
ED80011603160F91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E
14005C93C75A180E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F15
0F4D5A4A147F01FF913807FF80B9FCA295C7FC3D3E7BBD3E>69 D<49B648B6FC495DA2D9
000390C7000313004B5D4B5DA2180714074B5DA2180F140F4B5DA2181F141F4B5DA2183F
143F4B5DA2187F147F4B5DA218FF91B8FC96C7FCA292C712015B4A5DA2170313034A5DA2
170713074A5DA2170F130F4A5DA2171F131F4A5DA2173F133F4A5DA2017F157FA24A5D49
6C4A7EB66CB67EA3483E7BBD44>72 D<49B612C0A25FD9000390C8FC5D5DA314075DA314
0F5DA3141F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA313035C18C0EF01E0010716C0
5C17031880130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A5A16074A
131F01FFECFFF0B8FCA25F333E7BBD39>76 D<49B77E18F018FC903B0003FE0003FEEF00
FF4BEC7F80F03FC00207151F19E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0187F
4B1580A2027FEDFF00604B495A4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512FC17
E04ACAFCA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497E
B67EA33C3E7BBD3E>80 D<49B612FCEFFF8018F0903B0003FE000FF8EF03FE4BEB00FF84
19800207ED3FC05DA219E0140F5DA3021FED7FC05DA2F0FF80143F4B15004D5A60027F4A
5A4B495A4D5AEF3F8002FF02FEC7FC92380007F892B512E01780499038000FE04A6D7E70
7E707E0103814A130083A213075CA25E130F5C5F1603131F5CA3013F020714404A16E05F
017F160119C04A01031303496C1680B6D8800113079438FE0F009338007E1ECAEA3FFCEF
07F03B407BBD42>82 D<277FFFFE01B500FC90B512E0B5FCA20003902680000790C7380F
FC006C90C701FCEC07F049725A04035EA26350C7FCA20407150EA2040F5D1A3C041F1538
62163B6216734F5A6D14E303014B5A6C15C303034BC8FC1683DB0703140E191E030E151C
61031C7F61ED380161157003F04A5A15E002014B5A15C0DA03804AC9FC60DA0700140E60
140E605C029C5D14B8D97FF85D5C715A5C4A5DA24A92CAFC5F91C7FC705A137E5F137C5F
137801705D53406EBD5B>87 D<147E49B47E903907C1C38090391F80EFC090383F00FF01
7E137F4914804848133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FC
A21401485C5AA21403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E000
3E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F001380017E131F49137F485A
485A000715005B000F147E484890C7FCA2485AA3127F90C9FCA35A5AA6481403007E5C5D
151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FFF838003FC0212977A72A>
99 D<EC3F80903801FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848
133E49133C121F4848137C15F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA6
1506150E151E007C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038
007F801F2976A72A>101 D<EC03F0EC0FFC91383E0E1C9138FC077E903901F003FE1303
903807E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0A215071203
4914E0A2150F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B0000495A90
38F80F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C1307007F5C
48130F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7CA72A>103
D<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCEC03
F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA25B0003
140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2003F01
01130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E048EC7FC00038EC1F
0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F80EA07
07000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E13FE5B
A212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383148038
078700EA03FEEA00F8163E79BC1C>I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA214
80A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA2
5BA2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C38
1378EA3C70EA1FE0EA0780144079BE17>108 D<D801F0EB3F803A07FC01FFE03A0F3E07
C1F83A0E1F0F00FC001E011C137C001C49137E003C13F012385C38783FC012705C91C7FC
00F015FE495CEA007EA2150101FE5C5BA2150300015D5B15075E0003020F13704914C0A2
031F13F00007ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007
C7EA01F02C2979A733>110 D<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F00
0F80017E14C0491307484814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FC
A2151F4815C05AA2ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A
4A5A260F803EC7FC3807C0FC3801FFF038003F80242977A72E>I<903903E001F890390F
F807FE903A1E7C1E0F80903A1C3E3C07C0013C137801389038E003E0EB783F017001C013
F0ED80019038F07F0001E015F8147E1603000113FEA2C75AA20101140717F05CA2010314
0F17E05CA20107EC1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A90393F
B80F80DA9C1FC7FCEC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A2387F
FFE0B5FCA22D3A80A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E000
1EEB380F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC12
F05BEA007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC232979
A726>114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E
49137E15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13
F01300140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F8012
700078EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307
A25CA2130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438
EB0078147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<017CEB01
C048B4EB07F038038F80EA0707000E01C013F8121E001C1403EA3C0F0038EC01F0A2D878
1F130000705BA2EAF03F91C712E012005B017E130116C013FE5B1503000115805BA2ED07
001203495B150EA25DA25D1578000114706D5B0000495A6D485AD97E0FC7FCEB1FFEEB03
F0252979A72A>118 D<137C48B4143826038F8013FCEA0707000E7F001E1401001C15F8
EA3C0F12381503D8781F14F000701380A2D8F03F1307020013E012005B017E130F16C013
FE5B151F1201491480A2153F000315005BA25D157EA315FE5D00011301EBF80300001307
90387C1FF8EB3FF9EB07E1EB00035DA21407000E5CEA3F80007F495AA24A5AD8FF0090C7
FC143E007C137E00705B387801F0383803E0381E0FC06CB4C8FCEA03F8263B79A72C>
121 D E /Fc 1 4 df<130C131EA50060EB01800078130739FC0C0FC0007FEB3F80393F
8C7F003807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C7F397F
0C3F8000FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D E /Fd 6 123 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312
011380120313005A120E5A1218123812300B1C798919>59 D<EC01F8EC0FFE91383F0787
9139FC03DF80903801F801903903F000FFEB0FE04948EB7F005C133F49C7FC49147E5B00
0115FEA248485CA215011207495CA21503120F495CA21507A25E5B0007140FA24B5A6D13
3F0003147F000114FF6D485B0000EB03DF90387E0F3FEB1FFCD907F090C7FC90C7FC5DA2
157EA215FEA25D001C1301007F5C4813035D4A5A4A5A48495A00F8017EC8FC387E01FC38
1FFFE0000390C9FC293B7FA72B>103 D<EB01FC13FF5CA21303A25CA21307A25CA2130F
A25CA2131FA25CA2133FA291C9FC15FE90397F07FFC091381F03E090397E3801F09138F0
00F8EBFFE04A7F5C91C7FC485AA25BA2484813015E5BA2000714035E5B1507120F5E4913
0F5E121F031F1370491480A2003F023F13F0EE00E090C7FC160148023E13C01603007E16
80EE070000FE5DED1F1E48EC0FF80038EC03E02C407CBE34>I<D901F8133FD907FEEBFF
E0903A1E0F83C0F0903A3807C780F890397003CF0301E013FED801C0EBFC071203018013
F8D8070015F0EE01C0000E4AC7FCA2001E1307A2C75BA2140F5DA3141F5DA3143F923800
01C0A34A1303001E1680003F017E1307267F80FE14005ED8FF81141ED901DF131CD8FE03
5C3A7C078F80F03A3C0F07C1E03A1FFC03FF802707F0007EC7FC2D297EA734>120
D<137C48B4EC03802603C7C0EB0FC0EA0703000F7F000E151F001C168013071238163FD8
780F150000705BA2D8F01F5C4A137E1200133F91C712FE5E5B137E150113FE495CA21503
00015D5BA215075EA2150F151F00005D6D133F017C137F017E13FF90393F03DF8090380F
FF1FEB01FC90C7123F93C7FCA25DD80380137ED80FE013FE001F5C4A5AA24848485A4A5A
6CC6485A001C495A001E49C8FC000E137C380781F03803FFC0C648C9FC2A3B7EA72D>I<
02F8130ED903FE131ED90FFF131C49EB803C49EBC0784914F090397E07F1E09038F800FF
49EB1FC049EB07800001EC0F006C48131E90C75A5D5D4A5A4A5A4A5A4AC7FC143E14785C
495A495A495A49C8FC011E14E05B5B4913014848EB03C0485AD807F8EB078048B4131F3A
1F87E07F00391E03FFFE486C5B00785CD870005B00F0EB7FC048011FC7FC27297DA72A>
I E /Fe 28 122 df<B6FCA618067E9622>45 D<B912E0A300019038C000016C6C48EB00
1FEF0FF01703A217011700A31870A41838A2161CA31800A3163CA2167C16FC150391B5FC
A3EC80031500167C163CA2161CA693C8FCAF3801FFE0B612F0A3353E7BBD41>70
D<DB1FF8EB01804AB5EA8003020FECE007913A3FF803F80F9139FF80007C4948C7EA1E1F
D907FCEC0FBFD90FF0EC07FF49488049488049488049C9127F4848163F120349161F1207
4848160FA2485A1807123F5B1803127FA34993C7FC12FFAB0407B512FE127F7FDC000113
C09438007F80123FA27F121FA26C7EA26C7E12037F6C7E7E6D6C15FF6D7E6D6C5C6D7ED9
07FCEC03DFD901FFEC0F8F6D01C0EB3F07913A3FF801FC03020FB5EAF001020102C0C7FC
9126001FFCC8FC3F427ABF4D>I<B6D8C00FB512FCA3000101E0C7381FFE0026007F80EC
07F8B3A691B7FCA30280C71207B3A92601FFE0EC1FFEB6D8C00FB512FCA33E3E7BBD4A>
I<B612F0A3000101E0C9FC38007F80B3B0EF01C0A517031880A41707A3170FA2171F173F
177FEFFF00160348486C133FB9FCA3323E7BBD3E>76 D<B500C093380FFFFCA26E5E0001
F1FE00D8007F18F8D977F0163BA2D973F81673A3D971FC16E3A2D970FEED01C3A3027FED
0383A26E6CEC0703A36E6C140EA26E6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6C
EB01C0A3037FEB0380A292393F800700A392381FC00EA26F6C5AA36F6C5AA26F6C5AA36F
6C5AA26FB45AA3705A13F8486C6EC7FCD807FFEF0FFEB500F80307B512FC161EA24E3E7B
BD5A>I<B56C91387FFFFC8080D8007F030313806E913800FE006E157C1838EB77FCEB73
FE80137101707F6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7F6F7EA26F7E6F7EA26F
7E6F7E8215036F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF
7013B8A2EF7FF8173FA2171F170F1707A2170301F81501487ED807FF1500B500F81578A2
18383E3E7BBD4A>I<ED3FF80203B57E91390FE00FE091397F0001FC02FCEB007ED903F8
6E7E49486E7ED90FC0EC07E0D93F80EC03F8017F8291C8120101FE6F7E4848167F000318
804848EE3FC0A2000F18E049161F001F18F0A24848EE0FF8A3007F18FC491607A300FF18
FEAC007F18FC6D160FA3003F18F8A26D161F001F18F0A26C6CEE3FE0A2000718C06D167F
000318806C6CEEFF006C6C4B5AA26D6C4A5A6D6C4A5A6D6C4A5AD907F0EC1FC06D6C4A5A
D900FE02FEC7FC91397F8003FC91391FE00FF00203B512809126003FF8C8FC3F427ABF4D
>I<B712F8EEFF8017E000019039C0001FF86C6C48EB03FE707E9338007F80EF3FC018E0
EF1FF0A2EF0FF8A218FCA718F8A3EF1FF0A2EF3FE018C0EF7F80933801FF00EE03FCEE3F
F891B612C094C7FC0280C9FCB3A73801FFE0B612C0A3363E7BBD43>I<B712E016FE707E
00019039C0007FF06C6C48EB0FF8EE03FE707E707F717E717EA284171F84A760173F6060
4D5A4DC8FC4C5A4C5AEE0FF0EE7FC091B500FEC9FC16F891388000FEEE3F80EE0FE0707E
707E83160183160083A384A484A4725AF10380A2177F18F0053FEB07002601FFE015F8B6
00C0011F5B94380FFC0E943803FE1CCBEAFFF8F01FE041407BBD49>82
D<D903FE130690391FFFC00E017FEBF81E3901FE01FC3A03F0003F3E4848EB0FFE484813
074848130390C71201003E1400007E157EA2007C153E12FCA2161EA36C150EA27E7F007F
92C7FC7F13F0EA3FFCEBFFC06C13FC6CEBFFC06C14FC6C14FF6C15C06C6C80011F800103
80D9003F7F02037F9138003FFF15070301138081167F17C0163F00E0151FA3160FA27EA3
6C1680161F7E17006C5D6C153E6D5C6D14FCD8FDF0495AD8F8FC495A3AF07FC01FC0011F
B55AD8E00349C7FC39C0003FF02A427ABF38>I<EC01E0A24A7EA34A7EA34A7EA24A7E14
1CA2EC3CFFEC387FA24A6C7EA34A6C7EA2010180ECC00FA249486C7EA349486C7EA24980
010E1301010FB5FC4980A2011CC7FC49147FA20178810170143FA201F08149141F120148
6C811207486CEC3FF8D8FFFE49B512C0A332317DB038>97 D<B612FEEDFFC016F03A03FC
0007F86C48EB01FE1500167F1780163F17C0A61780167F170016FE4B5AED07F0ED7FE090
B6128016F09039F80001FC6F7EEE7F80163FEE1FC017E0160F17F0A617E0161FA2EE3FC0
EE7F80923801FF00486CEB07FEB712F85E93C7FC2C2F7CAE35>I<DA0FF81330DA7FFF13
700103B5EAC0F090390FFC03F190391FE000F9D97F80133F01FEC7121F4848140F484814
07485A000F1503491401121F491400123F5B127F1770A248C9FC1700AA6C6C1570A3123F
6D15F0121F6D15E0000F15016D15C0000715036C6C15806C6C14076C6CEC0F00D97F8013
3ED91FE05B90390FFC03F00103B55AD9007F1380DA0FF8C7FC2C317BAF36>I<B612FEED
FFE016F83A03FE0007FC6C48EB00FFEE3F80707E707E707E707E160183160083A2177FA4
1880AA1800A317FEA34C5A5F16034C5A5FEE1FC04C5A04FFC7FC486CEB07FEB712F816E0
93C8FC312F7DAE39>I<B81280A3D803FEC7FC6C48EC1FC0160F16071603A21601A317E0
ED0E00A31700A2151E153E157E90B512FEA39038FC007E153E151E150EA21738A392C712
70A417F0A2EE01E0A216031607161F486C14FFB812C0A32D2F7DAE33>I<DA0FF81360DA
FFFE13E00103EBFF8190390FF807E390393FC000F34948137F01FEC7123F4848141F4848
140F48481407120F491403485A003F1501A25B007F1500A348C9FC1700A8031FB5FCA26C
7E9238001FF0EE0FE0123F7FA26C7E120F7F12076C7E6C7E6C6C141FD97F80133FD93FE0
137B90390FFC03F10103B512E00100EC8060DA0FFCC7FC30317BAF3A>103
D<B5D8F807B512C0A3D803FEC7381FF0006C486E5AB190B7FCA301FCC7120FB3486C4A7E
B5D8F807B512C0A3322F7DAE38>I<B512F8A33803FE006C5AB3B3A3487EB512F8A3152F
7DAE1B>I<B512FCA3D803FEC8FC6C5AB3A71607A4160EA4161EA2163E167E16FEED03FC
486C130FB7FCA3282F7DAE2F>108 D<D8FFFE923807FFF0A3D803FF92380FFC006C5FD9
DF80141DA3D9CFC01439A2D9C7E01471A3D9C3F014E1A2D9C1F8EB01C1A3D9C0FCEB0381
A2027EEB0701A36E130EA291381F801CA391380FC038A2913807E070A3913803F0E0A391
3801F9C0A2913800FF80A3486CEB7F00487E486C013E497EB5008091B512F0A2151C3C2F
7CAE44>I<D8FFFC91387FFFC07F7F0001923807FC006E6D5A6E6D5AD9DFE06D5AA2EBCF
F0EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EED7F80
A2ED3FC0ED1FE0ED0FF0A2ED07F8ED03FCA2ED01FEED00FF167FA2163F161F160F487E48
6C1407486C1403B56C1301A21600322F7DAE38>I<EC1FF891B5FC903907F00FE090390F
C003F0013FC712FC017E147E49804848EC1F804848EC0FC04848EC07E0000F16F0491403
001F16F8491401003F16FCA2007F16FE90C9FCA34816FFAA6C6CEC01FEA3003F16FCA26D
1403001F16F86C6CEC07F0A26C6CEC0FE0000316C06C6CEC1F806C6CEC3F00017E147E6D
5C90390FC003F0903907F00FE00100B5C7FCEC1FF830317BAF3A>I<B612F015FF16C03A
03FE001FF06C48EB03FCED00FE167FA283163F83A55F167F94C7FC16FE4B5A4B5AED1FE0
90B6C8FC5D9039FC003F80ED0FC06F7E826F7EA26F7EA582A418E082A281486CED01C0B5
00F8EB7F8193381FC38093380FFF00C9EA01FC33307DAE37>114
D<90383FC00C9038FFF81C0003EBFE3C390FE03FFC381F8007EB0003003E130148130015
7C5A153CA36C141CA27E6C14006C7E13E013FE383FFFE06C13FE6CEBFF806C14E0000114
F06C6C13F8010F13FC1300EC07FE14011400157F153F12E0151FA37EA2151E6C143E6C14
3C6C147C6C14F89038C001F039FBF807E000F1B512C0D8E07F130038C007FC20317BAF2A
>I<007FB712F8A39039801FF0073A7E000FE00000781678A20070163800F0163CA34816
1CA5C71500B3A8EC3FF8011FB512F0A32E2E7CAD36>I<B500F890387FFFC0A3D803FEC7
3807FC006C486E5A705A705AB3AB000015016D5D1603017E5D017F14076D6C49C7FC131F
6D6C133ED907F05B903903FC03F00100B55A023F1380DA07FCC8FC32307DAE38>I<B500
E0903807FFF0A3000790C7000113800001923800FE006C16F86E5C017F4A5A6D7E6E495A
011F5D6D6C13076E49C7FC0107140E6D6C131E6E5B010114386D6C13786F5A027F5BEC3F
C191381FE3C05EEC0FF76EB4C8FC5D14036E5AB04A7E91B512F0A3342F7EAE38>121
D E /Ff 68 124 df<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E
494813FF49485A137F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC
486CECFF80007FD9FC3F13FEA32F407FBF33>12 D<4AB47E021F13F791387F00FFEB01F8
903807F001EB0FE0EB1FC0EB3F80137F14008101FE80AEB8FCA3C648C77EB3AE486CECFF
80007FD9FC3F13FEA32F407FBF33>I<001E130F397F803FC000FF137F01C013E0A201E0
13F0A3007F133F391E600F3000001300A401E01370491360A3000114E04913C000031301
01001380481303000EEB070048130E0018130C0038131C003013181C1C7DBE2D>34
D<013F4C7ED9FFC04B7E2601E0E015072607C070150F48486C4B5A023E4BC7FC48486C5D
48D90FC0EB01FE003ED90EF0EB07FCDA0F3F133E007E903A070FFFF8F8007C0200EBC1F0
EE000300FC6D6C495A604D5A171F95C8FC173E177E177C5F16015F007C4948485A160700
7E5E003E49495A020E131F003F93C9FC6C49133E260F803C137E0238137C6C6C485B3901
E0E0016CB448485AD93F0049133F90C74848EBFFC0030F903801E0E093398007C0704B48
48487E4B153C033E90381F001C4B497F03FC133E4B150F4A48017E7F0203147C5D4A4801
FCEB0380140F5D4AC7FC5C143E5C14FC5C495A13034948027CEB07005C4948147E011F03
3E5B91C8140E013E153F017E6F5B017C92380F803C4917380001706C5A49923801E0E049
6FB45A6C48043FC7FC41497BC34C>37 D<1430147014E0EB01C0EB03801307EB0F00131E
133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C
12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F13
3E131E7FEB07801303EB01C0EB00E014701430145A77C323>40 D<12C07E12707E7E121E
7E6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A6
130314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B1201
5B485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<121EEA7F8012FF13C0A213E0
A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C7989
19>44 D<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A7989
19>I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F4848EB0F80A2
000F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15F8A56C6CEB07
F0A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B017C5B90383F03
F090380FFFC0D901FEC7FC263F7DBC2D>48 D<EB01C013031307131F137FEA07FFB5FC13
9FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E039
03F01FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6D
EB1FF07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D
4A5A4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914E0485A485A
485A48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80F
E03901E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07FA27F5B
A2121F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038
000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316
E0A249137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6B55A01
3F1380D907F8C7FC243F7CBC2D>I<150E151E153EA2157EA215FE1401A21403EC077E14
06140E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B120148
5A90C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<
00061403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE
90380FFF8090383E03E090387001F8496C7E49137E497F90C713800006141FC813C0A216
E0150FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038EC3F80123C
6CEC7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC
2D>I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1FC049133F48
48137F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE903887FF80
39FF8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0
A5127FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C48
5A90387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<1238123C123F90B612FCA3
16F85A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5DC8127015F0
4A5A5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307A3130F5CA2
131FA6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF8090387C07E09038F001
F83901E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C
6C131F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D
13C06D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C048487E4890
38007FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403A2007E
15C06C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F1380D903
FCC7FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848
137C000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA3
6C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB
07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB800739
1E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F
80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779
A619>I<007FB912E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>
61 D<EB1FF890B5FC3903E01FC0390F0007F0001EEB03F848EB01FC4814FE140000FE14
FF7E7FA46CC7FC123EC7EA01FEA2EC03FCEC07F815F0EC0FC0EC1F80EC3F00143E5C1478
14F85C13015CA2495AA25CAB91C7FC90C8FCA8EB0780EB1FE0A2497EA46D5AA2EB078020
407BBF2B>63 D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A29138
0381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FC
A249819138800001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2
017882170F13FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65
D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF
1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE0
91B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707
A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A
17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007
E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A
91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA3491600
12FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117
706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600
FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEE
FF8017E000019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184
717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A
6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>
I<B91280A300019038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A2
1638A31800A31678A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF
3801FFE0B612F0A3333E7DBD3B>70 D<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0
A31C3E7EBD21>73 D<011FB512FCA3D9000713006E5A1401B3B3A6123FEA7F80EAFFC0A4
4A5A1380D87F005B007C130700385C003C495A6C495A6C495A2603E07EC7FC3800FFF8EB
3FC026407CBD2F>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA3
5FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>76 D<B500C093383FFFF0A30001
6D93387FF800D8007F18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED07
0FA26E150E80A26E6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB
0380A36E6CEB0700A2037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9C0
A36FB45AA26F90C7FCA213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E7D
BD53>I<ED7FE0913807FFFE91391FC03F8091397E0007E04948EB03F8D907F0EB00FE49
48147F49486E7E49486E7E49C86C7E01FE6F7E00018349150300038348486F7EA248486F
7EA2001F188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167FA400
3F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B5A6D5E6D
6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC03F809126
07FFFEC8FC9138007FE03C427BBF47>79 D<ED7FE0913807FFFE91391FC03F8091397F00
0FE0D901FCEB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E498248486F7E
49150300038348486F7EA2000F834981001F1880A24848EE7FC0A3007F18E0A249163FA2
00FF18F0AC007F18E0A26D167FA3003F18C0A26C6CEEFF80A3000F18006D5D0007DA0F80
5B6C6C90393FE003FCED70706C6C496C485A6C6C48486C485A017FD9800E5BD93F819038
061FC0D91FC19038073F80D90FE14AC7FCD907F1EB03FE902601FDC013F8903A007EE007
E091271FF03FC013180207B5FC9139007FE1E0DB0001143883711378A2706C13F0EFFF03
18FFA27113E0A37113C0711380711300715AEF01F83D527BBF47>81
D<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717E
A284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F0913880
01FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F13
1E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD
43>I<D907FC130C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC
4848130F001F140748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27E
A26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0
010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163F
A27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF0
7F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0
007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00
E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101E0
C70007130026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F1503
6E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B512
80020049C8FCED1FF03D407DBD44>I<B500FE017FB5D88007B5FCA3000301C0010101E0
C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C
60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E0281140101036104077F1700
6D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F
171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA
07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C
153EA20378151E0338151C58407EBD5D>87 D<007FB5D8C003B512E0A3C649C7EBFC00D9
3FF8EC3FE06D48EC1F806D6C92C7FC171E6D6C141C6D6C143C5F6D6C14706D6D13F04C5A
DA7FC05B023F13036F485ADA1FF090C8FC020F5BEDF81E913807FC1C163C6E6C5A913801
FF7016F06E5B6F5AA26F7E6F7EA28282153FED3BFEED71FF15F103E07F913801C07F0203
804B6C7EEC07004A6D7E020E6D7E5C023C6D7E02386D7E14784A6D7E4A6D7F130149486E
7E4A6E7E130749C86C7E496F7E497ED9FFC04A7E00076DEC7FFFB500FC0103B512FEA33F
3E7EBD44>I<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319>91
D<486C13C00003130101001380481303000EEB070048130E0018130C0038131C00301318
0070133800601330A300E01370481360A400CFEB678039FFC07FE001E013F0A3007F133F
A2003F131F01C013E0390F0007801C1C73BE2D>I<EAFFFCA4EA003CB3B3B3B3ABEAFFFC
A40E5B7FC319>I<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF0
7F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8
EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC0
0E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848131F
4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3
003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C137890383F01
F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF010713
E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B127FA2
90C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C0179
13F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC09038
3F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130FA212
7F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C1303
6DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA828>
I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01
FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903903F801
FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6EC7FC
49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026071F
FFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A
0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C6C49
5A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<EA01
FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8D9FD
C07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA
01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487EB512
F0A3143E7DBD1A>I<EA01FC12FFA3120712031201B292B51280A392383FFC0016E01680
93C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9FE0140F49
6C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07FFFE0A32B
3F7EBE30>107 D<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>I<27
01F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F80007903B
E001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7FCA249
5CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF9038
07FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB6D7E91C7FC
13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F81F8
90387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2003F
15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6CEB07
E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A7EA8
2D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A03FFC001FC6C496C7E
91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D15
80EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F891C9FC
AD487EB512F8A32D3A7EA733>I<02FF131C0107EBC03C90381F80F090397F00387C01FC
131CD803F8130E4848EB0FFC150748481303121F485A1501485AA448C7FCAA6C7EA36C7E
A2001F14036C7E15076C6C130F6C7E6C6C133DD8007E137990383F81F190380FFFC19038
01FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<3901F807E000FFEB1FF8EC787CECE1
FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F28
7EA724>I<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C007813
0112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D8003F
13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03C0
903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213FC
A2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F03
013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA300071403
0003140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC90381F
C078903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE000313006C
48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380F
E00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5A
A26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D48
EB3F806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E151D
D93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F0140701
070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5DA2
4A1303027E5CA2027C1301023C5C023813003D287EA642>I<B539F01FFFE0A30003D9C0
0F1300C690388007F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF01E6D6C
5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FEECC0FF
01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB539803F
FFF8A32D277FA630>I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00
005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01
031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C14
38A2147800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E0
2B3A7EA630>I<001FB61280A2EBE0000180140049485A001E495A121C4A5A003C495A14
1F00385C4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2EB7F80EB
FF005A5B484813071207491400485A48485BA248485B4848137F00FF495A90B6FCA22127
7EA628>I<B812F0A22C0280982D>I E /Fg 12 121 df<B812F0A60180C9FCB3A690B712
80A60180C9FCB3A890B712F8A72D4578C43A>69 D<D8FFF0933803FFC06D5EA36D5EA301
7EEE1FBFA2017F163FA26D173F6E157FA2011F167E6E15FEA26E1401010F16FCA26E1403
010716F8A26E1407010316F0A26E140F010116E06E141FA2010016C06E143FA26E15806F
137FA2023F15006F5B021F5CA2EDE001020F5CA2EDF00302075CA2EDF80702035CA26E6C
485AA36E6C485AA392387F3F80A3033F90C7FCA2ED1FFEA36F5AA36F5A92C9FCA2424577
C455>77 D<EB07FE90387FFFC00003B57E000F14F84880819038F803FFEB8001001EC713
800018147F0010EC3FC0C8FC16E0151FA8EC7FFF010FB5FC133F48B6FC5A000FEBF01F38
1FFE00EA3FF8EA7FE05B485A90C7FCA4153F7F6C6C137F9038E001FFEBF80F6CB6FC7E15
DF6C141F000313F8C60180C7FC232F7CAD2F>97 D<ED01FEB3A6EB03FC90380FFFC1013F
13F14913F948B6FC5AECC07F48EB001FD80FFC1307484813035B48481301A25B127F5BA3
48C7FCAA7F127FA36C7EA26D13036C7E1507D80FFC130F6C6C133F9038FF80FF6C90B5FC
6C14FD6C14F1013F13E16D1381D903FCC7FC27467DC432>100 D<EB01FE903807FFC001
1F13F0017F7F90B57E488048EB03FF3807FC004848EB7F8049133F4848EB1FC0150F4848
14E0491307127FA290C7FCED03F0B7FCA648C9FCA37EA27EA27F123F7FA26C7E6D14106C
6C14706C6CEB01F06C6C13079038FF803F6C90B5FC6C15E0013F14806DEBFE00010713F8
010013C0242F7DAD2B>I<EAFF80A9C7FCB0EA7F80B3B3A809457AC417>105
D<DA7FC0EB0FF827FF01FFF8EB3FFF01076D90B51280011FD9FE0314C0496D4814E04902
8F14F0D9FE0390389FC07FD9F8009039FF001FF8496D48130F496D481307494A14FC031F
1403495CA390C75BB3AC3E2D79AC4D>109 D<EC7FC039FF01FFF801077F011F7F497F49
1480EBFE03D9F80013C049137F49133F4914E0151F5BA390C7FCB3AC232D79AC32>I<EC
7F80903803FFF0010F13FC013F13FF498090B67E4801C07F3A03FE001FF048486D7E4848
6D7E49130348486D7E491300003F814980007F1680A390C8123F4816C0AA6C6CEC7F80A3
6D14FF003F16006D5B001F5D6D13036C6C495A6C6C495A6D131F3A03FFC0FFF06C90B55A
6C5D013F91C7FC6D5B010313F09038007F802A2F7DAD31>I<141F00FE13FF13035B131F
5B5BEBFFF0148038FFFE005B5B5B5B5BA25BA390C7FCB3A8182D79AC21>114
D<EA01FEADB612F0A6D801FEC7FCB3AB7F150815386CEB81F8ECFFFC7FA26D13F06D1380
90380FF8001E3A7EB823>116 D<D87FC0EC7FC06C6CECFF80001F16006D5B6C6C495A6C
6C495A6C6C5C00014A5A6C6C131F6E485AD97FC05B6D6C485A011F49C7FCEB0FF1903807
FBFEECFFFC6D5B6D5B7F6E5A5D6E5A4A7E4A7E81497F903803FBFCEB07F990380FF0FE4A
7E011F6D7E49486C7E49486C7EEBFF006F7E48486D7E48488000076E7E48481301496D7E
48481580003FED7FC04848EC3FE04848EC1FF02C2C80AB2D>120
D E /Fh 9 115 df<16C01501A215031507ED0F80151F153F157F913801FF005C140F14
7F903807FCFEEB0FF0EB0700EB00015DA314035DA314075DA3140F5DA3141F5DA3143F5D
A3147F92C7FCA35C5CA313015CA313035CA313075CA2130FA2131F133FB612FCA25D2242
76C132>49 D<9026380FC0131C9038787FE0902671FFF0133C01F3157801EF15F090B5FC
4801E0EB01E09139007003C04848EB380701F8EC1F804848EB1C3F4990381FFF004848EB
07DF49EB001E48C85A121E5E4815F800385D0078140100705D00F01403485D1507C8485A
A24BC7FCA25D153E157E157C15FC5D1401A24A5AA214075D140F5D141FA25D143FA24AC8
FCA314FEA21301A25C1303A25C1307A35C130FA35C5C6D5A2E4472C132>55
D<ED3FC0EDFFF0020313FC91380FE07E91383F803F4A487E02FC14800101140F494814C0
495A495AA2495A133F4A14E0137FA249C7FC161FA24816C05BA2163F12035BA2167F1780
4914FFA34B130012015D5D00005D6D130F017C131D153B6DEB73FC90381F03E3903907FF
83F8903801FC0790C7FC5E150F5E151F5E4B5AA24BC7FCA2001C14FE007F5C48495A4A5A
14074A5A485C00F8013FC8FC48137E5C387C07F0383FFFE06C1380D803FCC9FC2B4476C1
32>57 D<DB03FE130C92390FFF801C037FEBE03C9238FE03F8913A03F0007C7C4A48EB3E
F84A48131F4A48130F4AC7FC027EEC07F05C1703495A18E0495AA213074A15C0A3130F18
80A28094C7FCA280806D7EECFFE015FC6DEBFF806D14F016FC6D14FF023F80020F801403
DA003F7F150703007F163F161F160FA21607A3120716031607A2485EA2120E160F001E5E
A2001F4B5AA2484BC7FC6D143E167E6D5C007F4A5A6D495AD87CF0495AD8787CEB1F8027
F03F807FC8FC90381FFFFCD8E00713F039C0007F80364879C537>83
D<15FCEC03FF91390F83838091393E01CFC091387C00EF4A13FF4948137F010315804948
133F495A131F4A1400133F91C75A5B167E13FE16FE1201495CA215011203495CA21503A2
495CA21507A25EA2150F151F5E0001143F157F6C6C13FF913801DF8090387C039F90383E
0F3FEB0FFCD903F090C7FC90C7FC5DA2157EA215FEA25DA2001C495A127F48495A14074A
5A485C023FC8FC00F8137E387C01F8381FFFE0000390C9FC2A407BAB2D>103
D<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780380703C0000F13E012
0E121C13071238A21278EA700F14C0131F00F0138012E0EA003F1400A25B137EA213FE5B
12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB807014F014E0EB81C0
EA0783EBC7803803FE00EA00F8174378C11E>105 D<D801F0EB0FE0D803FCEB7FF83A07
1E01F03E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B814C014F838
781FF000705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA25E01FE147E
5B16FE5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C5B173CEEC0
38000F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D78AB37>
110 D<D903E0137E903A07F801FF80903A0E3C0783E0903A1C1E0F01F0903A3C1F1C00F8
01385B017849137C01705BA24A48137E01E05BA292C7FC00015B13C0147EC7FC02FE14FE
A25CA20101140117FC5CA20103140317F85CA20107EC07F0A24AEB0FE0A2010F15C0EE1F
80163F1700496C137E5E4B5A9138B803F090393F9C07E091389E0F80DA07FEC7FCEC01F8
49C9FCA2137EA213FEA25BA21201A25BA21203A21207B512F0A25C2F3F7FAB32>112
D<D801F0EB3F803A03FC01FFF03A071E03C0F83A0E0F0F007C001E90389E01FC001C139C
ECB803003813F0A2D91FE013F80078EC00E00070491300A200F05BEAE03F91C8FC1200A2
5B137EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29
>114 D E /Fi 26 118 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038
C000FE010FEB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FC
A74BB51280B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12
D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>
49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD81F
806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9
FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC
0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C140149
140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<EA07C0EA1FF0EA3FF8EA7F
FCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C0C7FCAEEA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7
EA7FFCEA3FF8EA1FF0EA07C00F2C78AB1F>58 D<EE1F80A24C7EA24C7EA34C7EA24B7FA3
4B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E020181
15F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80027E8202
7FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA249488284011F8491
C97E4984133E017E82B6020FB612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04A
B6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901
C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890CAFC
19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F1903
6C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0
EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F14
80030001F8C8FC44467AC451>67 D<BA1280A419C026003FFEC7121F1701EF007F183F18
1F180F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA591
38FE007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>70
D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73 D<B500FE067FB512806E
95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C16
1EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F
6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485A
A3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B605
7FB6128071C7FCA2173E171C61447CC36A>77 D<923807FFC092B512FE0207ECFFC0021F
15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E
49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A24819
F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E
6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B
5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715
C002004AC8FC030713C047467AC454>79 D<B9FC18F018FE727E19E0D8001F90C7000F7F
05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D
485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<903801FF
E0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F
7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F
1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1F
FF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813
805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0
A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F
14C0010391C7FC9038003FF82A2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0
903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F48
48141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007
157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007F
C0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007
FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12
FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07
C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7
FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381F
FC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0
007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048
D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FC
A2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680
D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC
7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F17
006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC01
0F14F8D9007F90C8FC32427DAC38>I<137C48B4FC4813804813C0A24813E0A56C13C0A2
6C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>105
D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>108 D<90277F8007FEEC0FFC
B590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D
8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7E
A24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB59038
3FFF8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02
F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F001
1F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F00
1F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F
5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C090
26001FFCC8FC312F7DAD38>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC9138
9F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0
A5272D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC0004913
3F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C
14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA2
7EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E0
07FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF120300
0F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090
391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5
FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512
C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I E /Fj
21 122 df<B600F890B612F8A3C601F8C8EBF8006D486F5A6D486F5AB3A891B8FCA302E0
C8123FB3AB496C4B7E496C4B7EB600F890B612F8A345447BC351>72
D<B600F891B512FCA3C601F8C8001F13C06D4892380FFE006D48ED07F819E04E5A96C7FC
181E6060604D5AEF07C04D5A4DC8FC173E5F5F4C5AEE03C04C5A4CC9FC161E5E167CED01
FC4B7E4B7E4B7F5D033E7F4B7FEDF07F9139E1E03FF0DAE3C07F9138E7801F9139EF000F
FC02FE6D7E4A804A7F4A6D7F4A8182717E717E84171F717E841707717E717F8583727E85
183F727E85727E85496C4B1380496C4B13E0B600F80103B6FCA348447BC354>75
D<49B46C13C0010FEBF001013FEBFC039038FF007FD801F8EB0F874848EB03E7D807C0EB
01FF48487F001F157F90C8123F003E151FA2007E150F127C160712FC1603A37E16017EA2
7F6C6C91C7FC7F7FEA3FFCEBFFC06C13FC6CEBFFC015FC6CECFF806C15E0C615F86D8001
1F80010380D9003F1480020314C0EC003F030313E01500EE7FF0161FA2EE0FF8160712E0
1603A21601A37EA217F07E16037E17E06C15076C16C06DEC0F806D141F6DEC3F00D8F8F8
147E017F5C3AF01FE007F00107B55AD8E00191C7FC39C0001FFC2D4879C53D>83
D<003FBAFCA3903BF8000FFE000701C06D48130090C7163F007EF01F80007C180FA20078
1807A300701803A548F001C0A5C893C7FCB3B3A44B7E92383FFF8049B712F0A342437BC2
4E>I<B600F80103B512F8A3C601F8C8001F13006D48ED07FC6D48ED01F0A2725AB3B3A7
18016D6C5EA3010F4C5A800107160796C7FC6D6C5D0101161E6E5D6D6C5D6E6C14F86E6C
495ADA0FE0495ADA07F8EB0F80DA01FF017FC8FC9139007FFFFC031F13F0030190C9FC45
467BC351>I<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C
7EA34A6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981
011CC7121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED8
1FF84A7EB5027F13F8A335357CB43D>97 D<4AB4EB0180021FEBF00391B5EAFC07010390
38007E0FD907F8EB0F9FD91FE0EB03DF4948EB01FF01FFC8FC4848157F4848153FA24848
151F4848150F121F491507123F5BA2007F1603A3484892C7FCAB6C7EEF0380A2123FA27F
001F16076D1600000F5E6C6C150E6C6C151E171C6C6C153C6C6C5DD93FC05C6D6CEB03E0
D907F8495A902703FF807FC7FC0100EBFFFC021F13F00201138031357BB33B>99
D<B7FC16F016FC3A03FE0003FF6C489038007F80EE1FE0707E707E707E1601707E177FA2
1880173F18C0A2EF1FE0A418F0AA18E0A4EF3FC0A21880177F180017FE16015F4C5AEE0F
F04C5AEE7FC0486CD903FFC7FCB712FC16F093C8FC34337BB23E>I<B812F0A3D803FEC7
123F6C48EC07F816011600A21778A21738A3171C1507A31700A25DA25D157F90B6FCA390
38FC007F151F81A2811707A3170E92C7FCA4171EA2173CA2177C17FC16011607486C143F
B812F8A330337BB238>I<B812C0A3D803FEC7FC6C48EC1FE0160716031601A21600A417
70A2150EA21700A3151EA2153E15FE90B5FCA3EBFC00153E151EA2150EA592C8FCAB48B4
FCB512FEA32C337BB235>I<DA03FF1303021FEBE00791B5EAF80F0103903800FE1FD90F
F8EB1F3FD91FE0EB07BFD97F806DB4FC49C77E484880484881484881A2484881121F4981
123F5BA2007F82A25B00FF93C7FCAA4BB512F86C7EA2DB00011380003F6F1300837F121F
7F120F6C7E7F12036C7E6C6C5DEB7FC0D91FE05BD90FF8EB07DF903A03FF803F8F010090
38FFFE07021FEBF80302030180C7FC35357BB340>I<B5D8F803B512E0A3D803FEC7380F
F8006C486E5AB390B7FCA301FCC71207B3A3486C4A7EB5D8F803B512E0A333337BB23D>
I<B512F8A33803FE006C5AB3B3A7487EB512F8A315337BB21E>I<B512FEA3000390C9FC
EA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF00486C1307B8FCA32A33
7BB233>108 D<D8FFFC91383FFFE07FA2D801FF020713006EEB01FC6E6D5A1770EBDFE0
EBCFF013C780EBC3FC13C180EBC0FF80816E7E6E7EA26E7E6E7E1403816E7E140081ED7F
80ED3FC0A2ED1FE0ED0FF0150716F8ED03FC150116FEED00FF167F17F0163F161FA2160F
1607486C1403487ED81FFC1401B56C1300A2177033337BB23D>110
D<EC07FF023F13E0903901FE03FC903907F0007FD90FC0EB1F80D93F80EB0FE049C76C7E
01FE6E7E48486E7E48486E7E4848157FA24848ED3F80001F17C0A24848ED1FE0A3007F17
F049150FA300FF17F8AA007F17F06D151FA2003F17E0A26D153F001F17C0A26C6CED7F80
000717006D5D00035E6C6C4A5A6C6C4A5A017F4A5A6D6C495AD90FC0EB1F80D907F0017F
C7FC903901FE03FC9039003FFFE0020790C8FC35357BB33F>I<B612F8EDFF8016E03A03
FE000FF86C48EB03FEED00FF707E707E83161FA283A55FA24C5A5F4CC7FC16FEED03FCED
1FF090B6128003FCC8FC9038FC003FED0FC06F7E6F7E6F7E82150082A382A383A4EFC01C
A2167FEFE03C486C023F1338B500F890381FF07893380FF8F0933803FFE0CAEA7F803634
7BB23C>114 D<90390FF0018090387FFE0348B512873907F00FEF390FC001FF48C7FC00
3E143F151F5A150F5A1507A36C1403A27E6C91C7FC6C7E7FEA3FF8EBFF806C13FC6CEBFF
C06C14F06C80C614FE011F7F01031480D9001F13C014019138003FE0151F150FED07F015
0312E01501A37EA216E06C1403A26CEC07C06CEC0F806C6CEB1F0001E0133ED8FBFE13FC
00F0B55AD8E01F13E0D8C00390C7FC24357BB32E>I<007FB812C0A3903A8007FC003F27
7E0003F8130F007C16070078160300701601A200F017E0A2481600A6C71600B3AA4A7E4A
7E010FB512FEA333327CB13B>I<B500E0ECFFFEA3000790C8EA3FF0D803FCED1FC00001
EE0F806D16001200170E6D151E6D151CA26D6C5CA26E1478011F157080010F5DA26E1301
01075D6E130301035DA26D6C49C7FCA26E5B0100140EA2027F5BA2ED803C023F133815C0
021F5BA2EDE0F0020F5B15F102075BA2913803FB80A215FF6E90C8FCA26E5AA3157CA215
3837347DB23D>118 D<B500F091387FFF80A30003018091381FFC006C90C8EA0FE06C6D
5D017F5E6D6C4AC7FC171E6D6C5C6D6C143817786D6C5C6D6C5C16016D6C495A6D6C5C16
076E6C48C8FC91383FC00E161E6E6C5A91380FF03816786E6C5A6E6C5AEDFDC0EC01FF6E
5B93C9FC81B14B7E023F13FEA339337EB23D>121 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
/setpagedevice where {
pop 1 dict dup /PageSize [ 595 842 ] put setpagedevice
} {
statusdict /a4tray known {
statusdict begin a4tray end
/a4 where { pop a4 } if
} {
/a4 where {
pop a4
} {
statusdict /setpage known {
statusdict begin
595 842 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

/pstopsxform pstopsmatrix matrix currentmatrix matrix invertmatrix matrix concatmatrix matrix invertmatrix store
%%EndSetup
%%Page: pstops 1
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
1 0 bop 592 399 a Fj(Hong)38 b(K)m(ong)g(University)f(of)h(Science)f
(and)h(Technology)660 538 y Fi(COMP221:)50 b(F)-9 b(undamen)m(tals)38
b(of)g(Arti\014cial)c(In)m(telligence)1635 678 y Fh(Spring)g(1997)1455
818 y Fg(Midterm)f(Examination)1344 1049 y Ff(25)e(Marc)m(h)g(1997,)i
(7:30{9:00pm)873 1544 y Fe(Student)g(Name)p Ff(:)p 1770
1544 1182 6 v 873 1770 a Fe(Student)g(Number)p Ff(:)p
1770 1770 V 873 1996 a Fe(Lecture)g(Section)p Ff(:)p
1770 1996 V 216 2538 a Fi(Instructions)186 2707 y Ff(1.)46
b(This)29 b(is)g(a)i(closed-b)s(o)s(ok,)f(closed-notes)h(examination.)
186 2887 y(2.)46 b(Chec)m(k)31 b(that)g(y)m(ou)g(ha)m(v)m(e)g(all)f(9)g
(pages)h(\(excluding)e(this)g(co)m(v)m(er)k(page\).)186
3067 y(3.)46 b(W)-8 b(rite)31 b(y)m(our)f(name,)h(studen)m(t)f(n)m(um)m
(b)s(er)f(and)h(lecture)g(section)h(on)f(this)f(page.)186
3247 y(4.)46 b(Answ)m(er)35 b(all)f(questions)h(in)f(the)h(space)h(pro)
m(vided.)55 b(Rough)35 b(w)m(ork)g(should)f(b)s(e)g(done)h(on)h(the)f
(bac)m(k)302 3360 y(pages.)186 3540 y(5.)46 b(Mak)m(e)32
b(y)m(our)f(answ)m(ers)f(as)g(concise)h(as)f(p)s(ossible.)1147
4014 y(Question)f(1)i(\(25\045\):)p 1969 4014 709 6 v
1147 4240 a(Question)e(2)i(\(10\045\):)p 1969 4240 V
1147 4465 a(Question)e(3)i(\(10\045\):)p 1969 4465 V
1147 4691 a(Question)e(4)i(\(10\045\):)p 1969 4691 V
1147 4917 a(Question)e(5)i(\(25\045\):)p 1969 4917 V
1147 5143 a(Question)e(6)i(\(20\045\):)p 1969 5143 V
1147 5482 a(TOT)-8 b(AL)30 b(\(100\045\):)p 1969 5482
V eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
1 1 bop 186 399 a Ff(1.)46 b(\(25\045\))32 b Fe(Heuristic)i(Sear)n(ch)
302 549 y Ff(A)27 b(searc)m(h)f(tree)h(is)f(sho)m(wn)f(b)s(elo)m(w)h
(where)f(eac)m(h)j(b)s(o)m(x)e(represen)m(ts)g(a)g(no)s(de)g(corresp)s
(onding)e(to)j(a)g(state)302 662 y(in)38 b(the)h(searc)m(h)h(space.)68
b(The)38 b(estimated)h(cost)i(\(i.e.)e Fd(h)h Ff(function\))e(for)h
(\014nding)d(a)k(solution)d(from)302 775 y(a)g(no)s(de)e(is)g(sho)m(wn)
h(in)f(its)g(b)s(o)m(x.)58 b(The)36 b(t)m(w)m(o)i(no)s(des)d(with)g
Fd(h)g Ff(=)g(0)h(are)h(goal)f(states)i(and)d(the)i(other)302
888 y(terminal)26 b(no)s(des)h(are)g(dead-ends)g(\(i.e.)h(states)g
(that)g(can)g(nev)m(er)f(reac)m(h)h(a)g(goal\).)40 b(Actual)28
b(link)d(costs)302 1000 y(are)33 b(mark)m(ed)f(on)f(the)h(links)e(b)s
(et)m(w)m(een)j(no)s(des.)44 b(Th)m(us)31 b(the)h(path)g(cost)h(\(i.e.)
f Fd(g)j Ff(function\))c(of)h(a)h(no)s(de)302 1113 y(is)d(equal)g(to)h
(the)f(sum)g(of)g(the)h(link)d(costs)j(from)f(the)h(ro)s(ot)f(to)i
(that)f(no)s(de.)731 2965 y @beginspecial 57 @llx 388
@lly 482 @urx 700 @ury 2834 @rwi @setspecial
%%BeginDocument: tree.eps
% 00000000000000000000000000000000000000000000000003ffffffe000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020004002000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000002000c002000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000002000e002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020012002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020012002000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000002001f002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020021002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020033802000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000201c3802000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020324002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020027002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020023802000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020040802000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000200c0802000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000802000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000201ff002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000020000002000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000003c000000000200000020000000001c0000000000000000000000000000000000000000
% 000000000000000000000000000000000000000400000000020000002000000000320000000000000000000000000000000000000000
% 000000000000000000000000000000000000000400000000020000002000000000020000000000000000000000000000000000000000
% 00000000000000000000000000000000000000180000000003ffffffe000000000020000000000000000000000000000000000000000
% 000000000000000000000000000000000000000c000000000f0000007800000000040000000000000000000000000000000000000000
% 000000000000000000000000000000000000000400000000f000000007800000000c0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000040000000f000000000070000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000380000007000000000000f0000001f0000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000780000000000000f00000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000078000000000000000f0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000007800000000000000000f000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000780000000000000000000f00000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000078000000000000000000000e0000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000007800000000000000000000001e000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000780000000000000000000000001e00000000000000000000000000000000000000000
% 0000000000000000000000000000000000000038000000000000000000000000001e0000000000000000000000000000000000000000
% 00000000000000000000000000000000000003c00000000000000000000000000001e000000000000000000000000000000000000000
% 0000000000000000000000000000000000003c0000000000000000000000000000001e00000000000000000000000000000000000000
% 000000000000000000000000000000000003c000000000000000000000000000000001c0000000000000000000000000000000000000
% 00000000000000000000000000000000003c00000000000000000000000000000000003c000000000000000000000000000000000000
% 0000000000000000000000000000000003c0000000000000000000000000000000000003c00000000000000000000000000000000000
% 000000000000000000000000000000003c000000000000000000000000000000000000003c0000000000000000000000000000000000
% 00000000000000000000000000000003c00000000000000000000000000000000000000003c000000000000000000000000000000000
% 0000000000000000000000000000001c0000000000000000000000000000000000000000003c00000000000000000000000000000000
% 000000000000000000000000000001e00000000000000000000000000000000000000000000380000000000000000000000000000000
% 00000000000000000000000000c01e000000000000000000000000000000000000000000000078070000000000000000000000000000
% 00000000000000000000000001e1e0000000000000000000000000000000000000000000000007878000000000000000000000000000
% 00000000000000000000000007fe000000000000000000000000000000000000000000000000007fe000000000000000000000000000
% 0000000000000000000000001fe00000000000000000000000000000000000000000000000000007f800000000000000000000000000
% 0000000000000000000000003ff00000000000000000000000000000000000000000000000000007fe00000000000000000000000000
% 000000000000000000000000fff00000000000000000000000000000000000000000000000000007ff80000000000000000000000000
% 0000000000000000000007ffffffc0000000000000000000000000000000000000000000000000fffffff80000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400fc00400000000000000000000000000000000000000000000000008007c0080000000000000000000000
% 000000000000000000000400460040000000000000000000000000000000000000000000000000800c60080000000000000000000000
% 000000000000000000000400420040000000000000000000000000000000000000000000000000800800080000000000000000000000
% 0000000000000000000004007c0040000000000000000000000000000000000000000000000000800800080000000000000000000000
% 0000000000000000000004004e0040000000000000000000000000000000000000000000000000800800080000000000000000000000
% 000000000000000000000400420040000000000000000000000000000000000000000000000000800800080000000000000000000000
% 000000000000000000000400420040000000000000000000000000000000000000000000000000800c00080000000000000000000000
% 0000000000000000000004007c00400000000000000000000000000000000000000000000000008007c0080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 0000000000000000000004038600400000000000000000000000000000000000000000000000008031e0080000000000000000000000
% 000000000000000000000406440040000000000000000000000000000000000000000000000000801020080000000000000000000000
% 000000000000000000000400480040000000000000000000000000000000000000000000000000801020080000000000000000000000
% 0000000000000000000004005f00400000000000000000000000000000000000000000000000008010c0080000000000000000000000
% 000000000000000000000400918040000000000000000000000000000000000000000000000000801060080000000000000000000000
% 000000000000000000000401908040000000000000000000000000000000000000000000000000801020080000000000000000000000
% 000000000000000000000400088040000000000000000000000000000000000000000000000000801020080000000000000000000000
% 000000000000000000000403ef00400000000000000000000000000000000000000000000000008039c0080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 000000000000000000000400000040000000000000000000000000000000000000000000000000800000080000000000000000000000
% 0000000000000000000007ffffffc0000000000000000000000000000000000000000000000000fffffff80000000000000000000000
% 000000000000000000000100000400000000000000000000000000000000000000000000000000200000800000000000000000000000
% 000000000000000000000600000300000000000000000000000000000000000000000000000000c00000600000000000000000000000
% 0000000000000000c30008000000c0031e0000000000000000000000000000000000000000c0010000001800e0000000000000000000
% 000000000000000041003000000020010200000000000000000000000000000000000000008006000000040190000000000000000000
% 00000000000000004100c000000018010200000000000000000000000000000000000000010018000000030010000000000000000000
% 000000000000000041010000000004010c0000000000000000000000000000000000000003e020000000008010000000000000000000
% 0000000000000000410600000000030106000000000000000000000000000000000000000230c0000000006020000000000000000000
% 000000000000000041080000000000c10200000000000000000000000000000000000000021100000000001860000000000000000000
% 000000000000000041300000000000210200000000000000000000000000000000000000011600000000000400000000000000000000
% 0000000000000000e3c000000000001b9c0000000000000000000000000000000000000001f8000000000003f8000000000000000000
% 0000000000000000010000000000000600000000000000000000000000000000000000000020000000000000c0000000000000000000
% 00000000000000000600000000000001000000000000000000000000000000000000000000c000000000000020000000000000000000
% 00000000000000000800000000000000c000000000000000000000000000000000000000010000000000000018000000000000000000
% 000000000000000030000000000000003000000000000000000000000000000000000000060000000000000006000000000000000000
% 000000000000000040000000000000000800000000000000000000000000000000000000080000000000000001000000000000000000
% 000000000000000180000000000000000600000000000000000000000000000000000000300000000000000000c00000000000000000
% 000000000000000600000000000000000100000000000000000000000000000000000000c00000000000000000200000000000000000
% 0000000000000008000000000000000000c0000000000000000000000000000000000001000000000000000000180000000000000000
% 0000000000000c3000000000000000000030c00000000000000000000000000000000186000000000000000000061800000000000000
% 0000000000001c4000000000000000000008e00000000000000000000000000000000388000000000000000000011c00000000000000
% 0000000000003f8000000000000000000007f000000000000000000000000000000007f000000000000000000000fe00000000000000
% 0000000000007f0000000000000000000003f80000000000000000000000000000000fc0000000000000000000007f00000000000000
% 0000000000007f0000000000000000000003f80000000000000000000000000000000fe0000000000000000000007f00000000000000
% 000000000000ff8000000000000000000007fc0000000000000000000000000000001fe000000000000000000000ff80000000000000
% 000000000001ff0000000000000000000003fe0000000000000000000000000000003fc0000000000000000000007fc0000000000000
% 000000000003f000000000000000000000003f0000000000000000000000000000007e000000000000000000000007e0000000000000
% 00000000000700000000000000000000000003800000000000000000000000000000e000000000000000000000000070000000000000
% 0000000fffffff8000000000000000000007ffffffe000000000000000000001fffffff000000000000000000000fffffffc00000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 0000000800f8008000000000000000000004003f002000000000000000000001001f8010000000000000000000008003f00400000000
% 000000080084008000000000000000000004002000200000000000000000000100100010000000000000000000008002100400000000
% 000000080082008000000000000000000004002000200000000000000000000100100010000000000000000000008004000400000000
% 000000080082008000000000000000000004003e002000000000000000000001001f0010000000000000000000008004200400000000
% 000000080082008000000000000000000004002200200000000000000000000100110010000000000000000000008004100400000000
% 000000080082008000000000000000000004002000200000000000000000000100100010000000000000000000008004100400000000
% 000000080084008000000000000000000004002100200000000000000000000100100010000000000000000000008006100400000000
% 0000000800f8008000000000000000000004003f002000000000000000000001001c0010000000000000000000008003f00400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 00000008031c00800000000000000000000400c300200000000000000000000100638010000000000000000000008071e00400000000
% 0000000801320080000000000000000000040042002000000000000000000001002640100000000000000000000080ca200400000000
% 000000080123008000000000000000000004004400200000000000000000000100204010000000000000000000008008200400000000
% 000000080133008000000000000000000004004f80200000000000000000000100204010000000000000000000008008400400000000
% 00000008011f0080000000000000000000040048c0200000000000000000000100208010000000000000000000008010400400000000
% 000000080102008000000000000000000004004840200000000000000000000100218010000000000000000000008030400400000000
% 000000080104008000000000000000000004004440200000000000000000000100200010000000000000000000008000c00400000000
% 00000008039c00800000000000000000000400e78020000000000000000000010073e01000000000000000000000807c800400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 000000080000008000000000000000000004000000200000000000000000000100000010000000000000000000008000000400000000
% 0000000fffffff8000000000000000000007ffffffe000000000000000000001fffffff000000000000000000000fffffffc00000000
% 000000004000100000000000000000000000200008000000000000000000000010000400000000000000000000000400010000000000
% 000000008000080000000000000000000000400004000000000000000000000020000200000000000000000000000800008000000000
% 000018c100000431e0000000000000000c388000020c38000000000000000638400001003800000000000000038f1000004187000000
% 000008410000041120000000000000000448800002044000000000000000026440000100640000000000000006511000004089000000
% 000008420000021210000000000000000449000001047000000000000000020480000080460000000000000000412000002089000000
% 000008420000021210000000000000000431000001043800000000000000020480000040660000000000000000422000002086000000
% 00000844000001121000000000000000047a0000008408000000000000000209000000403e000000000000000082400000108f000000
% 00000848000000921000000000000000044c000000440800000000000000021a00000020040000000000000001828000000889000000
% 00000848000000912000000000000000044c000000440800000000000000020200000010080000000000000000068000000889000000
% 00001cf000000079e0000000000000000e780000002ef000000000000000073e00000010380000000000000003e500000005cf000000
% 000000200000002000000000000000000010000000100000000000000000000800000008000000000000000000020000000200000000
% 000000200000002000000000000000000010000000100000000000000000000800000004000000000000000000020000000200000000
% 000000400000001000000000000000000020000000080000000000000000001000000004000000000000000000040000000100000000
% 000000400000001000000000000000000020000000080000000000000000001000000002000000000000000000040000000100000000
% 000000800000000800000000000000000040000000040000000000000000002000000001000000000000000000080000000080000000
% 000009000000000480000000000000000480000000024000000000000000034000000001200000000000000000900000000048000000
% 00001f0000000007c0000000000000000f8000000003e00000000000000003c000000000f00000000000000001f0000000007c000000
% 00001f0000000007c0000000000000000f8000000003e00000000000000003c000000000f00000000000000001f0000000007c000000
% 00001f800000001fc0000000000000000fe00000000fe00000000000000007f000000003f00000000000000001fc00000001fc000000
% 00001f800000001fc0000000000000000fe00000000fe00000000000000007f000000003f00000000000000001fc00000001fc000000
% 00003f000000000fe0000000000000001fc000000007f00000000000000007e000000001f80000000000000003f800000000fe000000
% 00003e0000000007e0000000000000001f8000000003f0000000000000000fc000000000f80000000000000003f0000000007e000000
% 00003c0000000003e0000000000000001f0000000001f0000000000000000f8000000000780000000000000003e0000000003e000000
% 0000380000000000e0000000000000001c000000000070000000000000000e000000000038000000000000000380000000000e000000
% 0000700000000000700000000000000038000000000038000000000000001c00000000001c0000000000000007000000000007000000
% 0000600000000000300000000000000030000000000018000000000000001800000000000c0000000000000006000000000003000000
% 000040000000000010000000000000002000000000000800000000000000100000000000040000000000000004000000000001000000
% fffffff8000000fffffffc0000007ffffffc0000003ffffffe0000003fffffff0000001fffffff8000000fffffff80000007ffffffc0
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800c6008000000800e0004000000400300040000002003300200000020018001000000100383008000000801c60080000004007c0040
% 8008400800000080040004000000400200040000002001200200000020010001000000100186008000000800c2008000000400440040
% 80084008000000800400040000004002000400000020014002000000200100010000001001c6008000000800a2008000000400440040
% 800fc0080000008004000400000040020004000000200180020000002001000100000010014a008000000800b20080000004004c0040
% 8008400800000080040004000000400200040000002001c0020000002001000100000010016a0080000008009a008000000400780040
% 80084008000000800400040000004002000400000020016002000000200100010000001001320080000008008e008000000400400040
% 800840080000008004000400000040020004000000200130020000002001080100000010013200800000080086008000000400400040
% 800c600800000080070004000000400e000400000020033c020000002001f8010000001001a3008000000800c2008000000400700040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 8031c008000000800380040000004007800400000020038002000000200f3c01000000100e38008000000800f00080000004018e0040
% 801320080000008004000400000040048004000000200640020000002001040100000010196400800000080090008000000400990040
% 801020080000008007000400000040084004000000200040020000002001040100000010014600800000080108008000000400810040
% 801020080000008003800400000040084004000000200040020000002006180100000010016600800000080108008000000400810040
% 8010400800000080008004000000400840040000002000800200000020030c0100000010023e00800000080108008000000400820040
% 8010c0080000008000800400000040084004000000200180020000002001040100000010060400800000080108008000000400860040
% 801000080000008000800400000040048004000000200000020000002001040100000010000800800000080090008000000400800040
% 8039f008000000800f0004000000400780040000002003e002000000200e3801000000100fb8008000000800f0008000000401cf8040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% 800000080000008000000400000040000004000000200000020000002000000100000010000000800000080000008000000400000040
% fffffff8000000fffffffc0000007ffffffc0000003ffffffe0000003fffffff0000001fffffff8000000fffffff80000007ffffffc0
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		}{ }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(4.0) FMVERSION
1 1 0 0 595.28 841.89 0 1 1 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
461.77 456.64 464.87 445.05 456.1 453.24 458.94 454.94 4 Y
0 X
0 0 0 1 0 0 0 K
V
447.87 473.39 458.95 454.93 2 L
0.5 H
2 Z
N
82.47 453.24 73.7 445.05 76.8 456.64 79.63 454.94 4 Y
V
90.71 473.39 79.64 454.93 2 L
N
428.5 539 436.53 530.08 424.99 533.39 426.75 536.2 4 Y
V
391.18 558.43 426.75 536.19 2 L
N
201.73 539 209.76 530.08 198.23 533.39 199.98 536.2 4 Y
V
164.41 558.43 199.98 536.19 2 L
N
113.58 533.39 102.05 530.08 110.07 539 111.83 536.2 4 Y
V
147.4 558.43 111.83 536.19 2 L
N
340.35 533.39 328.82 530.08 336.84 539 338.6 536.2 4 Y
V
374.17 558.43 338.6 536.19 2 L
N
165.07 614.86 153.07 615.12 163.38 621.26 164.22 618.06 4 Y
V
260.79 643.47 164.23 618.05 2 L
N
255.12 643.47 283.46 700.16 R
7 X
V
1 H
0 X
N
141.73 558.43 170.08 615.12 R
7 X
V
0 X
N
368.5 558.43 396.85 615.12 R
7 X
V
0 X
N
311.81 473.39 340.16 530.08 R
7 X
V
0 X
N
425.2 473.39 453.54 530.08 R
7 X
V
0 X
N
198.43 473.39 226.77 530.08 R
7 X
V
0 X
N
85.04 473.39 113.39 530.08 R
7 X
V
0 X
N
56.69 388.35 85.04 445.04 R
7 X
V
0 X
N
113.39 388.35 141.73 445.04 R
7 X
V
0 X
N
170.08 388.35 198.42 445.04 R
7 X
V
0 X
N
226.77 388.35 255.12 445.04 R
7 X
V
0 X
N
453.54 388.35 481.89 445.04 R
7 X
V
0.5 H
0 X
N
396.85 388.35 425.2 445.04 R
7 X
V
1 H
0 X
N
340.16 388.35 368.5 445.04 R
7 X
V
0 X
N
283.46 388.35 311.81 445.04 R
7 X
V
0 X
N
375.19 621.26 385.51 615.12 373.51 614.86 374.35 618.06 4 Y
V
277.8 643.47 374.36 618.05 2 L
0.5 H
N
195.85 453.24 187.08 445.05 190.18 456.64 193.02 454.94 4 Y
V
204.09 473.39 193.02 454.93 2 L
N
309.24 453.24 300.47 445.05 303.57 456.64 306.4 454.94 4 Y
V
317.48 473.39 306.41 454.93 2 L
N
422.62 453.24 413.85 445.05 416.95 456.64 419.79 454.94 4 Y
V
430.86 473.39 419.79 454.93 2 L
N
121.62 456.64 124.72 445.05 115.95 453.24 118.79 454.94 4 Y
V
107.72 473.39 118.79 454.93 2 L
N
235.01 456.64 238.11 445.05 229.34 453.24 232.17 454.94 4 Y
V
221.1 473.39 232.18 454.93 2 L
N
348.39 456.64 351.49 445.05 342.72 453.24 345.55 454.94 4 Y
V
334.49 473.39 345.56 454.93 2 L
N
0 12 Q
(A) 266.46 677.48 T
(B) 153.07 592.44 T
(C) 379.84 592.44 T
(D) 96.38 507.4 T
(E) 209.76 507.4 T
(F) 323.15 507.4 T
(G) 436.54 507.4 T
(H) 68.03 422.36 T
(I) 124.72 422.36 T
(J) 181.42 422.36 T
(K) 238.11 422.36 T
(L) 294.8 422.36 T
(M) 351.49 422.36 T
(N) 408.19 422.36 T
(P) 464.88 422.36 T
260.79 649.13 277.79 666.14 R
7 X
V
0 X
(25) 263.29 658.14 T
147.4 564.1 164.41 581.1 R
7 X
V
0 X
(26) 149.9 573.1 T
374.17 564.1 391.18 581.1 R
7 X
V
0 X
(13) 376.68 573.1 T
430.86 479.06 447.87 496.06 R
7 X
V
0 X
(27) 433.37 488.06 T
317.48 479.06 334.49 496.06 R
7 X
V
0 X
(12) 319.98 488.06 T
204.09 479.06 221.1 496.06 R
7 X
V
0 X
(16) 206.6 488.06 T
90.71 479.06 107.72 496.06 R
7 X
V
0 X
(19) 93.21 488.06 T
62.36 394.02 79.37 411.03 R
7 X
V
0 X
(12) 64.87 403.03 T
119.06 394.02 136.06 411.03 R
7 X
V
0 X
(5) 124.56 403.03 T
175.75 394.02 192.76 411.03 R
7 X
V
0 X
(0) 181.25 403.03 T
232.44 394.02 249.45 411.03 R
7 X
V
0 X
(2) 237.94 403.03 T
289.13 394.02 306.14 411.03 R
7 X
V
0 X
(33) 291.64 403.03 T
345.83 394.02 362.83 411.03 R
7 X
V
0 X
(29) 348.33 403.03 T
402.52 394.02 419.53 411.03 R
7 X
V
0 X
(0) 408.02 403.03 T
459.21 394.02 476.22 411.03 R
7 X
V
0 X
(12) 461.72 403.03 T
(3) 209.76 637.8 T
(2) 323.15 637.8 T
(1) 119.06 547.09 T
(1) 124.61 547.09 T
(13) 181.42 547.09 T
(6) 351.49 547.09 T
(2) 408.19 547.09 T
(1) 73.7 462.05 T
(1) 79.26 462.05 T
(10) 113.39 462.05 T
(18) 187.09 462.05 T
(15) 226.77 462.05 T
(12) 300.47 462.05 T
(9) 345.83 462.05 T
(27) 413.86 462.05 T
(18) 453.54 462.05 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 341 3222 a(\(a\))46 b([8\045])23 b(Using)e(the)h(greedy)g
(searc)m(h)g(algorithm,)h(giv)m(e)f(the)g(sequence)g(of)g(no)s(des)f
(expanded)g(b)s(efore)502 3335 y(a)31 b(goal)g(state)h(is)d(reac)m
(hed.)42 b(What)31 b(is)e(the)i(solution)d(path)j(and)e(what)i(is)e
(its)h(path)g(cost?)1890 5841 y(1)p eop
pstopssaved restore
%%Page: pstops 2
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
2 2 bop 336 399 a Ff(\(b\))45 b([8\045])31 b(Rep)s(eat)g(part)f(\(a\))i
(using)d(the)h(A)1822 366 y Fc(\003)1892 399 y Ff(searc)m(h)h
(algorithm.)346 2907 y(\(c\))46 b([9\045])34 b(Is)e(the)h(heuristic)d
(function)i(\(i.e.)h Fd(h)p Ff(\))g(admissible?)44 b(Justify)31
b(y)m(our)i(answ)m(er.)47 b(What)34 b(can)502 3020 y(y)m(ou)28
b(sa)m(y)f(ab)s(out)g(the)g(A)1302 2987 y Fc(\003)1369
3020 y Ff(searc)m(h)h(algorithm)e(in)f(the)j(ligh)m(t)e(of)h(this)f
(prop)s(ert)m(y)g(of)i(the)f(heuristic)502 3133 y(function)i(used?)1890
5841 y(2)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
3 3 bop 186 399 a Ff(2.)46 b(\(10\045\))32 b Fe(Game)i(Pla)-6
b(ying)302 549 y Ff(In)31 b(the)g(follo)m(wing)e(game)k(tree,)f(there)f
(are)h(t)m(w)m(o)g(leaf)f(no)s(des)f(with)g(unkno)m(wn)g(ev)-5
b(aluation)30 b(function)302 662 y(v)-5 b(alues.)55 b(Let)36
b(us)e(denote)i(the)f(unkno)m(wn)f(v)-5 b(alues)35 b(b)m(y)g
Fd(x)g Ff(and)g Fd(y)s Ff(.)55 b(In)34 b(terms)h(of)h
Fd(x)f Ff(and)g Fd(y)s Ff(,)h(giv)m(e)g(the)302 775 y(condition)30
b(under)g(whic)m(h)g(MAX)h(should)e(mo)m(v)m(e)k(to)f(the)f(left)g(c)m
(hild)f(from)g(the)i(ro)s(ot)f(no)s(de)g(in)e(order)302
888 y(to)i(maximize)f(its)g(c)m(hance)h(of)g(winning)c(the)k(game.)731
2196 y @beginspecial 56 @llx 398 @lly 542 @urx 643 @ury
2834 @rwi @setspecial
%%BeginDocument: game.eps
% 00000000000000000000000000000000000000000000000001fffffff00000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000000000000001c1c101c4
% 000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000000000000001e1c180ec
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000162c380f8
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000162c0c070
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000134c0c038
% 0000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000000000000013cc7e078
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000138cc605c
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000118c8708e
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000191fc719e
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001000000100000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001fffffff00000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000001c00000700000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000e0000000e0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000030000000018000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000001c0000000007000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000e00000000000e00000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000070000000000001c0000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000038000000000000038000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000001c0000000000000007000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000e00000000000000000c00000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000007000000000000000000380000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000018000000000000000000070000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000e000000000000000000000e000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000700000000000000000000001c00000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000003800000000000000000000000380000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000001c000000000000000000000000060000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000e000000000000000000000000001c000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000700000000000000000000000000003800000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000001800000000000000000000000000000700000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000e0000000000000000000000000000000e0000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000007000000000000000000000000000000001c000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000380000000000000000000000000000000003000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000001c00000000000000000000000000000000000e00000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000e0000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000070000000000000000000000000000000000000038000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000380000000000000000000000000000000000000007000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000c00000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000
% 00000000000000000000000018000407000000000000000000000000000000000000000000181800030000000000000000000000000000000000000000
% 000000000000000000000001e7c01e38000000000000000000000000000000000000000000071e003cf800000000000000000000000000000000000000
% 00000000000000000000000600203fc000000000000000000000000000000000000000000000ff00c00400000000000000000000000000000000000000
% 0000000000000000000000180018fe00000000000000000000000000000000000000000000003fc3000300000000000000000000000000000000000000
% 0000000000000000000000200005ff00000000000000000000000000000000000000000000003fe4000080000000000000000000000000000000000000
% 0000000000000000000000400003ff00000000000000000000000000000000000000000000003ff8000040000000000000000000000000000000000000
% 0000000000000000000000800001f8000000000000000000000000000000000000000000000007f0000020000000000000000000000000000000000000
% 00000000000000000000008000008000000000000000000000000000000000000000000000000010000010000000000000000000000000000000000000
% 00000000000000000000010000008000000000000000000000000000000000000000000000000020000010000000000000000000000000000000000000
% 00000000000000000000010000004000000000000000000000000000000000000000000000000020000008000000000000000000000000000000000000
% 00000000000000000000020000004000000000000000000000000000000000000000000000000040000008000000000000000000000000000000000000
% 00000000000000000000020000004000000000000000000000000000000000000000000000000040000008000000000000000000000000000000000000
% 00000000000000000000020000004000000000000000000000000000000000000000000000000040000008000000000000000000000000000000000000
% 000000000000000000000200000020000000000000000000000000000000000000000000000000400000040000000000000000000000000001c1c6f080
% 000000000000000000000400000020000000000000000000000000000000000000000000000000800000040000000000000000000000000001e1c67880
% 00000000000000000000040000002000000000000000000000000000000000000000000000000080000004000000000000000000000000000162c65880
% 00000000000000000000020000002000000000000000000000000000000000000000000000000040000004000000000000000000000000000162c64c80
% 0000000000000000000002000000600000000000000000000000000000000000000000000000004000000c000000000000000000000000000134c64e80
% 0000000000000000000002000000400000000000000000000000000000000000000000000000004000000800000000000000000000000000013cc64780
% 00000000000000000000020000004000000000000000000000000000000000000000000000000040000008000000000000000000000000000138c64380
% 00000000000000000000020000004000000000000000000000000000000000000000000000000040000008000000000000000000000000000118c64180
% 00000000000000000000010000008000000000000000000000000000000000000000000000000020000010000000000000000000000000000191ef6080
% 00000000000000000000008000008000000000000000000000000000000000000000000000000010000010000000000000000000000000000000000000
% 00000000000000000000008000010000000000000000000000000000000000000000000000000010000020000000000000000000000000000000000000
% 00000000000000000000004000020000000000000000000000000000000000000000000000000008000040000000000000000000000000000000000000
% 0000000000000000000000e00006000000000000000000000000000000000000000000000000001c0000c0000000000000000000000000000000000000
% 00000000000000000000011000090000000000000000000000000000000000000000000000000022000120000000000000000000000000000000000000
% 00000000000000000000020c00308000000000000000000000000000000000000000000000000041800610000000000000000000000000000000000000
% 000000000000000000000c03c3c0600000000000000000000000000000000000000000000000018078780c000000000000000000000000000000000000
% 0000000000000000000010003e00100000000000000000000000000000000000000000000000020007c002000000000000000000000000000000000000
% 00000000000000000000200000000c00000000000000000000000000000000000000000000000400000001000000000000000000000000000000000000
% 00000000000000000000c00000000200000000000000000000000000000000000000000000001800000000c00000000000000000000000000000000000
% 00000000000000000001000000000100000000000000000000000000000000000000000000002000000000200000000000000000000000000000000000
% 000000000000000000020000000000c0000000000000000000000000000000000000000000004000000000100000000000000000000000000000000000
% 0000000000000000000c0000000000200000000000000000000000000000000000000000000180000000000c0000000000000000000000000000000000
% 00000000000000000010000000000010000000000000000000000000000000000000000000020000000000020000000000000000000000000000000000
% 0000000000000000002000000000000c000000000000000000000000000000000000000000040000000000010000000000000000000000000000000000
% 000000000000000000c000000000000200000000000000000000000000000000000000000018000000000000c000000000000000000000000000000000
% 00000000000000000100000000000001800000000000000000000000000000000000000000200000000000002000000000000000000000000000000000
% 00000000000000000200000000000000400000000000000000000000000000000000000000400000000000001000000000000000000000000000000000
% 00000000000000000c00000000000000200000000000000000000000000000000000000001800000000000000c00000000000000000000000000000000
% 00000000000000001000000000000000180000000000000000000000000000000000000002000000000000000200000000000000000000000000000000
% 00000000000000002000000000000000040000000000000000000000000000000000000004000000000000000100000000000000000000000000000000
% 0000000000000000c0000000000000000200000000000000000000000000000000000000180000000000000000c0000000000000000000000000000000
% 00000000000000010000000000000000018000000000000000000000000000000000000020000000000000000020000000000000000000000000000000
% 00000000000000020000000000000000004000000000000000000000000000000000000040000000000000000010000000000000000000000000000000
% 000000000000000c000000000000000000300000000000000000000000000000000000018000000000000000000c000000000000000000000000000000
% 00000000000000100000000000000000000800000000000000000000000000000000000200000000000000000002000000000000000000000000000000
% 0000000000000c2000000000000000000004300000000000000000000000000000000184000000000000000000010c0000000000000000000000000000
% 0000000000000cc00000000000000000000330000000000000000000000000000000019800000000000000000000ce0000000000000000000000000000
% 0000000000001f0000000000000000000000f800000000000000000000000000000003e0000000000000000000003e0000000000000000000000000000
% 0000000000003f0000000000000000000000fc00000000000000000000000000000007e0000000000000000000003f0000000000000000000000000000
% 0000000000007f0000000000000000000000fe0000000000000000000000000000000fe0000000000000000000003f8000000000000000000000000000
% 0000000000007f8000000000000000000001fe0000000000000000000000000000000ff0000000000000000000007fc000000000000000000000000000
% 000000000000ff8000000000000000000001ff0000000000000000000000000000001ff0000000000000000000007fe000000000000000000000000000
% 000000000001fc00000000000000000000003f8000000000000000000000000000003f80000000000000000000000fe000000000000000000000000000
% 000000000001e00000000000000000000000078000000000000000000000000000003c000000000000000000000001f000000000000000000000000000
% 00000000000300000000000000000000000000c00000000000000000000000000000600000000000000000000000003800000000000000000000000000
% 00000007ffffffc000000000000000000003fffffff000000000000000000000fffffff8000000000000000000007ffffffe0000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 000000040000004000000000000000000002000000100000000000000000000080000008000000000000000000004000000200000000000001c1c101c4
% 000000040000004000000000000000000002000000100000000000000000000080000008000000000000000000004000000200000000000001e1c180ec
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000162c380f8
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000162c0c070
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000134c0c038
% 0000000400000040000000000000000000020000001000000000000000000000800000080000000000000000000040000002000000000000013cc7e078
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000138cc605c
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000118c8708e
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000191fc719e
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000004000000400000000000000000000200000010000000000000000000008000000800000000000000000000400000020000000000000000000000
% 00000007ffffffc000000000000000000003fffffff000000000000000000000fffffff8000000000000000000007ffffffe0000000000000000000000
% 00000000200008000000000000000000000010000400000000000000000000000800020000000000000000000000020000800000000000000000000000
% 00000000200008000000000000000000000010000400000000000000000000000800020000000000000000000000020000800000000000000000000000
% 00000000400004000000000000000000000020000200000000000000000000001000010000000000000000000000040000400000000000000000000000
% 00000000400004000000000000000000000020000200000000000000000000001000010000000000000000000000040000400000000000000000000000
% 00000000800002000000000000000000000040000100000000000000000000001000008000000000000000000000080000200000000000000000000000
% 00000000800002000000000000000000000040000100000000000000000000002000008000000000000000000000080000200000000000000000000000
% 00000000800002000000000000000000000040000100000000000000000000002000008000000000000000000000080000200000000000000000000000
% 00000001000001000000000000000000000080000080000000000000000000002000004000000000000000000000100000100000000000000000000000
% 00000001000001000000000000000000000080000080000000000000000000004000004000000000000000000000100000100000000000000000000000
% 00000001000001000000000000000000000080000080000000000000000000004000004000000000000000000000100000100000000000000000000000
% 00000002000000800000000000000000000100000040000000000000000000004000002000000000000000000000200000080000000000000000000000
% 00000002000000800000000000000000000100000040000000000000000000008000002000000000000000000000200000080000000000000000000000
% 00000004000000400000000000000000000200000020000000000000000000008000001000000000000000000000400000040000000000000000000000
% 00000004000000400000000000000000000200000020000000000000000000008000001000000000000000000000400000040000000000000000000000
% 00000004000000400000000000000000000200000020000000000000000000010000001000000000000000000000400000040000000000000000000000
% 00000008000000200000000000000000000400000010000000000000000000010000000800000000000000000000800000020000000000000000000000
% 00000008000000200000000000000000000400000010000000000000000000020000000800000000000000000000800000020000000000000000000000
% 00000008000000200000000000000000000400000010000000000000000000020000000800000000000000000000800000020000000000000000000000
% 00000010000000100000000000000000000800000008000000000000000000020000000400000000000000000001000000010000000000000000000000
% 00000010000000100000000000000000000800000008000000000000000000040000000400000000000000000001000000010000000000000000000000
% 00000010000000100000000000000000000800000008000000000000000000040000000400000000000000000001000000010000000000000000000000
% 00000020000000080000000000000000001000000004000000000000000000040000000200000000000000000002000000008000000000000000000000
% 00000020000000080000000000000000001000000004000000000000000000080000000200000000000000000002000000008000000000000000000000
% 00000040000000040000000000000000002000000002000000000000000000080000000100000000000000000004000000004000000000000000000000
% 00000040000000040000000000000000002000000002000000000000000000080000000100000000000000000004000000004000000000000000000000
% 00000040000000040000000000000000002000000002000000000000000000100000000100000000000000000004000000004000000000000000000000
% 00000080000000020000000000000000004000000001000000000000000000100000000080000000000000000008000000002000000000000000000000
% 00000080000000020000000000000000004000000001000000000000000000100000000080000000000000000008000000002000000000000000000000
% 00000080000000020000000000000000004000000001000000000000000000200000000080000000000000000008000000002000000000000000000000
% 00000100000000010000000000000000008000000000800000000000000000200000000040000000000000000010000000001000000000000000000000
% 00000100000000010000000000000000008000000000800000000000000000200000000040000000000000000010000000001000000000000000000000
% 00000200000000008000000000000000010000000000400000000000000000400000000020000000000000000020000000000800000000000000000000
% 00000200000000008000000000000000010000000000400000000000000000400000000020000000000000000020000000000800000000000000000000
% 00001a0000000000f0000000000000000d000000000078000000000000000740000000002e0000000000000001a0000000000f00000000000000000000
% 00001f0000000003f0000000000000000f8000000001f80000000000000007e000000000fe0000000000000001f0000000003f00000000000000000000
% 00001f8000000003f0000000000000000fc000000001f80000000000000007f000000000fe0000000000000001f8000000003f00000000000000000000
% 00003f0000000001f8000000000000001f8000000000fc000000000000000fe0000000007e0000000000000003f0000000001f80000000000000000000
% 00003f0000000001f8000000000000001f8000000000fc000000000000000fc0000000007e0000000000000003f0000000001f80000000000000000000
% 00003e0000000000f8000000000000001f00000000007c000000000000000fc0000000003e0000000000000003e0000000000f80000000000000000000
% 00003c000000000078000000000000001e00000000003c000000000000000f80000000001e0000000000000003c0000000000780000000000000000000
% 00003c000000000078000000000000001e00000000003c000000000000000f00000000001e0000000000000003c0000000000780000000000000000000
% 000038000000000038000000000000001c00000000001c000000000000000e00000000000e000000000000000380000000000380000000000000000000
% 000030000000000018000000000000001800000000000c000000000000000c000000000006000000000000000300000000000180000000000000000000
% 0000200000000000080000000000000010000000000004000000000000000c000000000002000000000000000200000000000080000000000000000000
% 00032000000000000b0000000000000190000000000004c000000000000068000000000002600000000000003200000000000098000000000000000000
% 003cf800000000003cf800000000001e7c00000000000f3e0000000000079f0000000000079f000000000003cf800000000001e7c00000000000000000
% 00c0040000000000c0040000000000600200000000003001000000000018008000000000180080000000000c0040000000000600200000000000000000
% 03000300000000030003000000000180018000000000c000c0000000006000600000000060006000000000300030000000001800180000000000000000
% 04000080000000040000800000000200004000000001000020000000008000100000000080001000000000400008000000002000040000000000000000
% 08000040000000080000400000000400002000000002000010000000010000080000000100000800000000800004000000004000020000000000000000
% 10000020000000100000200000000800001000000004000008000000020000040000000200000400000001000002000000008000010000000000000000
% 10000010000000100000100000000800000800000004000004000000020000020000000200000200000001000001000000008000008000000000000000
% 20000010000000200000100000001000000800000008000004000000040000020000000400000200000002000001000000010000008000000000000000
% 20000008000000200000080000001000000400000008000002000000040000010000000400000100000002000000800000010000004000000000000000
% 40000008000000400000080000002000000400000010000002000000080000010000000800000100000004000000800000020000004000000000000000
% 400000080000004000000800000020000004000000100000020000000800000100000008000001000000040000008000000200000040000001c1c6f080
% 400000080000004000000800000020000004000000100000020000000800000100000008000001000000040000008000000200000040000001e1c67880
% 40000004000000400000040000002000000200000010000001000000080000008000000800000080000004000000400000020000002000000162c65880
% 80000004000000800000040000004000000200000020000001000000100000008000001000000080000008000000400000040000002000000162c64c80
% 80000004000000800000040000004000000200000020000001000000100000008000001000000080000008000000400000040000002000000134c64e80
% 4000000400000040000004000000200000020000001000000100000008000000800000080000008000000400000040000002000000200000013cc64780
% 4000000c0000004000000c0000002000000600000010000003000000080000018000000800000180000004000000c00000020000006000000138c64380
% 40000008000000400000080000002000000400000010000002000000080000010000000800000100000004000000800000020000004000000118c64180
% 40000008000000400000080000002000000400000010000002000000080000010000000800000100000004000000800000020000004000000191ef6080
% 40000008000000400000080000002000000400000010000002000000080000010000000800000100000004000000800000020000004000000000000000
% 20000010000000200000100000001000000800000008000004000000040000020000000400000200000002000001000000010000008000000000000000
% 10000010000000100000100000000800000800000004000004000000020000020000000200000200000001000001000000008000008000000000000000
% 10000020000000100000200000000800001000000004000008000000020000040000000200000400000001000002000000008000010000000000000000
% 08000040000000080000400000000400002000000002000010000000010000080000000100000800000000800004000000004000020000000000000000
% 04000080000000040000800000000200004000000001000020000000008000100000000080001000000000400008000000002000040000000000000000
% 02000100000000020001000000000100008000000000800040000000004000200000000040002000000000200010000000001000080000000000000000
% 018006000000000180060000000000c0030000000000600180000000003000c0000000003000c000000000180060000000000c00300000000000000000
% 0078780000000000787800000000003c3c00000000001e1e00000000000f0f00000000000f0f00000000000787800000000003c3c00000000000000000
% 0007c0000000000007c0000000000003e0000000000001f0000000000000f8000000000000f80000000000007c0000000000003e000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000003c000000000000080000000000010f000000000000020000000000000f00000000000007c00000000000000000000000000000000
% 0000000000000000036000000000000080000000000010d800000000000020000000000001180000000000004400000000000000000000000000000000
% 00000000000000000220000000000000800000000000108800000000000020000000000000080000000000000c00000000000000000000000000000000
% 0006c000000000000220000000000000800000000000108800000000000020000000000000080000000000001800000000000032000000000000000000
% 00038000000000000220000000000000800000000000108800000000000020000000000000100000000000001c00000000000012000000000000000000
% 00030000000000000220000000000000800000000000108800000000000020000000000000300000000000000400000000000012000000000000000000
% 0003000000000000022000000000000080000000000010880000000000002000000000000040000000000000040000000000001c000000000000000000
% 0001000000000000036000000000000080000000000010d800000000000020000000000000c40000000000000400000000000018000000000000000000
% 000d80000000000001c0000000000000e000000000001c7000000000000038000000000000f80000000000007800000000000018000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		}{ }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
(4.0) FMVERSION
1 1 0 0 595.28 841.89 0 1 3 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
595.28 841.89 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
463.92 468.35 464.88 456.38 457.73 466.02 460.83 467.18 4 Y
0 X
0 0 0 1 0 0 0 K
V
447.87 501.73 460.83 467.18 2 L
0.5 H
2 Z
N
80.85 466.02 73.7 456.38 74.65 468.35 77.75 467.18 4 Y
V
90.71 501.73 77.75 467.18 2 L
N
429.28 539.66 436.52 530.09 425.31 534.36 427.29 537.01 4 Y
V
391.18 564.09 427.31 537 2 L
N
202.51 539.66 209.76 530.09 198.54 534.36 200.53 537.01 4 Y
V
164.41 564.09 200.54 537 2 L
N
113.26 534.36 102.04 530.09 109.29 539.66 111.27 537.01 4 Y
V
147.4 564.09 111.28 537 2 L
N
340.02 534.36 328.81 530.09 336.05 539.66 338.04 537.01 4 Y
V
374.17 564.09 338.05 537 2 L
N
176.38 581.83 164.4 581.11 174.18 588.07 175.28 584.95 4 Y
V
260.79 615.12 175.29 584.94 2 L
N
364.39 588.07 374.16 581.11 362.18 581.83 363.28 584.95 4 Y
V
277.8 615.12 363.3 584.94 2 L
N
255.12 615.12 283.46 643.47 R
7 X
V
1 H
0 X
N
7 X
90 450 14.17 14.17 155.9 572.6 G
0 X
90 450 14.17 14.17 155.9 572.6 A
7 X
90 450 14.17 14.17 382.68 572.6 G
0 X
90 450 14.17 14.17 382.68 572.6 A
85.04 501.73 113.39 530.08 R
7 X
V
0 X
N
198.43 501.73 226.77 530.08 R
7 X
V
0 X
N
311.81 501.73 340.16 530.08 R
7 X
V
0 X
N
425.2 501.73 453.54 530.08 R
7 X
V
0 X
N
7 X
90 450 14.17 14.17 411.02 442.21 G
0 X
90 450 14.17 14.17 411.02 442.21 A
7 X
90 450 14.17 14.17 467.71 442.21 G
0 X
90 450 14.17 14.17 467.71 442.21 A
7 X
90 450 14.17 14.17 354.33 442.21 G
0 X
90 450 14.17 14.17 354.33 442.21 A
7 X
90 450 14.17 14.17 297.64 442.21 G
0 X
90 450 14.17 14.17 297.64 442.21 A
7 X
90 450 14.17 14.17 240.94 442.21 G
0 X
90 450 14.17 14.17 240.94 442.21 A
7 X
90 450 14.17 14.17 184.25 442.21 G
0 X
90 450 14.17 14.17 184.25 442.21 A
7 X
90 450 14.17 14.17 127.56 442.21 G
0 X
90 450 14.17 14.17 127.56 442.21 A
7 X
90 450 14.17 14.17 70.87 442.21 G
0 X
90 450 14.17 14.17 70.87 442.21 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
421 466.02 413.85 456.38 414.81 468.35 417.9 467.18 4 Y
V
430.86 501.73 417.91 467.18 2 L
0.5 H
N
307.62 466.02 300.47 456.38 301.42 468.35 304.52 467.18 4 Y
V
317.48 501.73 304.52 467.18 2 L
N
194.23 466.02 187.08 456.38 188.04 468.35 191.13 467.18 4 Y
V
204.09 501.73 191.14 467.18 2 L
N
123.77 468.35 124.72 456.38 117.58 466.02 120.67 467.18 4 Y
V
107.72 501.73 120.67 467.18 2 L
N
237.15 468.35 238.11 456.38 230.96 466.02 234.06 467.18 4 Y
V
221.1 501.73 234.06 467.18 2 L
N
350.54 468.35 351.49 456.38 344.35 466.02 347.44 467.18 4 Y
V
334.49 501.73 347.45 467.18 2 L
N
0 14 Q
(x) 68.03 399.69 T
1 F
(0) 124.72 399.69 T
(1) 181.42 399.69 T
(10) 232.44 399.69 T
(1) 294.8 399.69 T
(2) 351.49 399.69 T
(3) 408.19 399.69 T
0 F
(y) 464.88 399.69 T
2 F
(MAX) 510.23 622.75 T
(MAX) 510.23 509.36 T
(MIN) 509.81 566.05 T
(MIN) 509.81 436.64 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndDocument
 @endspecial 1890 5841 a(3)p eop
pstopssaved restore
%%Page: pstops 3
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
4 4 bop 186 399 a Ff(3.)46 b(\(10\045\))32 b Fe(First-Order)h(Logic)302
549 y Ff(Supp)s(ose)c Fb(R)-5 b(esp)g(e)g(cts)9 b Ff(\()p
Fd(x;)15 b(y)s Ff(\))31 b(means)g(\\)p Fd(x)f Ff(resp)s(ects)h
Fd(y)s Ff(".)341 761 y(\(a\))46 b([3\045])31 b(What)g(is)f(the)g
(meaning)g(of)g(this)g(F)m(OL)g(sen)m(tence?)1737 966
y Fa(9)p Fd(x)15 b Fa(8)p Fd(y)i Fb(R)-5 b(esp)g(e)g(cts)9
b Ff(\()p Fd(x;)15 b(y)s Ff(\))336 2025 y(\(b\))45 b([3\045])31
b(What)g(is)f(the)g(meaning)g(of)g(this)g(F)m(OL)g(sen)m(tence?)1737
2229 y Fa(8)p Fd(y)17 b Fa(9)p Fd(x)e Fb(R)-5 b(esp)g(e)g(cts)9
b Ff(\()p Fd(x;)15 b(y)s Ff(\))346 3288 y(\(c\))46 b([4\045])d(Are)e
(the)h(t)m(w)m(o)h(sen)m(tences)g(ab)s(o)m(v)m(e)g(equiv)-5
b(alen)m(t)41 b(in)f(meaning?)73 b(Brie\015y)41 b(explain)f(y)m(our)502
3401 y(answ)m(er.)1890 5841 y(4)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
5 5 bop 186 399 a Ff(4.)46 b(\(10\045\))32 b Fe(First-Order)h(Logic)302
549 y Ff(Supp)s(ose)i Fb(L)-5 b(oves)8 b Ff(\()p Fd(x;)15
b(y)s Ff(\))37 b(means)f(\\)p Fd(x)h Ff(lo)m(v)m(es)g
Fd(y)s Ff(")g(and)f Fb(Happy)9 b Ff(\()p Fd(x)p Ff(\))37
b(means)f(\\)p Fd(x)h Ff(is)e(happ)m(y".)59 b(Consider)302
662 y(the)31 b(follo)m(wing)e(t)m(w)m(o)i(F)m(OL)g(sen)m(tences:)1480
866 y Fa(8)p Fd(x)f Ff([)p Fa(9)p Fd(y)18 b Fb(L)-5 b(oves)8
b Ff(\()p Fd(y)s(;)15 b(x)p Ff(\)])26 b Fa(\))f Fb(Happy)9
b Ff(\()p Fd(x)p Ff(\))1480 1004 y Fa(8)p Fd(x;)15 b(y)j
Fb(L)-5 b(oves)8 b Ff(\()p Fd(y)s(;)15 b(x)p Ff(\))26
b Fa(\))f Fb(Happy)10 b Ff(\()p Fd(x)p Ff(\))341 1216
y(\(a\))46 b([6\045])31 b(F)-8 b(ormally)30 b(pro)m(v)m(e)h(that)g(the)
g(t)m(w)m(o)h(sen)m(tences)f(are)g(logically)e(equiv)-5
b(alen)m(t.)336 3725 y(\(b\))45 b([4\045])31 b(What)g(is)f(the)g
(meaning)g(of)g(the)h(t)m(w)m(o)h(sen)m(tences?)1890
5841 y(5)p eop
pstopssaved restore
%%Page: pstops 4
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
6 6 bop 186 399 a Ff(5.)46 b(\(25\045\))32 b Fe(Logical)i(Reasoning)302
549 y Ff(Consider)29 b(a)i(kno)m(wledge)f(base)g(with)g(the)g(follo)m
(wing)f(four)h(F)m(OL)g(sen)m(tences:)1309 753 y Fa(8)p
Fd(x)15 b Fb(Engine)-5 b(er)9 b Ff(\()p Fd(x)p Ff(\))26
b Fa(\))f Fb(We)-5 b(althy)10 b Ff(\()p Fd(x)p Ff(\))1309
891 y Fa(8)p Fd(y)17 b Fb(We)-5 b(althy)10 b Ff(\()p
Fd(y)s Ff(\))21 b Fa(^)e Fb(He)-5 b(althy)10 b Ff(\()p
Fd(y)s Ff(\))26 b Fa(\))f Fb(Happy)9 b Ff(\()p Fd(y)s
Ff(\))1309 1029 y Fb(Engine)-5 b(er)10 b Ff(\()p Fb(Peter)g
Ff(\))1309 1166 y Fb(He)-5 b(althy)9 b Ff(\()p Fb(Peter)h
Ff(\))341 1379 y(\(a\))46 b([10\045])29 b(Using)d(generalized)h(mo)s
(dus)f(p)s(onens,)h(pro)m(v)m(e)i(that)f Fb(Happy)9 b
Ff(\()p Fb(Peter)h Ff(\))28 b(is)e(true.)40 b(F)-8 b(or)28
b(eac)m(h)502 1492 y(step)34 b(in)e(y)m(our)h(pro)s(of,)h(sho)m(w)g
(the)f(sen)m(tences)i(in)m(v)m(olv)m(ed)e(and)g(the)h(substitution)d
(list)h(resulted)502 1605 y(from)e(uni\014cation.)1890
5841 y(6)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
7 7 bop 336 399 a Ff(\(b\))45 b([15\045])d(Using)f(resolution)e(with)h
(refutation,)k(pro)m(v)m(e)e(that)f Fa(9)p Fd(z)19 b
Fb(Happy)9 b Ff(\()p Fd(z)t Ff(\))42 b(is)e(true.)73
b(Again,)502 511 y(sho)m(w)31 b(the)f(sen)m(tences)i(in)m(v)m(olv)m(ed)
e(and)f(the)i(substitution)d(list)h(for)h(eac)m(h)i(step.)1890
5841 y(7)p eop
pstopssaved restore
%%Page: pstops 5
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
/showpage{}def/copypage{}def/erasepage{}def
8 8 bop 186 399 a Ff(6.)46 b(\(20\045\))32 b Fe(Miscellaneous)302
549 y Ff(De\014ne)f(the)f(follo)m(wing)f(concepts)i(in)e(y)m(our)i(o)m
(wn)f(w)m(ords:)341 761 y(\(a\))46 b([5\045])31 b(A)g(complete)g(searc)
m(h)g(strategy)336 3270 y(\(b\))45 b([5\045])31 b(A)g(complete)g
(logical)e(inference)h(pro)s(cedure)1890 5841 y(8)p eop
pstopssaved restore
/pstopssaved save def
pstopsmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
/pstopsmatrix matrix currentmatrix def
initclip
pstopsxform concat
9 9 bop 346 399 a Ff(\(c\))46 b([5\045])31 b(An)f(inaccessible)f(en)m
(vironmen)m(t)336 2907 y(\(d\))45 b([5\045])31 b(A)g(nondeterministic)c
(en)m(vironmen)m(t)1890 5841 y(9)p eop
pstopssaved restore
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
