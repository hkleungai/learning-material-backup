%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: SMAWK.dvi
%%Pages: 27
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Helvetica CMSY8 CMMI8 LCMSS8 CMEX10
%%+ Helvetica-Oblique
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips SMAWK
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.12.07:1038
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E9330253242123300FC673C8BCFE359BBD9
53AD5F3D9983B036D9202C8FCC4FA88AF960E1E4992ED4D358A43D0B625E7B8F
2CB5599132B9E31EC3421EBBF4BBEE085CFDD794E0B4B694DEC1FA0F4659EBB4
8519781FC955ECFB19C20E94CACA623E755471ECCF677190C3C26822E97567AC
2CD723A5F65DE62EF0E103658C4E94456BD12851C89BBB7D042FDAB8B6D01DE0
7B930D1F63DCD59628371A2EA482EB65A6BAC43680C3148D766790C3459852A5
9AE9366E469C85C6FDC736CC66E8ABB2577EE311B14AB877F9D83F5197B8EB9F
69616AC8A737229D6B73CC2948C5373FC0ACCAC58FE2FF0758D1A951A4BDC1E2
4A51E6E2917446A3FA3B29F5AE40D409AB9C2EB99DC6C053183D99E7E4BC3A63
061CA66FE1D4726AB19C12F24385F38CACCDF9BC61E11FE7D92563CF58345ABE
97112183C20A666178C224E9FCAD01284C5FDBB4C9AE44BECA4B3ED1092E9C44
BF321051FA9F874E54CEC5C430A40302E9883CD4553007B17BCFFCB8FD8153D7
3EF522E8164B7E465F6AEC6A469B01F5BC692B91B7F9D845FBE3E35677A3EFD0
46C113CB871A97EF7899B88F7F811249224F2A1512BA6FD86927024C51600F6A
90B21C3957CEBE385BAE97F43367206A31F695B9894E9B0B5A955A6E2F0EFA90
D15E351178DC62646C5B49F23C741E71D7BEE527669FAF4C97A07AD19FF95C0F
EA9FE93FBD65023789F0879B3BE39A527979E9ACB6846EF9D788D090E9412271
5ACDF4D9611F55C4FB9B6076099867E1DF6DB9252D7A42F493580A826032C344
EBFFF0DA39EEE638999BE549B3FE4E41C7DC65BC64EED28F5234E9ADF9060C00
3D009CB23F64945000AE7517B5CE37D494E4B4DD147EF272CD217E6D9A43FC01
632663CEA6A77D4BD74D5E157D2662F19F7FB59A5B06F3E8F08CB66C170C1930
231EE42C7024E41099E783713411585266C6CDA9F29D7C1E311AEC526C6CD193
61E4178B802F9D247B6CF5DFE5F552955BF71575F04F8FF2B080D14032C885E5
5733338234F4AFFD93EE5168AA7D8961180308D14DBF74E23EEC25FE36CF19B1
B097052696C148217B35F5E2FDC8663EDC53C5DF12B0FE92E2BD9F28F967A4C1
9DE21BF402DD913B7787DE380A838ACB389ED09C289A56AD337AF424FAA23613
3EAC6C257F7DAFE087FA6BF4BAFB93675D60DC90A6FAC24131602C9410504C3B
9D36CBC6DF717C61EE0B84849034B41F7F4D7090288AF8A040183227CBD6F9B8
359A68121CD752A25DA8CC47595FF9079ACB55F74B9D057DE07AB07FFCA1AC2D
09F2A0663E744C55E64D070CE8F23C64E3DDC456E1E3D33C6E9B9BBD9816EE5C
82F2AC2B7FA525E1642E14608F7B88A42F7AE8C7F315F6FFE060A2C2068C696F
1D84EB010DFF572EA390EDF4391D00130553B2D514B87F3B6BB8A516D04197DA
E2BE741D36935C81C48B0AEFD394B40E03D3CA82D1E2383BF289D8CE7482E27A
A9DEA2C835F5E309B01DD18791E241C68A21C5385D54DEB956AE06CF96D7034F
8DE9EBDA5B05D76A0430864F355D13101CB165108F76C53DC1C50556D9954CF0
C167B9AF136357F4CDB151644A5655FA7681071CA4FC79AC9BBEF4A56A3A8301
14F456F9D97E375F43DE509BB9E66E3C8188D8B6A6496645EEA048648A18E3ED
E8B9D44F06F5721C136A7E47B92C04B2057F726F115A5238E3E8EA675809156C
4A8719BEFB80136FB8182390841971E1244F2DE08C8EB179314F4DD7E38BC6DC
752086FCC482B8C04530A9095C7ADA9CAD645494C67F233E594F3C2A3ABD6F77
C7A84CE9621B8CD85AA4C8ACFFE9863A2F665AB2B0C6B5CBE44BCC6C5800AF72
44B879B7875A03F65E289BE8C65B60FCFDF5D597B75CF690268ED9BCD7F4974D
98F0EC805481EA53AF3935D5593A07BB980BE1574DEEC77974EFCBE1D8E1945A
D394D81942CAA90A1ED853B2B83A4B808DEA6CFFB90AB112A10CD1BCBEE9C083
17876521BCDA1100FEA5BE994229E6526BE069141EA0CC1D4C13F14DE2C35743
9F443C9FE884200CF6E9B167367BF95928D7572A3299E72EC515E63C2E60E4C0
AC8784A90273460380CD23EF59C151D8B591F82E256C04B70062CB522BD24404
301A3F2A5B19DF3DC43B408C972C165DD88E3B26538FE3CAB16E82D62777A2BF
BECE5537223D5DF332FE41D4D5F71E141420C8109F90C7A3D61B5828AF255E8B
EF30DB0666CA928D9E2C54DDFFE19684DFE3F41C4C21D323820679E8428056AA
CA05EDA2339882B09E6C76E1A8B6004AE42037D078FA1DD319E3CF009895BEB0
6844C1F7070F0BA093D7AB41973AEEF6CAB426DA07489CBD2805CE045CD776CD
0C87C0A55F69C44A1F0ECEF77DEFD8FBAF674F69884C408D3C298ADFE07CB502
3100E456F69ED1E86F4FCD095A428C558959A6709929720BD2AD46DE85DB7CF1
89F167FC0C98734AA62569DA027197D1026708E87603ED925CA1FF098B62A9ED
07D6C79ADCF71736976B90DB68206F84FF52E2AA9989CCB9114DD69DD71069B3
A896E4A46707B37CEA19236E5FA8D44F31703518DDF8D9D1235B54DC52D8C6EE
CA236324E75D00E9588CABEBECEED84BEC042F3ADEFE4736B2CEC92AC6E08E56
7922A6A794A5C65E00F5A7C328F0F5F025AC53F60733B4133ECBAB7BAE85CBA7
D0BED843E8459DD2BA4C0BA0B497C892D3B1DF8CA8AA18E1D77BF68602E1ED29
D076619FF8DE374B08AD39DA4F95430429122A57B812D8A1EE921CB913E3D56D
2231FD467709318FE113F38088FDABE6AEA6DB28735A44805943BF5F25F19777
B0DE9B2319D871661936026E3B85D5EAE78C1107F2C9A3EE5C4D962F9408CFC7
EE4E597241FF7F4524EB9192810BA141547FFE18923E1EFEF57B96ACBB78A4F7
BC6D78B4944493F0E981A29E499D50664149FFFBD2E984CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LCMSS8
%!PS-AdobeFont-1.1: LCMSS8 1.01
%%CreationDate: 1992 Jun 07 22:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.01) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved.) readonly def
/FullName (LCMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LCMSS8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 126 /tilde put
readonly def
/FontBBox{-87 -208 1285 857}readonly def
/UniqueID 5029034 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169B077C51B8CEC58A64F93279
93461255C3731B4964C586F0ECB1D4C4C11A8DE9455681C3D6AA88DB5D5CB0E9
E61D0F2ACDB447F7E49A41DE0DC2CC77A92307FA6A537D9C89200285DCECD31F
7A27378A7C8FE034B7D97170D6726FBF822C1AE63089907009D50CB0CC866635
3219425C3FB9C4F5EDA7689F91874E7A4EC808BD8049E8A6CFC64E302287D4D5
B644489738732002D249E2747E7DC11795BF966921D2E61E0C05256B71694853
290DF3A86D07AB423A0CCFC39634293BF07D3B8AA140A9B12B291454BA7BCEB4
F0EC576E89C8DDCCA6449C94AC2229A8D64B0D26F811A0B0DB8913A2524051E8
76420339699D91F262A1F227C82E0EFE4459F4B367B0820572700FA5D89884E7
91A29A7048089836FCF88784E64AC6B6B19B55928AFFBFA5269A8DB8AC9506A8
788C8C5508CE0DAD2185EE7E2B530374C21B8800686D96862A621759E2984DFB
FEC6ADE490672F0D7F6814525930961A841DE5B002EC3DD47EAC6C35ECCB29F6
A9FE3A5900A6CFA164066FE572C0C9941EDEEC5FB4059D394461AECD3639DDD0
4A64579AF5E545CA5A5B5AAE2459DA49885D00B7EE3DD9418D6FE413B5B5A6CE
31FF6DD11E1533D94899DECDA802056546C95B1401114C88A8756AE64EC7E4C6
13985ED6FF61C00AF5F01079EB583386462E197376A1025400B0A6156AA3F0D6
755D8F26B2E4CA7238202CBC9DB2A2A972759AA069A41EEED25AAF2A77A9A9B5
5CDBF2B3FCE985ECB47DFA88D1BB317EFBB6376D17E7295FD94BBBFFB483B8D3
6C355570A70C393231DFD03E5770136A2AF1645970BD173AC93C25E2D8480C0B
0AE863CE6C65AD8229A26274FC87C1396D52626148D52D1FF69A3254F3564922
9A3C6C6381F43EA3C9EF2791C38AA55982298CBF7876D8B1E3590AD39152BDB7
AB0494A44E72EE6BA68E728DCC5A9D8213317EAC7B8828513DAA2AD420238604
602AD9E59FA747FD440979808AD33BA7E80714AF30881E31124BBF7C26F1448D
6067FD977D6840CAD088D6001776A36EEDA82751FCAD9B8A905CE4379BB75687
2B9299D064531DA3A368C1CDD5761C09D8D4C0EF979450000180986725985F1A
340E5B1DDE7EE21E15D5CA7641F17403015AF5D77961D03B5708F688ADBEDBD6
386F5F8C88B1C4EAB649F53E9F6C47A57BACC8D5D89D5AD17685665B92476565
E144D864A897BE3F24568E1ADDF463A9661AB56F894F2F694C3EB2951FAA90E8
492F8E8F374FC5A1C33B99083E39EE775C686F4FC36F22AC134181238E6010DC
5C8081CCD1B67E6F133A8F2054525946582668970A20F386B6B4B5DAD472D9C3
CC78C6E770FE0771701679F6B9E7B02953B85F7E9AEF166810895EC192130EC2
10A64E5782A2BD0027E77827FCF1C6CBDA8CEA5ED5EEF1077C6E11567F04915A
B58FFEC42BC6469C47B2F0194F460DCEE0166588AF57D1FEE2AFDC2BE480003B
A90114A6F885C0759A86F30217B6B278A025ADFB1BED762C0D43DB6E8CD29A92
7CE32C4F35DEEB728CE534B154B49BBFD3FD84744793250B2F757F2A0EFEAEEC
DB7C6D89F7AF220BB33EA015E90E85E7DB4239072D576DE250580A8A3D1AAD15
534EE8588B72D16B69332F1C88696D369AA960F751CA7E0487ACC2704C5566BF
23BBCCFF307E6446E1618A43B6965C28D5E20A14370F7FFB8DA6D09586930677
02F48FCCB1FA18923175747B0474A6ED667F5FC0197740D7646E8888D952E1F0
85557FE2FD2E4D03FA44A79CC106C83BA893F70548E7007EF4706659305303D2
69F0BE431A4C6D88B3E19D7DE7EA695FC6906FB2EC82ED04C1E68D742A4CD65A
1CAA4D529B82894235D7BA236A0295450B4CC4961498E41F76CF63B2571D154F
0EBCFE408EC39B83C8D6DA800C4A563C21723760D43A52F5CE59A8703456908F
27A0BB42EAB12674073BF5746284219CBE88E3E119DC046E45F3103CD3137129
954D5DFD71DEA430D868C9977D4B2CBD8B74D2BCCAED9F6F6BF9AC34CF2FA7B6
29E34BE986C6CEE4BE77C21CA02058A2950812DDC4737F201B1D1A2B94B0880C
1B3B3471985E9CF07EE3E7EB678E30A7F9D0807147437C52E2962618798F36D6
0FEEB015259468117E87898D9E984687B008318BE28C7F169866F5F14FFC596C
012E14ED13B2D41B0C44D715A761AE185ACF46BB46061B05EA4E469DDF20815D
FBD3A2C6BBAAB46C1B18C7B68BE236DC6EF8D97151E1548F4B9F6332963EBE3E
E19D02A6F174F35DCFC95999AE14C862952F9B85A14F4D39E885552E9CCBDEAB
06DFA25FBD9942C81618D938F8CFEEBB4D19F114DBE0BF6232DDBC2D76F24D24
96A2D8A252F83A3D3645FB482BDE2B1B7EEC57F1AB86859F6A96D30AF0E37BC3
954E2263875FB982D61BAE5AAFD7DD30C5D33B43878D0AB2A78C85D8E5908192
7568586EE9DDB7273325814DC64DB38C19E6F60F3490F5B33D36390D07FC88F5
00FDA59B2A7A6EE2FCA7EB85345E3733759A18541F30A8DA9230E5EF265C6394
F59AE8E8342EBBF60157F8E7A6DD74364FC296798C20D4D683E80FFCB297BD6E
718FBF4B43F1B38BC0C29337960E72265597A0C6ECB38E7319E23AD1A88AA5A3
12CBB41B160B5643FA3D6904CE2A06601F7D7410165049AE26C73F0D7CD14E5E
E69CFD5C66EA8B38D93005ADE5B43B91B1B0A60F8D43F3E1DA0E676B05F36BA8
F47E18254A4CCEA6ABD8D6FE83BC618A29838937E400C0F41D59A6794906E404
7CB4497C7C48911B1E7709C84564CBC9527E2B75816623A6690436A8EBED5488
11EEF9408C52AF3E8890C8216FE44057C7A886B6C0DD8238AA890124716B932B
6920D36BDDD435F9B32BC32CDBD03902B10F33B04CCCC6BF3FC3977ED8269195
617451EEFC4A97074A261E37CB7E4E2DD1EA60D997098EF02767A99852BDDFC7
25C78AD0FE85F452FDBAABF5BEFDF14B5BFC0D4A7078EEA7ABD3866FD79E89A2
206B5290E4C36DB2A77D45E90A1B62FFDD572ABCE828F863CEBA91648797C0BA
3269BAC019BD8DCC834D169138A106067D63038D878ADB1A3009986E127483C5
E84935B1CE328F5AF3B81D607CFF48B4B12C37D101B5C7316EA8A61E89EF2A34
DCE38E4AF248A37D5388204F5B047F1BEC62B42918D3E0D1953EF0D375830A4E
78027E173A54AE32B8131170816ED470847FCFECAF4F0BDC989DE1FB58234328
1D7D706859FDA9B4D22FDAC90F88AB80EB3B5FDA67685CB80E80B099A40492B8
9E8E027568C6266BEB3534372F3072C2D860AAC876AA1177F7DFAB27796FBB91
DF0A84D9D3A67139311B35ED61EB4D374EFA01F2E6CAFCE5E889E049C0798ECE
D39FA27532165A1E2C2688AA1AF5D0DD3F47892B90F6289BD42332DB8B1537FE
6BC492E7ED8370A7E5891C2384959D62FBF47978CC021BB89994A84E60480B36
E579ADD586055C2601786E5D0918FAA6EC70648A2A9F75950D0B34190870E37C
B9E2DF429D0C8C0466E430ABAE96EE9D272B4B7CB86D0BF333A10C725B335D08
4F7A0DA42D7193D46C41C69F27FE28E9DFC45CD381DD9ADCD9F67343D7982F63
F235C1D3E08071EB16BCD219F5CD686327E108DF1D67753519FE31C508A1CFAA
7CB7F11C376017C7C05EF2B7C5742C44CEFE48879545C9C30D7BB770C6F82604
8C7B2BE6625B43C3A59C947402BB630B2C02DE2198226EA1F057742DD8D0FED3
67A92A5AAB70377B33EE3C2FEA93590AA1C87F5D487834E9730D5C9A103F89B8
FAAEE1CBF045DB2DABE90A6EB8E4E457A655715065744536FCE5DBEFC182518F
2D2D05EAEDF0ECDF0C185962C5665D53B274979F608E86FCE50C4DB0FCBB92CA
8A687C78D3716B7BFEA7BBA005EA78E1DD00618A5821532F27C3D6C60F45E224
5CA905D66B4807B6952D97D3B6EBD9BFC7300112E5B0579435787BE98759338F
30E8F79BCB1BC471FAA3CAB5AEE559DEB7157160783BE18CCE5AF305D199AA6A
85B1921A40D972F5D221D0696A4C129C3DC088CB2C95FC23F52CE04869A7B245
D774299FDAB37DB979DC08D5B0B96F9D37D5BE22F6EB153526D010758F652048
D6D91EAB76E42381058F441F345E29D91B9B5DADD64BECA2FA6526C5A3C15F4E
B01603248C4EFD1AEC5104E8D2F9BE0BA2284CD5D608B83357E40913ADAD6D50
2B9F3FECCDED9A1CCD0D9AC3FD708C3522B7CDC0550517B1605BF29D485FAB2F
1398BEB415C79B2FB32E6B9E0CCA72AF9C05DFACB165365E4B585CC2CF776A24
E7C3C300C217DA6520FDBDBCDD6889A1CC9D3D6EE56A61E248457A0A6AA9ED00
CA1A43436D3B6DC2F1C142365801C78667686DA724803849BE30769B2BB32582
5C3B96C069EA38A1CEEC1C6BD33696F69D7E7FAC4E3869E7357451753A546C7B
41ACF9EE2D929BB5900A3C1E64E77171FFC716CC988EC2B35166DFBB08496934
69B1C2226C6864D9346E3F9CAA60C2AD47A80E1B0D8671EE9884936CA7706DCE
FFB9352DBFB44A6C7209CCFB9E72EC7DC86B43F29AD689ACBC0AC8A17F778F0C
3D9F23D6C226B1BE73256D4EA578CDBD8888758524EDF1865B019D29AFBF74E4
8381B4DDA95700A20C2F4E7C11382238471913F8FEB4427F58073228F6DC9EF5
7714CAEB107B3D99AF4F55A24818805A424AC0FA26500D830349E1EC2D8D9501
C5F2C0C6E6F7E8B6D99A58FFED37938CD353B0A0AA2E2A41FD3E88F26C55A730
497EA20FB3837A63B7B2973A03613D7CFBB9AF5DB809E470AB343FB7C60D78CF
E688960E654819697D23611198158DF7E0A9118B8368CB12946A325B5A6FFC0E
BC2D312B310F4F9CE33738FA14E9576F9306B05F82BE915E5CC12F0E32815E3E
61D589744D99503CD1A96FE15C5F31B06AB02B1E2C7813A6DAC17A60A8BFCE29
8E67849B6F3300C61EFC3BB4017EB85653E4422B41B30EF0A4155420CE6A1744
79B36489117CB228AB74545A50B3C0BBD563E00849322602362B97E0BDC2159C
FC93DC875C7DDE391443E1B8B2A8711BB0DB997421D4C57D089767D44C2ACCB4
3BFEF38DF44840248072BCE877CAC2419E7BB7E98113F9079644872CDD5B360D
724847CC19F9483542B2D50AD275E1F8FB9CCBBF1F9F4366DE6B98DC28EA79BA
3225D5D1D7E02C0F7B88E1DD8C3FC28050FEE0FFE69B98E7D1A5B34C1AE3D5B4
14F99BC43272227A9D240FBB5AB1010A8598259113FA7A1AB95BCBAC72321C65
A343BA4094DCC928C538EB29C60ACAA05E680076017B78DF07A079E223CAB349
D43C21E2318CDF492F158AAE995E414565474041FB19C2B310B2235F94F8B5C6
9D8F6CA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD389FD24494D365D62017182ABEBCC79E7127AC417197B6109301EFEFD60FA3
94298CD8A0CFA8861BE3814E05368B4CDD4ED901F4CCAA145D0C7A5A6080618A
96D5B23FFA9F70DCA3BC0C0C9B9469A96F50117D57FAFACDC9F059CFD81B50B9
A1654593E5FFA2E906F3C0B6861BC85CEBAB83464F26C049EC0D70F25DC9E399
FCBA99C4E026953949028A6B7E92E0A9F922D3DBDBBD07DA1B1C76BD1D05ADA2
A309199A8C278B6CE76AA34ECA5FAC0370469626C0114ADE1B875C14839D7B00
BBB91354C05754F90594BC2FB12F81DF79A3672AB45C9A524EDD7686864E433C
D3BCCF432E85EB56789BAA095F7C0224011A7DBF3DBEED22A6C6AE491C0B049A
A421015D30FFE9B882FFD61BF5C99445F2979881E0019C3FD33CE9EF13527348
9E7B041309D7323CD728B29D273D64CC94D9C484144148A9785DC73C8F0EF0C2
4C172A87D178F067F32606B53B452630DE164F04D315BA6B58F2C34BB29AD7AC
CD34145A86D2704380ECEB0A96B585062077304484A57EF42C86AB466B8F8A8F
B4C1F24E2B1011A8CD625A084845B9B9D88D6F3041BDBE6E1A97EEC6F8DBAF56
B264D73BA149A7FD2554B33AE09689764C439D85C060261619249AFAE987EA6F
1B11C2B82D67D0EB30BB809F74C4A9A63BD7F4A3692462B23E908C6E43C7153F
DE1DBAAC27AD659888198ABF7D92429F192C9056618EE30710CFC6E459EE3BF1
33825EA9CA60ABDBFF51EB9BF3E9C11735F3BD7A923DDCECEA4512A196830510
EA03183E8358456625C33578F264CC37D8B9CAA4A7DDDF43D89F7678883680C5
CB123DC0866D2E31122D47195BA29A8F9E0F0649F61CD826AE69C175D459E8E7
337CFCCAE7491769FBD7C89C07EDD3228DB36CDE5CBE306B1993D2B0CC2E8DB6
473198D0B2FAEBDE33EE34BD9240084A83CD606EAF7583D25A2CA73DA4B4D525
13FE428D531519EFB3751FAC280398708BD0F189AC429A506FB4EBB6C07CE59F
F0558F05CD060EFB62411C145FAF0C9192381DDAD2A6D165310C2F4E9DC12E85
5E3D119CCAC8CBE73C62A5DD10553E06678B9D05B9566A88FE9942CC9FF5E00C
3C4A67818426CF6DE3D3A73242CDDC7B79DEB7F279C5608AE3C98E2042273F14
5E1B3D5D7304E16F535C0BA8E149681DEA0051BFB61600B406574A99AFD3C1EB
5E8B781E2070BCF5ADEE8ADC0F3A10615C3E418B24737688B4C07FB7183CE04D
9DCB091CFC7FA743E4D81271CB6091FDA0CE276642B362DD9B550B7244EA735C
B38D7A2A0847D8C27590277DCDD88EF4837D8B446C08BC1CD423591C73F96BF0
21F8DE32A4EB2AECB904216AD1ED3BD40A10563464333B19D7AA266D009C1275
15D04F047A3F3F47F285B33F0B182B163C0DD1CED6AC7A22F8DF0EB1F988A3B8
0C358FE6380123A6DC89907C24AB7E1519F954FCC0A306A72AC6C71E7BE0BB88
6F98B4D810DE8F3BE9420CBA0AA5C4D27F78B95F2707A52DCB13963376459619
A93112FFBA6EE6D1FF93949E8901B939C7972A2A55C8273242E36EEE27509F9D
C91AD23C70DC93A4F75FD936523173C5E2A4D60EB9E4820FBC45B13BFFAAA46D
C4B530CABE465890AB4CB4CDA6D5EEFE8BF106B93BF1AD2E397A33B796F849BE
91C2C0B7EFA59FF2642C5AE00EF19A0C3F2E040BAEE201E2FB46805EA66D2649
D93FC7D12E828C508436199F41E858B6380178A522969F199BC0A646E71E617A
55E385FE33CB32CB669948819E85F6528FD0C2C91F26C2E3F24DE3AF0205640A
5E34883B950C1932F303DDCF94A19EF44C2E59264B203D1363F2671DA1628F20
B11722F15C39DB2FBA99486B0E49E9949F0C29DF726A09E53361EA36040C7D85
52C8DC32382753A6589C9EA5B2D318EE35B2229B9FB865C9F1FFBEA1BAC06B9B
05E3208609522B6498B816063BC84628F1169FFD4739F562260798A62764D1A2
496ECEE2415203707EC704AE7094812AC6BEF743BB5D5B65F0FA0F063674BB69
A47FD17ADA9FC0D0992B1A43C5FB8E6666F62DA5A18272076F85FD1CEDF07105
8EF6A4D839A0EA9E08B6EAF1ED5AF5BB783B587CFFD8CACAE46DCEFCEEF75428
CD40F610FBF157CA02360AE25574995EB243667F45B298B1D5242E7C62EC2FBB
721EECFF3D49215BF2386D50E3843B9760D8861129D8E7E53A5A76B57A7F35FA
5C130B6FAB56C682AD63836FCDD111FBF6DEEB58B19FA84AD3D5E1AD382B2DAC
F1DBF882B8BD1069EA9281724F0A8A93C3348ED616871F63956078B970FE34E0
45BB31A5897103673FBCE4322EE8BE70967477CAD36D87FB2123CF26FF221764
EA33F2E20903DF316F7A58F6948E6BA0421ED99B3583BBD3BA860AA23278AC0F
83AFAC47F0B243EF17201645E24E333D437D0B86D128BC91B2628DA62291499F
D8D1E4C20FC5BD07BA8DD99DE5B2BA0BF85D206E36428E61EBD21E576F14B9D9
F6CC18DB2102DCC9ED8D4B2EC6A8ACF4EB049FAD5139DEF8959E50D4C146C9E1
48FF5FF3E37093BE78642BEC9C84D2C2489B03A7D3CB845F8EA2108ECC9504C5
F0A66F340FE8E676938186B41E3549F10E38394AB0389CF0FFE6D5E57C564BE3
4088D7215C029D61BC4534FDC5AEF9C4A4267F4E7733BBF2A4BBEF57F80460E6
0A79CD3596E3C6AB83B2923056082D908901A0BE225E14D5A01E19BC098DCF7F
258CC0DBD264FE1F1BEC521067655EA26A018F1CCE37F3D7D92F4045C63A0D84
22F9D8830C072AC9C8309590119D2750A2FF6080808475B065ED9A55F41E5916
9D8C7FD58A674F2B5A41387086363439996B986420833C46D9F354F839A609C5
0FD60C7646098A5A648E3385A935661DA351BB0D3004DD85223414A462D079A9
456BD0EEA814DB62C710616846F8334938A9AE4700A09B4916121E4994CB4262
447F10BA05E5E1D25A0DB455ADCE07FF984A6579189731F39E6EA10EDF6388C9
B95C5000B6095534D888D1A96EF777CE033C4B6BA80091D16C044C966EC162C1
89AF670E1D089E34AC5F395D7671C756AE42838F54F19B8C9AED0BD42A3D00F6
C5063209D403CA7336E2FE959FA46FBE4BDCDBE874792675622A3D12E68BD1CF
87806BC6E93CAE417BE416964BDE19850B8ED657BBD115824819B5CD513E9EEB
762C8EC2650BBAADEA81837C6F77CC4A5072998346CF1BBDB6D24115CBF8295C
EB0DC8367F3E0D1CA4B42EB879A2F396974772150047441D50BE0A3A3FB30467
22F9A419C4811879943D3EBBDAEE31046601CEEEE83746C835D118982DC36FBA
CCD4CD65C9D4C628480CD3CD8B26DDBF304688A93F60CB01BF287A2A4FF7F561
E33DA54C22EC065CA824F8BD88082AD8E1F9B1C15B927E95D68F8FE7BE203B66
68165926D2A45652F407E7D7334417FC75788A31FBB62BD15AEE3C080DF416D2
4CFDB628B044209A7ECFF6AA4ED15C2473AF959EE4C8B3CBB80B9054922295FB
82B3CC1AC13A4503581CE107866468423F62029EACDB8897A7615505F78C1D29
4005D634EDE118109A7EF9D6F598B68AFCD8EF2916AFFAF5F34CC4924CADFE3F
B6CC2D67359637F63097181A6B88F107FA97B879A8A7D3B40BF6B10F5EFFAC00
705F941C14B0EF9F8A782E99858BEC1CC17311567AD26D50DE41363DD78B57A3
552F8E51DDB1C1C99751D79EE18E5EDD7B5B0FC14339B7A9923DAB2D5B67823F
4F7419F554975560367A30C4A28C133A49798350709C6145E553B73BE1384B7F
D31CF6C004E1F3AA01DEABAD3A09D193E5ACC4C480FA93637E810E8C3199B52B
C4ABD9E320D9E315965526E9932C5674489E3741CCD8769973ED6E7640C1F25C
BA1E26A0770BDB0649D8C75FD31C4E55E3BF5FB0FCCD8218451C6F3D75EAF35F
A751ACDB73C57D88FEF118BAD58166E36372A6AAA184813E7D8FC538ED740C5C
A2F238F6A12E9138691D59296E0D50A59412A1F05A1FA62989457760A7A21A65
5D68A0EF27878C7E11F623F0EECC9F988B333E298B276E689F0DE45D9C51BBF6
3F03063FFDC5FEFDA764715B78CC549E15C338A5CBCD1EC83B4D98F3BD3FE50C
7B1E8AAAE2C0BC39A515109CD2F9C427C1C632E3F8E0F51AE1B0A927EACFF766
5891E075909AF2319CC5F43F36172DDBCB844055C3006FF06B58E3733E6D2907
979B9AA8B9B08B608BAA7A1D7D38E5FA73466BD570CF5D57135FBEA5F967CAEB
C73A850452AFACE33468D680E4996647EAF4298A33FCE5CFF443F659B10D289D
8F769ECA338019129E4C5DE23052A15BA612A778692D678E9C700F06BDB27D54
B2813E9F4B56F942DCCCE09B9C750C8D204342C59C90D7548D7A1F30F7EF390D
4670285EE1CCCA8476D07C0621DF9A0D4B704250CE70BD6B244DDCB09A15E5C1
D01AE867A7EA426C53830BB3F9B9FC43CF302A6FC49ABB07E3C0AC18090F632E
45D1FEB52B1430CBD02492501C5016818FAC09601F498694AEF635398EFCA3AD
AA04B5173B620CF4C73E91771D8E94DDC499E0B7034CD6DFABB4D0CF24BF4214
8BB4A66EE2491306DDA1AEE561D8A952AC65F2ABECC31956C8C6FFEE2C1927B0
B3092CD0942978B37C4C00945490715E843966BF9BD1FC41C37010F4D4CE619B
BFE021BA6556FBA84B865D063C46EF78A32027954A499F521F4C3CB05AC15D04
A237D020FA249928B2C65D49937AD7202CAD09E89DFFD782E7F1BC5E7A6C349D
F09DA1D2AB5B28E2B76E993496CBFFD8E96C35A5FC4DA24B250E49542788267C
A322B8324EC8E9BBFCC1B7375D95994629BC520C432ECEC23CF487C5444F519D
E5759B024DFDBF6CDC1B6BF180406B8F5AA800954AB05187EDFB3EFC08BB47D9
3041EE286A5A5373881E12DCB2B86F5BB60BD6B9D73553BD269448ED0B7787AD
622EE025BA7D943F7E5E89F47DADE5EF2FD6CBC0566230366A6A6DA11FD4F692
2CA8D9C6AA352F2D65CB9CA98E25B0944DCCE1E7142010D0A0E756577996FCF8
BE372FBF7298B4812CA6CDBBDB9793FEAC219988977D9047856096525D0FFBBC
FF5D0C3EF1BE2B2116F817DE4DF946615692A75018119E6AA3857CBA116BC099
6CDB16B8003DCB788C6DA498AE02DC6FA706B457FBFEE7DDAFDC134DEC5011D1
909538951F11AACC70AECCC92B83CD24AC56104DB67716B318EA02A22A421C9B
1E514173E94CF1687DFCEEDCADFD64F1C2F572CA8C62D71FBC67AD8487D90976
188C13BE3461EEF6BBE9BA6D36DD939CD1252F18BDE3E4E28155F98931E993EE
ACAB63CB831408FC0C4FDC5B0C083F889D3E512E78C8152588394260A6BEAB69
5D65D7FC54F5A2F62FAF965945E15BAD5AD226DB1A54C49CBC1DFC66D7558FC1
B99C3C3D302FD02C997E47E9DC8E8B3CD6AA9E1EEDEA60F2EED38DAFA391B088
7448E7782D90B619B8A3A420EE167DF1C8AD9768C5BDB4F385A1B716F1B4663A
C0C437B22A0F21C905A20180D230B103602C6E8BD3AC6EDDDBE890CF9DA09A0C
38529D8BA06C667D030763B5142509331A1D551E5EAA302FAB73B5F49D1CCF97
79BA8BDDDEE52F127FC9EE6DD568F0BC7ED932200484737174A2804428FCD460
FD600396600EDE1F9196756F3A03CD119FF1EBCEB4B4971BD133C6F802A5C582
0C94343D32424F811981772A6546CA8BC0A96B009549E4D1EABA5E297CB940A0
ADBE0D9FA5A5107B87358D0EEA5E85DECDBC2B0C7D90F87ED52F2A4FB490726B
E794620EBE7E1E20B8BA92F335DD5B34522FD9794DC37B2AFCDCB14C4F4DFBD2
E95B99FBBF81210B95D01D7FCFA028FC853E4E4C043F0DCBE75C0446C0DED3A1
8FB1DE89E7CC01D21A86E5E3CFD1A9F25C992058A867560F7B56FFA541DE92B1
2D03B5E8410A9051E2F8088C1B06CCAC55CED04326BD7F08CA0A5D4D0A257705
B1CC8F320698EED5B051B0051A63FD95452F6823711D310DEA82251909E800FA
398261273C2926ACEC731916D8465DC64038C7970A380A803592BB37CB570BAA
54BE19314FC945102AF8E476B4AB5618C7C4A432431B4B6D64A9A9FFB8510FBC
8E25A90437014ECC8ECDD2D14810197B4779B55DA9B6DC5673BE9C464A11A323
7A6D7EB7726DC0FFBBAE6108A73D9158980526D3BAFD4C81BED09E762FD46309
CF5DED302DBD8FF699EB54AFE4B5286492C647C8D35F608078B37BF760BB5F40
3FC52B592AA3085E2C95C6C46EEF9C4AA8ABB72D0B26C39AC03D706BEF5D92EC
C274B590B09E31282581746BCF086687E7A445D32E3D9A3D6817471989C8E654
988ECB5582EE193C5843D92B19968F89937BBEB815D8FDCBB3C5D5224104DD7F
19A651ACA6DE09A6530241767661AABCAE7EBCFE22F9241AA6911BB478011798
3A5B580A0D2B3AA71F787323E91D9E15191EEFA99B2DEC971F100F5321AACE8C
90BC2275CFB52B8B5B9B0A0122CDA71BC2287B2EB42E1F5DB42FCA37E5A149DE
B66622077971746C75AFBAEE2EB76805E038FA787B79E457FFB008877268F3DA
ED4B862D26030E2F773C86FFAB68550789727603808A28BF72CFD4C84349679D
94DD7647023CF2D1D2F198D37CD67B624ABB4F9849E1CF920E9ACFCBB720E0F6
480E3941882C4715934F278FED385753F8979CDEB8FC760D61F65E13D96DE94F
CAC397FB1CA00F6B552732619D72DB0B623A24E243EDF268794626A17D61D2E1
42185258469669BA47A161F7BD501E586742EDBB19EFE14342DEDBD32D42E88D
BE68D4AD566042EEA8B947E800268B4593D0E7AF4D0DD75EB8DC1BAB1A6F1898
7D52E71F6FAF67DC4917690538CCA4286BFF593CACA97B92CD4AAC21896E4632
9803B07C0B91C7EB5B4848EC60ADE53EA2F6D83429D7CBED0BD301B3326CEC7A
C2EEA2657FF8753F81F494F5AACC9A8627662C28EB1CF98437EEE6CCB38F361A
3CDFF0D0B65D64B7D4FBEE33EAB81898CB9F25ABF913A9C3087E6EB03E8112B4
C80F80E50AA409424D417BAE2758CD92BCEF7D5E94F2E45058ADA490E30D36D1
14577A5F83E26B993FC46720EF3FFD569F948BE920732E3580851006D3E00924
5FF3096940A084107C21F31BDCD8CE446EBF7AF25BCF0A8A93FCB51F9CF95948
1B1F0AB9C234EC00B47FB245AF762C354757731E149C83F2F802DD6A5791BF88
A378B96FC709E7A4C033AC10F20ADD000144839384353379348053B6C5E8B747
1A22604807284BE6DFB6B175AC75B2FA15C24BE3F2855A00D1495BF1D15FEC8A
FFEEFCBBCD163853EBC16BC65D4D345674C3852A5BF137E1564D665BA1559702
EDED9CD71B74CDA1C24654100F159F4A451862B0CD22AE970555A1AB3F89BB33
8A82ED5940F3A0CBD9380C2E566FFD14DC23465BB4B1D247739863C5819453C4
534A9A1158D2C27E50A784F572D2C4B9803F50D073916AADCF2EAF8857E770D1
1339949685E44DD318B3C78179A0808CF77671B0AB981AEADA15563464FEE609
C510A68640C231E1F0DF2B0CB1EFCFCD80C0BA3942F8EC3C0382AFFB183659C5
C1FD616C50477B7B06DF04AF2EDE9FCFCBD44A6C418A0ED551EFD4C47AB803BC
3523DE45E3F370D19A4593A26B4F612FAE4CC78202EACE5BEBF5C6B6D9F7603A
91567B7E299F61966C1B67D5A3F4FB51B4CA09758BF5E47BBC17DB0BB47971DE
2ABB8D98BD42E5C067469EF12A7FD8CAEF12C7D8C24081886255324C97BBA209
FDCEE3C1FAA695888F1C5D22236ED5FBBACFFEE48EC89C8FAC252D5ABFC210D5
D37C7BF644BF226EDBE7DD0304FFC2FBB9D77AB214B71D98B1D71EC2295BEC54
03AE6686073D3D05D6F3AB7D6685EFFE995FDBFEA22AE56F2712D00B45860A87
3CD9503BB7ECE1C9125ABA45E1854AD09089CB76D277D7496350686B6A18A3A6
6BDE00FF49B669FEF6F93D88BD27980CEF7E9E4FC3AB677CF85691B94A3A9657
D0CD133AA313D2532D417B8C3A5BBCC8C47F2674405050ADAB5AC54BEEF04765
FA67E14B1BDFADF2E5A121EA256B8E4A4B24CE153356C1DC2D87A952263BA344
22D8284A8A42F0120C04EA7BB803C39FC82500A83DABE7112C4B79A138A3B5A0
9553D9E1BEB1AF867440A3D72863DA39A17056F325A0D2500685413B7F75C730
38CB69FE4F34DF7111D006940A0FE6F79AC38ED91CCA2B003BA6A6043F302AD2
5B0FA1F5D14913654DEDDBE2A8ECA72EDADE9F60329598B98FB3F6C214895C44
18703AB0E5A81F4C5BA790D6456E0B75AE593A326FA081187C8D141282DC8134
9916A1B573276B4CC531C633CB11989990724838B802C844725457E666C9EFB9
EE8DA8442DC389388615CC9C18E8E9AB1B84468D62BDC72DA9ADD96CC51D9951
0EC7DEB42CE58CD79701A68CE21EA4E75D56AC633338E18203B5461E08CB888F
A9424CDAB7FBBBCAF0B9B53E29C7921CFC551DFF89105178813981AEE335DE9F
9CF28608818BECDD7205A7DDDA086096C2F12992523C1E7E98C8D6CCAC22608F
7BD7371F123A66C50821E4301182B9EAFE421888E9A20A516526D9B6211090B4
F62D8E2684D5B925CAF72E3EA201A29A5F4045FEDC08EDDF19D02416D15E8FAA
793EF0E83EF0C316BBA27A63294C8E38DFD9FF0057F34059C4C0C2A2F809BD81
7F8C4619BE05A70D7FCB749E540976C989BD5ED591EFD777AF30D546EC30F95A
07F634C8657FFD4F6B59A8E79907EE437064F2758A7346FED774FEE43E6FF2A3
ACC9CD823FAB9278469E039B18F09E3F55B28EAA771536F3D8006079BEBB0C81
75512CF04F9B7AFC2D71BC2417F8A0A5739ED34BA6EC4DD9151F411B8AD6CA36
95C9F99A01A5D657EC9F2AA22DFB38B06AA6A3DB82FEDB2D286AD01AE3DA98D5
644C71A8AFE5C1B38618CC81CCB5B5AC9685C223A9DF8158B9ACCB3A2BB51572
4DB2EB1B5BE88CBD342145A39F318BF8B9907A85816A264B938DD1ECE4A22B9D
457726A1DD665792BED79202129A8D796ACD2B4545D74F88B514A8BECC0E7BF4
151976383E3B1DFF0621C4076298C0142F5D054E02C4B582105D1BC74D13B1EF
AFDC89611B9DE7D1F6E57FBD553E858F07362421E25FE10C51D68E4D578B3449
948082A3C1A23DFA7C0EE963E2BF162BC5355994C04A589AF4D8FD66AEC8CB5C
00A1044CE1B1C752EA012DB2C6834C1E412A0C01BD23FF7631A7F2DFD7B5ADA1
B9566F9A6BAFAC2AAB01EE48F28F4F55067923FEB299ABF6D173E8061A20E2F4
2FBB19BB7EF1703B3C25C9D0EEB0A52544FA30575694F5E84F69EF60BA225FC0
4353F76EA5CAC2D8ABBB678D1262CBE83B705B6A9A46D57717512A5DE09B31D1
9B94711B5A2D537BADBCC7CDB8FEDA1817CC2477EBF329C91C74F9DAD5CC52D0
269305AC5709BEA1F61A13C5CBE539FCD4C3470999D1875A24A853DA0215CB2C
183514251EF7DFEF7DBA8065543FC0C02E32A3E6583D2994DE124BF9E4DF2A87
29B8C477350F9AECB0471082F30F9765F8B466B7460BA6C51318DF0C24EDAC8E
EC7D83B8EBE5E4613799869D2B221DCDA7F6CED34C60FFB231B194F447A78F43
CD5C7314B488D053049EF8605AD2AFE88E6AAD59EF5289F83C6F6141F569250B
CF32B5A373856031CE9179EDF7CE2FD24DC3C1BA278D093B9010F9A70005C5CA
83ADDE26ABFEDCD9726415C5AFE0E4B1DE2C774D5B811888694A95B90B414F2B
5562CBA09743A6405D58CD0E75C73FF8E7203C53EB94489DFA94CC702563B3DE
C931CC9160A9BB4CB842F77ABEFE1EECB9004DB1B5488DC9A2DE0A8F851307AA
B7C54589E8E50CD9F1ABD5DAC9E8B085C83F2FD88E501696BCE55C6B723665DA
A15180FA0E7E3EE28A5B74F036F242E5BA011C1973E139D0FA081C2E18F6E882
5D6A0D4DFA356BEE441B94C24819879ABFD906924F37671B9B480BD7D0DA110B
58ACAB2DF14568C669750F6D5A2F8720FEF29F124D168E182BCA2AC074074D0B
DFF8AB7804469E3593CF07215BFCD67B79782A4DA189CB58E1F7ED93B7345024
0AB0F8F0E0C88F0928575C8DE49ECA2089BC780C19F693CCDA46767BEB24C432
EFFC060A99859A80DFB06B645DC905BB0ACAC3F375335964FB18148A6A5435CA
A6268F22DDAE3C4D016898BF576E50FBE31D6CC690E64E3188B4481E7EE8F71D
625151509F683DC46BB3C824C9BFE6F80A0475D99018CE96554AD1AA11051F1E
85023874D6B8F4333D1B580F09CC61B4AE0E3689E2A3A217A6E9E4DF12B5A472
E768FAC131EC1BE7716B1605DC9850BB2A0D26818D7C6E7C0D740C7621A5AEF5
182FB7E5B7CC0DE8D58F3A98CFFD13185F39B221CC80A605C913FA1F5D2B9EE9
46C3F8B9689C0091FFC53FD9932086009C15848E620E88F6EEA0C1D0D72BAF03
7F37EC755B7402EA1E851850A4B7634985AA92067EB0E99525C47EFBF83E9137
40C4B8309E3ABCBDE5A9E3765BA9FDBB1E67551A650A042B60EEC698A807BF51
84F186A38B709D987765A1FB91ED25C8850F22CA445CAC03B7CC060BC62649EF
2F78CEB0880AE84ED483D07715D16E87654E25E9ABFF8E2A760E5E64C5ABDA26
FDF44E30FFBD44F1BF1F7D5D344D6D81AEA8C6FF3E9F9141F7572AFCE73512AF
F3C8100E65AD43D857D888F8896A199633E43F189F84389ECB33640CBE1A98D6
95B29B61DA50F893D16650E3432A4F0BE447F804CE0693B619E553DD55E0E2D4
EC58833AAED9E8CF1C2A87E9C128BE5EDB7D478FB8D42621E9EA5929B604D1A9
730019E7B85AAD12C2EEF29EF60511FCAF7566CFB81094E23D08EB691B2B16B9
35ABEB0405868CD6070A5EBC4E71AA209D0C61EFADDB6B4765EC33BE9145AD9D
654B77DDC22D7EEF0C12755737FE3EC128A9507B8B6002A9913C485A0E075B49
D61E562B48A890E63F1264E8A40EAD25FC2BF26253926C5E22C08D8D96D9E54B
34E726A9F8252CD7E92E2180C83162EB5AE07D0472E9376571FB1570AA7A066E
E79EE7FEBCCA1B4847AAE325FB150A4DD63DCAFE04EF64EC9C5D8DD0CB47BDFB
929107C4267064EF653CE98EDE44FF8837B3EA5B4396C1BFCC88649B4AE1AF45
AD2FF043C85543632B7A813824F36733E8FC5D42AE82AE206DDC10E7EA476DB0
778D41D4B2E5B8A7A3A6A1ACB225F45511D9ABDAC4F16178C4D6157D80728150
ABA0079DE609574BEC097AE363A564EC8B69881750661442930CCB9F23278C74
9D07AE84C05961F4CC16F5D3E10F883E9FAEC0D5C3F1916EFDC5869A021C05C7
C668E9E6D5456D5CAA5D18BE4AA2B4992BDF681A1A2571945864DB7B84A28C86
D456CC4C1DA842690AD5C4D100B869F1BE232DED52E2F5E59EC00AF8CBEF9736
199BD2C57B03D717C9D5466069638CFB6395696493A480953CBB9C894CD89CA2
2384EBFD99282F95F8F6E9A6F73E682DC4FECADA11CE72B0301E9ADF6466B9BE
A82461AD71046513BCA80CAECCFCE33851BF49001E111240FF1E819472FF26B5
691BFA763952ED5DC743E78D64E8419E942FF9D84C45D397B1628D153D6C8C04
A75416C22CF31081F10A652DA68EB5DD826B4C92C0ADC1C23B9DAE0783814ED9
2FCEDD20065E78175C3AD884E274809C5F73A2843DCB20E9B26AF451968187EA
A5284FB86F247D3B91D90FCB489B727ABA96ED2CD1A272F05A568C698996C152
8FE3DF58CCF6D0D7FA854AC1A7205CEAE2737567A38D5EB53B1E69340F510619
B065C94312C4BA04417A5866534DCBE870B4997C63E07DF5AC4CEA4E71ED333E
6E907708E1A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 40 /braceleftBigg put
dup 80 /summationtext put
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CC71EF3BE29E7C9EC47F20088C52CAEC511F41B45F7509B28A1BA4CD
2A3B619A1F8C7FEA84B06355F913BB91D5167E7DBB61DA2C1F3D7AA4EBF8102F
47CA2624AF062470B2E1A45B52242376D606F5D8E0BB6BEA8179CFE3C3C297E3
74117367364D55170D09ECD0F928119F161C084C2EA63611F577D021AADFAA28
2F3981CD8034B0341BC0EBA29339C8416EB1A0AB0A377DD876C1F8E72C4FE258
E97FAF17F4DA719ED5DEEFB7BDB8DA80E5938BC5F5C7205FB2434EA8A2570BBC
B356FD55493F4BDC6E24794A7883603C81FD0B1987FEE0BFAC939349EC1D3384
98AC9EC8D7DBC2E92D0D0805FEFB4B76FA107D601DFABA394C6F4C3A013A1F62
0744C0B9FBBB33E41A9E0CA06E9A486027E8C31F27F236F72A49C33398ECE789
4C8A99A5D33B7F4ABE750396FFC6DB8885ED42726B15B1AA594A17AF76EAAC22
2A281005354C054F1CAC56D84172C910720E9D21CAD616392E7BEC9ACD63127B
16E9175E560647F10AB279764434ACF2329EC2C300B27E12F01EECC3E1E73519
43B62AEFE2B8DAD51FA25D4F46B54D75D0EA955872D119A25B9DC9041459EF93
D3D8B5B9CF5DC5AA564FBD54EEC1D23BF45B33CD9997B0C2CAC8A22D4B78792D
E1A3A73AA73ED49C7D2D9251EECD5F730E4AF5A6C042C44C8FA4621365C1B0F7
CB8C00FECAA3AB83DBB320823566A943CB0308BF4561E801E204A09370330BF6
638F6CEC79EAE50F31CEA53CC8EA34B7196F7F4EDAFF4079D56D41E4B3622AA7
1748799442C3B48F6420767FE214024BA083BE33933DF64921E145984EAA8EEB
02ECC0AE4DFB285F48D8D37CFDDB2F0DFC2EC1177FB545D7D68568DFADE0E545
EE7149271A868B5DCE0153D070C440092A4F2B7DA7A23F801244B020226AB22B
43F1F1FD4BF1A335A41D3AEC389966395AD65958FD2139B162676378B4990D2D
39846BE17D3640E651C46672BD606CC4CD2EBB52F99ECD8D2FB57C0265CC0D58
62F08A6F268983E69BA2BC1BB65876FC8FB9A08CADC2643E01B97832000D6039
25270414498688BA1E1DB295807B7B280F818693D696AFF5F3AD82361AB135DA
D7CA42DECC1A1AB45E90149D4CDF2BB4E3656F678D9781DEBEBD3F544AE76120
9B07958EC2FEA60710BE57A24D8526CB2C75E6595CD853D5600C4F590CA5B6F9
69110CE63D839050BA3AFB3F2D1735738A0152C37DA90FA0ABBDF31917663B1C
F5C3F76CEAE4D986F7FCE0BDA6BA242CC6A22A0D7B078081D62ACD2D7B093683
AD89CFD0948ACF76000C31F478F0C85934B80FD53FD5505DAFE385B846FB6BD4
278E67093D74489E89A4A029AC04918131B7A27F4071C71CDB2A50A6774C440A
63A0EF6ECF74B662CD922ADD41E95C675B6C2E2602D66CF7E7ADAE296669B1DF
7C9E63AD2153E691DFF99F6A7F9E861F6F5E2255945B213456D45240A3AF1B5B
3E6542B603C40EA9B2580687E46E67DD363D788F7CF2BEFC2A4E2AFDD8B8FD41
A43A289B482E7DED1C9B5ABBB560DB43B2056D081CC95A2D24602CC3305513BE
D715CD6F760A7D8F1431ED357AC353C6A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (SMAWK.dvi)
@start /Fa 205[98 1[40 47[114{ TeXbbad153fEncoding ReEncodeFont }3
137.733 /CMSY8 rf /Fb 134[69 1[99 69 77 38 69 46 1[77
77 77 115 31 69 1[31 77 77 38 77 77 69 77 77 9[130 2[84
92 3[107 99 115 1[92 69 38 1[107 3[99 92 92 6[38 77 77
3[77 2[77 77 1[38 4[46 46 37[69 2[{ TeXBase1Encoding ReEncodeFont }45
137.733 /Helvetica-Oblique rf /Fc 194[134 9[86 86 86
86 4[134 1[67 67 40[{}8 137.733 /LCMSS8 rf /Fd 137[71
4[65 2[89 129 1[76 59 50 8[60 9[85 26[41 59[{
 TeXaae443f0Encoding ReEncodeFont }10 137.733 /CMMI8
rf /Fe 134[83 83 119 83 92 46 83 55 1[92 92 92 138 37
2[37 92 92 1[92 92 83 1[92 14[119 2[129 1[138 92 24[92
92 2[46 1[55 46 2[55 55 40[{ TeXBase1Encoding ReEncodeFont }31
165.272 /Helvetica-Oblique rf /Ff 167[207 7[151 39[116
6[114 114 32[{}5 143.462 /CMEX10 rf /Fg 129[103 15[103
161 3[46 11[58 1[58 29[161 2[57 103 103 103 103 103 103
103 103 103 103 4[161 1[80 80 37[161 2[{}22 165.272 /LCMSS8
rf /Fh 136[126 86 102 1[81 4[107 155 1[91 71 60 4[90
76 75 93 7[102 144 166 102 119 102 107 132 1[111 133
1[169 5[137 111 129 144 125 4[137 88 137 49 49 32[101
6[82 18[{ TeXaae443f0Encoding ReEncodeFont }36 165.272
/CMMI8 rf /Fi 149[49 2[88 88 45[98 5[117 176 7[176 19[137
137 4[88 12[137 49 137{ TeXbbad153fEncoding ReEncodeFont }13
165.272 /CMSY8 rf /Fj 198[64 64 64 64 64 64 64 64 64
64 48[{ TeXBase1Encoding ReEncodeFont }10 114.736 /Helvetica
rf /Fk 105[92 1[55 55 24[83 83 83 119 83 92 46 83 55
92 92 92 92 138 37 83 1[37 92 92 46 92 92 83 92 92 9[156
1[119 101 110 119 1[110 129 119 138 92 110 1[46 1[129
101 110 119 119 110 110 5[46 46 92 1[92 92 92 92 92 92
92 92 46 46 55 46 2[55 55 37 36[83 2[{ TeXBase1Encoding ReEncodeFont }
66 165.272 /Helvetica rf /Fl 134[92 92 129 92 101 55
92 64 1[101 101 101 147 46 2[46 101 101 55 92 101 92
101 92 9[156 2[101 110 119 1[110 129 1[138 101 119 1[46
3[110 119 119 1[119 6[55 11[46 55 46 2[55 55 37[101 2[{
 TeXBase1Encoding ReEncodeFont }43 165.272 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black 452 2547
2997 5 v 452 2788 5 242 v 0 0 1 TeXcolorrgb 498 2711
a Fl(DP)47 b(Speedups)e(II:)h(The)g(Mong)r(e)f(Pr)m(oper)s(ty)p
Black 3443 2788 V 452 2793 2997 5 v 937 2943 a Fk(Last)h(Re)-5
b(vised)45 b(\226)g(Dec)h(7,)g(2004)p Black 3553 5372
a Fj(1)p Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black Black Black 1619 1167
663 5 v 1619 1376 5 209 v 0 0 1 TeXcolorrgb 1665 1331
a Fl(Outline)p Black 2276 1376 V 1619 1381 663 5 v 0 0 1
TeXcolorrgb 0 0 1 TeXcolorrgb 148 1937 a Fi(\017)p 0 0 1
TeXcolorrgb 83 w Fk(T)-20 b(otally)44 b(monotone)h(and)h(Monge)f(Matr)r
(ices)p 0 0 1 TeXcolorrgb 148 2543 a Fi(\017)p 0 0 1
TeXcolorrgb 83 w Fk(The)34 b(SMA)-8 b(WK)36 b(Theorem)e(f)-5
b(or)35 b(\002nding)f(ro)n(w)h(minima/maxima)319 2776
y(of)45 b(totally)g(monotone)g(and)h(Monge)f(matr)r(ices)g(quic)m(kly)
-17 b(.)p 0 0 1 TeXcolorrgb 148 3382 a Fi(\017)p 0 0 1
TeXcolorrgb 83 w Fk(A)46 b(DP)g(application:)319 3614
y(W)-5 b(eb)45 b(pro)-5 b(xies)45 b(on)h(a)g(line)f(topology)f(netw)n
(or)r(k.)p 0 0 1 TeXcolorrgb 148 4220 a Fi(\017)p 0 0 1
TeXcolorrgb 83 w Fk(Proof)i(of)f(the)h(SMA)-8 b(WK)46
b(Theorem)p Black Black 3553 5372 a Fj(2)p Black eop
end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black Black Black 1171 353
1558 5 v 1171 558 5 206 v 0 0 1 TeXcolorrgb 1218 515
a Fl(Pr)m(ob)n(lem)46 b(De\002nition)p Black 2724 558
V 1171 563 1558 5 v 3 888 a Fk(Our)g(prob)m(lem)e(is)h(to)h(\002nd)g
(the)p 0 0 1 TeXcolorrgb 45 w(ro)n(w-maxima)p Black 44
w(in)g(an)p 1 0 0 TeXcolorrgb 3 1088 a Fh(n)39 b Fi(\002)f
Fh(m)30 b Fg(\()p Fh(n)49 b Fi(\024)f Fh(m)p Fg(\))p
Black 47 w Fk(matr)r(ix)p 1 0 0 TeXcolorrgb 45 w Fh(M)p
Black 18 w Fk(:)p 932 1566 2037 5 v 930 1765 5 200 v
998 1707 a Fg(10)p 1269 1765 V 1 0 0 TeXcolorrgb 134
w(12)p Black 1608 1765 V 185 w(9)p 1948 1765 V 184 w(10)p
2287 1765 V 134 w(10)p 2626 1765 V 185 w(6)p 2966 1765
V 932 1770 2037 5 v 930 1969 5 200 v 998 1911 a(10)p
1269 1969 V 1 0 0 TeXcolorrgb 134 w(13)p Black 1608 1969
V 133 w(10)p 1948 1969 V 133 w(11)p 2287 1969 V 134 w(11)p
2626 1969 V 185 w(8)p 2966 1969 V 932 1974 2037 5 v 930
2174 5 200 v 1050 2115 a(7)p 1269 2174 V 1 0 0 TeXcolorrgb
185 w(10)p Black 1608 2174 V 185 w(8)p 1948 2174 V 236
w(9)p 2287 2174 V 236 w(9)p 2626 2174 V 237 w(7)p 2966
2174 V 932 2178 2037 5 v 930 2378 5 200 v 1050 2320 a(8)p
1269 2378 V 1 0 0 TeXcolorrgb 185 w(11)p Black 1608 2378
V 133 w(10)p 1948 2378 V 133 w(11)p 2287 2378 V 134 w(11)p
2626 2378 V 133 w(10)p 2966 2378 V 932 2383 2037 5 v
930 2582 5 200 v 1050 2524 a(4)p 1269 2582 V 236 w(8)p
1608 2582 V 237 w(8)p 1948 2582 V 236 w(9)p 2287 2582
V 185 w(10)p 2626 2582 V 1 0 0 TeXcolorrgb 133 w(11)p
Black 2966 2582 V 932 2587 2037 5 v 930 2786 5 200 v
1050 2728 a(1)p 1269 2786 V 236 w(5)p 1608 2786 V 237
w(5)p 1948 2786 V 236 w(6)p 2287 2786 V 236 w(7)p 2626
2786 V 1 0 0 TeXcolorrgb 237 w(9)p Black 2966 2786 V
932 2791 2037 5 v 3 3191 a Fk(F)-5 b(or)48 b(later)e(use)h(let)p
1 0 0 TeXcolorrgb 47 w Fh(\031)6 b Fg(\()p Fh(i)p Fg(\))p
Black 48 w Fk(be)47 b(column)f(inde)-5 b(x)47 b(of)g(ro)n(w)g(maxima)3
3391 y(\(In)f(case)f(of)h(ties)f(w)n(e)h(let)p 1 0 0
TeXcolorrgb 46 w Fh(\031)6 b Fg(\()p Fh(i)p Fg(\))p Black
46 w Fk(be)46 b(smallest)e(such)h(inde)-5 b(x\).)3 3764
y(This)45 b(looks)g(as)g(if)h(it)g(should)e(tak)m(e)p
1 0 0 TeXcolorrgb 45 w Fh(\022)5 b Fg(\()p Fh(mn)p Fg(\))p
Black 47 w Fk(time)n(.)3 4138 y(In)70 b(pr)n(actice)n(,)k(in)69
b(man)n(y)f(applications)g(the)h(matr)r(ix)g(is)g(often)p
0 0 1 TeXcolorrgb 3 4337 a(totally-monotone)p Black(.)63
b(In)49 b(this)f(case)n(,)g(the)p 0 0 1 TeXcolorrgb 49
w(SMA)-8 b(WK)p Black 49 w(algor)r(ithm)3 4536 y(due)52
b(to)g(A.Aggarw)n(al,)i(M.M.Kla)m(w)n(e)n(,)f(S)m(.Mor)n(an,)g(P)-30
b(.Shor)53 b(and)3 4736 y(R.Wilber)39 b(per)t(mits)f(us)h(to)h(solv)l
(e)e(the)h(prob)m(lem)f(in)p 1 0 0 TeXcolorrgb 39 w Fh(O)5
b Fg(\()p Fh(m)16 b Fg(+)g Fh(n)p Fg(\))p Black 3 4935
a Fk(time)n(.)55 b(This)44 b(will)g(per)t(mit)g(speeding)f(up)h(man)n
(y)f(dynamic)g(pro-)3 5134 y(g)n(r)n(amming)i(aplications)n(.)p
Black 3553 5372 a Fj(3)p Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black Black Black 691 353
2519 5 v 691 592 5 240 v 0 0 1 TeXcolorrgb 737 515 a
Fl(Mong)r(e)45 b(and)h(Monotone)f(Matrices)p Black 3204
592 V 691 597 2519 5 v 932 993 2037 5 v 930 1192 5 200
v 998 1134 a Fg(10)p 1269 1192 V 1 0 0 TeXcolorrgb 134
w(12)p Black 1608 1192 V 185 w(9)p 1948 1192 V 184 w(10)p
2287 1192 V 134 w(10)p 2626 1192 V 185 w(6)p 2966 1192
V 932 1197 2037 5 v 930 1396 5 200 v 998 1338 a(10)p
1269 1396 V 1 0 0 TeXcolorrgb 134 w(13)p Black 1608 1396
V 133 w(10)p 1948 1396 V 133 w(11)p 2287 1396 V 134 w(11)p
2626 1396 V 185 w(8)p 2966 1396 V 932 1401 2037 5 v 930
1601 5 200 v 1050 1543 a(7)p 1269 1601 V 1 0 0 TeXcolorrgb
185 w(10)p Black 1608 1601 V 185 w(8)p 1948 1601 V 236
w(9)p 2287 1601 V 236 w(9)p 2626 1601 V 237 w(7)p 2966
1601 V 932 1606 2037 5 v 930 1805 5 200 v 1050 1747 a(8)p
1269 1805 V 1 0 0 TeXcolorrgb 185 w(11)p Black 1608 1805
V 133 w(10)p 1948 1805 V 133 w(11)p 2287 1805 V 134 w(11)p
2626 1805 V 133 w(10)p 2966 1805 V 932 1810 2037 5 v
930 2009 5 200 v 1050 1951 a(4)p 1269 2009 V 236 w(8)p
1608 2009 V 237 w(8)p 1948 2009 V 236 w(9)p 2287 2009
V 185 w(10)p 2626 2009 V 1 0 0 TeXcolorrgb 133 w(11)p
Black 2966 2009 V 932 2014 2037 5 v 930 2213 5 200 v
1050 2155 a(1)p 1269 2213 V 236 w(5)p 1608 2213 V 237
w(5)p 1948 2213 V 236 w(6)p 2287 2213 V 236 w(7)p 2626
2213 V 1 0 0 TeXcolorrgb 237 w(9)p Black 2966 2213 V
932 2218 2037 5 v 3 2749 a Fk(A)f Fg(2)33 b Fi(\002)e
Fg(2)45 b Fk(matr)r(ix)p 1 0 0 TeXcolorrgb 1105 2498
a Ff( )1285 2649 y Fh(a)141 b(b)1294 2849 y(c)g(d)1668
2498 y Ff(!)p Black 1825 2749 a Fk(is)p 0 0 1 TeXcolorrgb
44 w Fe(monotone)p Black 43 w Fk(if)43 b(it)h(is)f(not)h(sim)n(ul-)3
3059 y(taneously)i(tr)r(ue)i(that)f Fh(a)52 b(<)f(b)d
Fk(and)f Fh(c)52 b Fi(\025)f Fh(d)p Fk(,)d(i.e)n(.,)f(ro)n(w)g(maxima)3
3258 y(can)p 0 0 1 TeXcolorrgb 45 w Fl(not)p Black 46
w Fk(be)p 1 0 0 TeXcolorrgb 46 w Fh(c;)29 b(b)p Black
Fk(.)3 3632 y(An)p 1 0 0 TeXcolorrgb 65 w Fh(n)52 b Fi(\002)g
Fh(m)p Black 65 w Fk(matr)r(ix)65 b(is)p 0 0 1 TeXcolorrgb
64 w Fe(totally)e(monotone)p Black 64 w Fk(if)i(e)-5
b(v)l(er)5 b(y)64 b Fg(2)52 b Fi(\002)h Fg(2)3 3831 y
Fk(submatr)r(ix)45 b(is)g(monotone)n(.)3 4204 y(An)p
1 0 0 TeXcolorrgb 46 w Fh(n)39 b Fi(\002)f Fh(m)p Black
47 w Fk(matr)r(ix)45 b(is)p 0 0 1 TeXcolorrgb 45 w Fe(Monge)p
Black 45 w Fk(if)p 1 0 0 TeXcolorrgb 46 w Fi(8)p Fh(i)j(<)g(n)p
Black Fk(,)p 1 0 0 TeXcolorrgb 46 w Fi(8)p Fh(j)58 b(<)48
b(m)p Black Fk(,)p 1 0 0 TeXcolorrgb 644 4503 a Fh(a)737
4537 y Fd(i;j)938 4503 y Fg(+)39 b Fh(a)1231 4542 y Fd(i)p
Fc(+1)p Fd(;j)8 b Fc(+1)1882 4503 y Fi(\025)48 b Fh(a)2160
4542 y Fd(i;j)8 b Fc(+1)2581 4503 y Fg(+)39 b Fh(a)2874
4542 y Fd(i)p Fc(+1)p Fd(;j)p Black 0 0 1 TeXcolorrgb
3 5134 a Fl(Lemma:)57 b Fk(Ev)l(er)5 b(y)45 b(Monge)g(matr)r(ix)g(is)h
(totally)e(monotone)n(.)p Black Black 3553 5372 a Fj(4)p
Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black Black Black Black 1045 351
1810 5 v 1045 559 5 209 v 0 0 1 TeXcolorrgb 1092 515
a Fl(The)46 b(SMA)-10 b(WK)46 b(Theorem)p Black 2850
559 V 1045 564 1810 5 v 932 1083 2037 5 v 930 1282 5
200 v 998 1224 a Fg(10)p 1269 1282 V 1 0 0 TeXcolorrgb
134 w(12)p Black 1608 1282 V 185 w(9)p 1948 1282 V 184
w(10)p 2287 1282 V 134 w(10)p 2626 1282 V 185 w(6)p 2966
1282 V 932 1287 2037 5 v 930 1487 5 200 v 998 1428 a(10)p
1269 1487 V 1 0 0 TeXcolorrgb 134 w(13)p Black 1608 1487
V 133 w(10)p 1948 1487 V 133 w(11)p 2287 1487 V 134 w(11)p
2626 1487 V 185 w(8)p 2966 1487 V 932 1492 2037 5 v 930
1691 5 200 v 1050 1633 a(7)p 1269 1691 V 1 0 0 TeXcolorrgb
185 w(10)p Black 1608 1691 V 185 w(8)p 1948 1691 V 236
w(9)p 2287 1691 V 236 w(9)p 2626 1691 V 237 w(7)p 2966
1691 V 932 1696 2037 5 v 930 1895 5 200 v 1050 1837 a(8)p
1269 1895 V 1 0 0 TeXcolorrgb 185 w(11)p Black 1608 1895
V 133 w(10)p 1948 1895 V 133 w(11)p 2287 1895 V 134 w(11)p
2626 1895 V 133 w(10)p 2966 1895 V 932 1900 2037 5 v
930 2099 5 200 v 1050 2041 a(4)p 1269 2099 V 236 w(8)p
1608 2099 V 237 w(8)p 1948 2099 V 236 w(9)p 2287 2099
V 185 w(10)p 2626 2099 V 1 0 0 TeXcolorrgb 133 w(11)p
Black 2966 2099 V 932 2104 2037 5 v 930 2303 5 200 v
1050 2245 a(1)p 1269 2303 V 236 w(5)p 1608 2303 V 237
w(5)p 1948 2303 V 236 w(6)p 2287 2303 V 236 w(7)p 2626
2303 V 1 0 0 TeXcolorrgb 237 w(9)p Black 2966 2303 V
932 2308 2037 5 v 0 0 1 TeXcolorrgb 3 2767 a Fl(Theorem:)57
b(\(SMA)-10 b(WK\))3 2994 y Fk(If)p 1 0 0 TeXcolorrgb
42 w Fh(M)p 0 0 1 TeXcolorrgb 58 w Fk(is)41 b(a)h(totally)e(monotone)p
1 0 0 TeXcolorrgb 41 w Fh(n)23 b Fi(\002)g Fh(m)29 b
Fg(\()p Fh(n)49 b Fi(\024)f Fh(m)p Fg(\))p 0 0 1 TeXcolorrgb
42 w Fk(matr)r(ix)41 b(then)3 3221 y(its)k(ro)n(w-maxima)g(can)g(be)h
(f)-5 b(ound)45 b(in)p 1 0 0 TeXcolorrgb 46 w Fh(O)5
b Fg(\()p Fh(m)39 b Fg(+)g Fh(n)p Fg(\))p 0 0 1 TeXcolorrgb
46 w Fk(time)p Black(.)3 3685 y(W)-5 b(e)62 b(will)f(no)n(w)h(see)f(an)
h(application)e(of)i(this)f(theorem)g(and,)3 3912 y(afterw)n(ards)n(,)
45 b(a)g(proof)-5 b(.)3 4254 y Fb(Note:)53 b(The)41 b(or)r(iginal)d
(proof)i(of)h(this)f(theorem)g(appears)f(in)h(the)g(SMA)-7
b(WK)3 4481 y(paper)g(.)44 b(Our)31 b(proof)f(is)h(a)g(modi\002ed)e(v)m
(ersion)g(of)j(that)f(scr)r(ibed)f(b)m(y)h(b)m(y)g(Br)r(uce)3
4708 y(Maggs)53 b(and)g(A)-6 b(vr)r(im)53 b(Blum)g(f)l(or)h(the)f
(course)g(notes)g(of)h(Computational)3 4935 y(Geometr)t(y)43
b(\(18.409\))e(giv)m(en)g(in)i(Spr)r(ing)f(1988)g(b)m(y)h(Alok)g(Agga)m
(w)n(aal)e(and)3 5162 y(Joel)c(Klein)f(at)j(MIT)-17 b(.)p
Black 3553 5372 a Fj(5)p Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black Black 3 870 a Fk(Note)n(.)123
b(The)68 b(SMA)-8 b(WK)69 b(Theorem)e(implies)f(that)i(if)p
1 0 0 TeXcolorrgb 68 w Fh(M)p Black 85 w Fk(is)g(a)p
1 0 0 TeXcolorrgb 3 1103 a Fh(n)41 b Fi(\002)f Fh(m)30
b Fg(\()p Fh(n)53 b Fi(\024)g Fh(m)p Fg(\))p Black 0 0 1
TeXcolorrgb 50 w Fl(Mong)r(e)p Black 47 w Fk(matr)r(ix,)c(i.e)n(.,)p
1 0 0 TeXcolorrgb 48 w Fi(8)p Fh(i)k(<)g(n)p Black Fk(,)p
1 0 0 TeXcolorrgb 49 w Fi(8)p Fh(j)62 b(<)54 b(m)p Black
Fk(,)3 1335 y(it)46 b(satis\002es)p 1 0 0 TeXcolorrgb
620 1692 a Fh(a)713 1726 y Fd(i;j)914 1692 y Fg(+)39
b Fh(a)1207 1731 y Fd(i)p Fc(+1)p Fd(;j)8 b Fc(+1)1857
1692 y Fi(\025)49 b Fh(a)2136 1731 y Fd(i;j)8 b Fc(+1)2557
1692 y Fg(+)38 b Fh(a)2849 1731 y Fd(i)p Fc(+1)p Fd(;j)3231
1692 y Fh(;)p Black 42 2008 a Fk(then)g(the)g(ro)n(w-maxima)f(of)p
1 0 0 TeXcolorrgb 39 w Fh(M)p Black 56 w Fk(can)h(be)g(f)-5
b(ound)38 b(in)p 1 0 0 TeXcolorrgb 39 w Fh(O)5 b Fg(\()p
Fh(m)13 b Fg(+)g Fh(n)p Fg(\))p Black 3 2240 a Fk(time)n(.)3
2722 y(By)50 b(taking)g(negativ)l(es)e(of)j(all)e(elements)g(this)h
(implies)e(that)i(if)p 1 0 0 TeXcolorrgb 3 2954 a Fi(8)p
Fh(i)e(<)h(n)p Black Fk(,)p 1 0 0 TeXcolorrgb 45 w Fi(8)p
Fh(j)58 b(<)48 b(m)p Black Fk(,)p 1 0 0 TeXcolorrgb 644
3311 a Fh(a)737 3345 y Fd(i;j)938 3311 y Fg(+)39 b Fh(a)1231
3350 y Fd(i)p Fc(+1)p Fd(;j)8 b Fc(+1)1882 3311 y Fi(\024)48
b Fh(a)2160 3350 y Fd(i;j)8 b Fc(+1)2581 3311 y Fg(+)39
b Fh(a)2874 3350 y Fd(i)p Fc(+1)p Fd(;j)p Black 40 3627
a Fk(then)e(the)p 0 0 1 TeXcolorrgb 37 w Fl(r)m(o)n(w-minima)p
Black 36 w Fk(of)p 1 0 0 TeXcolorrgb 37 w Fh(M)p Black
55 w Fk(can)f(be)h(f)-5 b(ound)37 b(in)p 1 0 0 TeXcolorrgb
37 w Fh(O)5 b Fg(\()p Fh(m)j Fg(+)g Fh(n)p Fg(\))p Black
3 3859 a Fk(time)n(.)3 4341 y(When)53 b(dealing)g(with)g(ro)n(w-minima)
f(prob)m(lems)n(,)i(w)n(e)g(will)f(call)3 4573 y(matr)r(ices)h(that)g
(satisfy)f(the)h(second)g(inequality)p 0 0 1 TeXcolorrgb
52 w(Monge)p Black 54 w(as)3 4806 y(w)n(ell.)p Black
3553 5372 a Fj(6)p Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black Black Black Black 577 420
2747 5 v 577 659 5 239 v 0 0 1 TeXcolorrgb 623 582 a
Fl(The)46 b(W)-6 b(eb)46 b(Pr)m(o)-5 b(xy)46 b(on)g(a)g(Line)g(Pr)m(ob)
n(lem)p Black 3318 659 V 577 664 2747 5 v 3 1064 a Fk(Consider)40
b(a)h(netw)n(or)r(k)g(as)g(a)f(w)n(eighted)h(g)n(r)n(aph)p
1 0 0 TeXcolorrgb 41 w Fh(G)49 b Fg(=)f(\()p Fh(V)10
b(;)30 b(E)9 b Fg(\))p Black Fk(,)3 1296 y(with)35 b(the)g(distance)e
(betw)n(een)i(tw)n(o)h(v)l(er)7 b(tices)33 b(being)h(the)h(shor)7
b(t-)3 1529 y(est)74 b(path)g(betw)n(een)g(them.)141
b(Let)74 b(us)g(specify)e(one)i(ser)5 b(v)l(er)p 1 0 0
TeXcolorrgb 3 1761 a Fh(s)49 b Fi(2)g Fh(V)p Black 83
w Fk(on)44 b(the)g(netw)n(or)r(k)h(as)f(being)f(the)p
0 0 1 TeXcolorrgb 44 w Fl(sour)m(ce)p Black 44 w Fk(of)h(all)f(inf)-5
b(or-)3 1994 y(mation.)87 b(Nodes)55 b(will)h(also)f(ha)m(v)l(e)p
0 0 1 TeXcolorrgb 55 w Fl(weights)p Black Fk(;)61 b(the)56
b(w)n(eight)g(of)3 2226 y(node)p 1 0 0 TeXcolorrgb 45
w Fh(v)e Fi(2)49 b Fh(V)p Black 84 w Fk(will)c(be)p 1 0 0
TeXcolorrgb 45 w Fh(w)1538 2247 y Fd(v)p Black 1618 2226
a Fk(,)h(the)e(total)h(amount)f(of)h(ser)5 b(vice)44
b(\(or)3 2458 y(frequency)h(of)h(requests\))e(that)p
1 0 0 TeXcolorrgb 46 w Fh(v)p Black 51 w Fk(is)i(requesting)e(from)p
1 0 0 TeXcolorrgb 46 w Fh(s)p Black Fk(.)3 2940 y(The)60
b(total)f(tr)n(af\002c)g(associated)f(with)i(the)f(request)g(will)g
(then)3 3172 y(be)p 1 0 0 TeXcolorrgb 47 w Fh(d)p Fg(\()p
Fh(v)6 b(;)29 b(s)p Fg(\))p Fh(w)861 3193 y Fd(v)p Black
989 3172 a Fk(\(sometimes)45 b(kno)n(wn)h(as)p 0 0 1
TeXcolorrgb 47 w(latency)p Black(\).)p 0 0 1 TeXcolorrgb
59 w(T)-20 b(otal)46 b(la-)3 3405 y(tency)p Black 45
w(of)g(the)g(system)e(will)h(be)p 1 0 0 TeXcolorrgb 1978
3292 a Ff(P)2129 3444 y Fd(v)5 b Fa(2)p Fd(V)2454 3405
y Fh(d)p Fg(\()p Fh(v)h(;)29 b(s)p Fg(\))p Fh(w)3081
3426 y Fd(v)p Black 3162 3405 a Fk(.)3 3886 y(In)61 b(order)f(to)h
(reduce)f(the)g(latency)f(of)i(the)f(system)f(w)n(e)i(can)3
4119 y(mak)m(e)77 b(copies)f(of)h(the)h(ser)5 b(v)l(er')-8
b(s)75 b(inf)-5 b(or)t(mation)77 b(and)g(cache)3 4351
y(them)60 b(at)p 0 0 1 TeXcolorrgb 60 w(w)n(eb-pro)-5
b(xy)p Black 60 w(nodes)59 b(in)h(the)g(netw)n(or)r(k.)100
b(If)p 1 0 0 TeXcolorrgb 60 w Fh(S)p Black 70 w Fk(is)59
b(the)3 4584 y(set)76 b(of)h(w)n(eb)g(pro)-5 b(xies)76
b(\(w)n(e)h(alw)n(a)-5 b(ys)76 b(assume)p 1 0 0 TeXcolorrgb
75 w Fh(s)104 b Fi(2)f Fh(S)p Black 9 w Fk(\))77 b(let)p
1 0 0 TeXcolorrgb 3 4816 a Fh(d)p Fg(\()p Fh(v)6 b(;)29
b(S)9 b Fg(\))64 b(=)f(min)p Fi(f)p Fh(d)p Fg(\()p Fh(v)6
b(;)29 b(u)p Fg(\))93 b(:)g Fh(u)64 b Fi(2)f Fh(S)9 b
Fi(g)p Black Fk(.)82 b(The)54 b(total)f(latency)3 5049
y(of)46 b(the)g(system)e(is)h(then)h(reduced)f(to)p 1 0 0
TeXcolorrgb 2392 4936 a Ff(P)2543 5088 y Fd(v)5 b Fa(2)p
Fd(V)2868 5049 y Fh(d)p Fg(\()p Fh(v)h(;)29 b(S)9 b Fg(\))p
Black Fk(.)p Black 3553 5372 a Fj(7)p Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black Black 3 515 a Fk(The)56 b(prob)m(lem)e
(that)h(w)n(e)i(w)n(ant)e(to)g(solv)l(e)g(is)n(,)h(giv)l(en)f(the)g
(con-)3 726 y(str)n(aint)41 b(that)p 1 0 0 TeXcolorrgb
41 w Fi(j)p Fh(S)9 b Fi(j)48 b Fg(=)h Fh(m)22 b Fg(+)g(1)p
Fh(;)p Black 42 w Fk(\002nd)41 b(the)g(set)g(of)p 1 0 0
TeXcolorrgb 41 w Fh(m)22 b Fg(+)g(1)p Black 42 w Fk(of)41
b(w)n(eb-)3 937 y(pro)-5 b(xies)p 1 0 0 TeXcolorrgb 36
w Fh(S)p Black 45 w Fk(that)p 0 0 1 TeXcolorrgb 37 w(minimiz)n(es)p
Black 1 0 0 TeXcolorrgb 1801 824 a Ff(P)1953 976 y Fd(v)5
b Fa(2)p Fd(V)2278 937 y Fh(d)p Fg(\()p Fh(v)h(;)29 b(S)9
b Fg(\))p Black 37 w Fe(\(recall)35 b(that)p 1 0 0 TeXcolorrgb
37 w Fh(s)49 b Fi(2)3 1148 y Fh(V)p Black 39 w Fe(\))p
Fk(.)3 1560 y(In)k(g)n(r)n(aph)h(theor)5 b(y)52 b(this)g(is)h(kno)n(wn)
f(as)h(the)p 0 0 1 TeXcolorrgb 53 w Fh(m)p Fk(-median)f(prob-)3
1771 y(lem)p Black 67 w(and,)73 b(f)-5 b(or)68 b(gener)n(al)g(g)n(r)n
(aphs)n(,)k(is)p 0 0 1 TeXcolorrgb 68 w(NP-hard)p Black
68 w(to)67 b(solv)l(e)g(or)3 1983 y(e)-5 b(v)l(en)45
b(appro)-5 b(ximate)n(.)3 2395 y(F)g(or)46 b(some)f(special)g(g)n(r)n
(aph)h(topologies)n(,)e(though,)h(this)g(prob-)3 2606
y(lem)64 b(can)h(be)f(solv)l(ed)g(in)g(polynomial)f(time)n(.)112
b(In)65 b(par)7 b(ticular)-8 b(,)3 2817 y(consider)67
b(the)h(directed)g(line)g(topology)-17 b(.)p 1 0 0 TeXcolorrgb
123 w Fh(G)p Black 69 w Fk(is)68 b(a)g(directed)3 3028
y(line)55 b(with)g(edges)p 1 0 0 TeXcolorrgb 55 w Fg(\()p
Fh(v)1337 3062 y Fd(i)1391 3028 y Fh(;)29 b(v)1555 3062
y Fd(i)p Fa(\000)p Fc(1)1808 3028 y Fg(\))p Black 56
w Fk(f)-5 b(or)p 1 0 0 TeXcolorrgb 56 w Fh(i)66 b Fg(=)f(1)p
Fh(;)30 b(:)f(:)g(:)g(;)g(n)p Black 55 w Fk(and)55 b(or)r(igi-)3
3239 y(nal)38 b(ser)5 b(v)l(er)p 1 0 0 TeXcolorrgb 37
w Fh(s)49 b Fg(=)f Fh(v)1185 3273 y Fc(0)p Black 1275
3239 a Fk(.)54 b(The)38 b(prob)m(lem)f(then)h(has)f(a)h(simple)f(Dy-)3
3450 y(namic)59 b(Prog)n(r)n(amming)h(f)-5 b(or)t(m)n(ulation)59
b(with)h(a)p 1 0 0 TeXcolorrgb 60 w Fg(\002\()p Fh(mn)3437
3392 y Fc(2)3527 3450 y Fg(\))p Black 60 w Fk(so-)3 3662
y(lution.)82 b(W)-5 b(e)55 b(will)f(no)n(w)g(see)h(ho)n(w)f(to)g(use)h
(monotone-matr)r(ix)3 3873 y(proper)7 b(ties)34 b(\(the)g(SMA)-8
b(WK)36 b(algor)r(ithm\))e(to)h(reduce)f(this)g(do)n(wn)3
4084 y(to)p 1 0 0 TeXcolorrgb 46 w Fg(\002\()p Fh(mn)p
Fg(\))p Black Fk(.)3 4496 y(The)66 b(algor)r(ithm)g(in)g(this)f(paper)h
(appears)f(in:)p 0 0 1 TeXcolorrgb 98 w(G.)h(W)-5 b(oegin-)3
4707 y(ger)d(,)55 b(\223Monge)e(str)r(ik)m(es)f(again:)72
b(optimal)52 b(placement)g(of)h(w)n(eb)3 4918 y(pro)-5
b(xies)50 b(in)g(the)g(inter)t(net,)-17 b(\224)52 b Fe(Oper)n(ations)d
(Research)h(Letters)n(,)3 5130 y Fk(27\(3\),)c(pp)-6
b(.)57 b(93-96)45 b(\(2000\).)p Black Black 3553 5372
a Fj(8)p Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black Black Black Black 1375 355
1150 5 v 1375 591 5 237 v 0 0 1 TeXcolorrgb 1422 515
a Fl(The)46 b(DP)g(setup)p Black 2520 591 V 1375 596
1150 5 v 3 986 a Fk(Set)p 1 0 0 TeXcolorrgb 46 w Fh(d)387
1007 y Fd(q)511 986 y Fg(=)i Fh(d)p Fg(\()p Fh(v)976
1007 y Fd(q)1051 986 y Fh(;)29 b(v)1215 1020 y Fd(q)5
b Fa(\000)p Fc(1)1489 986 y Fg(\))p Black Fk(.)57 b(Note)46
b(that)f(if)p 1 0 0 TeXcolorrgb 46 w Fh(i)k(<)f(j)p Black
10 w Fk(,)229 1238 y(then)p 1 0 0 TeXcolorrgb 46 w Fh(d)p
Fg(\()p Fh(v)853 1273 y Fd(i)907 1238 y Fh(;)29 b(v)1071
1273 y Fd(j)1142 1238 y Fg(\))49 b(=)1480 1125 y Ff(P)1632
1155 y Fd(j)1632 1300 y(q)5 b Fc(=)p Fd(i)p Fc(+1)2139
1238 y Fh(d)2229 1259 y Fd(q)p Black 2304 1238 a Fk(.)57
b(Set)p 1 0 0 TeXcolorrgb 125 1770 a Fg(~)-98 b Fh(a)p
Fg(\()p Fh(i;)29 b(j)10 b Fg(\))49 b(=)959 1571 y Fd(j)8
b Fa(\000)p Fc(1)989 1628 y Ff(X)860 1963 y Fd(`)p Fc(=)p
Fd(i)p Fc(+1)1353 1770 y Fh(w)1479 1809 y Fd(`)1543 1770
y Fh(d)p Fg(\()p Fh(v)1799 1809 y Fd(`)1863 1770 y Fh(;)29
b(v)2027 1804 y Fd(i)2081 1770 y Fg(\))49 b(=)2518 1571
y Fd(j)8 b Fa(\000)p Fc(1)2548 1628 y Ff(X)2419 1963
y Fd(`)p Fc(=)p Fd(i)p Fc(+1)3119 1585 y Fd(`)3046 1628
y Ff(X)2912 1963 y Fd(q)d Fc(=)p Fd(i)p Fc(+1)3415 1770
y Fh(w)3541 1809 y Fd(`)3605 1770 y Fh(d)3695 1791 y
Fd(q)p Black 3 2573 a Fk(Let)p 1 0 0 TeXcolorrgb 68 w
Fh(F)24 b Fg([)p Fh(j;)30 b(k)t Fg(])p Black 69 w Fk(denote)68
b(the)p 0 0 1 TeXcolorrgb 68 w Fe(minim)n(um)f(latency)f(on)i(the)g(v)l
(er-)3 2802 y(tices)p 1 0 0 TeXcolorrgb 68 w Fh(v)498
2836 y Fc(0)588 2802 y Fh(;)29 b(v)752 2836 y Fc(1)842
2802 y Fh(;)g(:)g(:)g(:)g(;)g(v)1318 2836 y Fd(j)p 0 0 1
TeXcolorrgb 1458 2802 a Fe(when)69 b(using)f Fh(k)74
b Fe(pro)-5 b(xies)68 b(where)h(the)3 3032 y(r)r(ightmost)45
b(pro)-5 b(xy)45 b(is)g(on)h(node)p 1 0 0 TeXcolorrgb
46 w Fh(v)2071 3066 y Fd(j)p 0 0 1 TeXcolorrgb Black
2141 3032 a Fk(.)57 b(Then)p 1 0 0 TeXcolorrgb 733 3744
a Fi(8)p Fh(j;)744 b(F)24 b Fg([)p Fh(j;)30 b Fg(1])158
b(=)128 b(~)-98 b Fh(a)p Fg(\(0)p Fh(;)30 b(j)10 b Fg(\))733
3943 y Fi(8)p Fh(k)54 b(>)48 b Fg(0)431 b Fh(F)24 b Fg([1)p
Fh(;)30 b(k)t Fg(])134 b(=)f(0)p Black 710 4222 a Fk(and)45
b(f)-5 b(or)46 b Fg(2)j Fi(\024)g Fh(j)58 b Fi(\024)48
b Fh(n)e Fk(and)g Fg(2)j Fi(\024)f Fh(k)54 b Fi(\024)48
b Fh(m)p Fk(,)p 1 0 0 TeXcolorrgb 26 4563 a Fh(F)24 b
Fg([)p Fh(j;)29 b(k)t Fg(])134 b(=)f(min)p Fi(f)p Fh(F)24
b Fg([)p Fh(i;)29 b(k)44 b Fi(\000)39 b Fg(1])g(+)34
b(~)-98 b Fh(a)p Fg(\()p Fh(i;)29 b(j)10 b Fg(\))78 b(:)h(1)49
b Fi(\024)f Fh(i)h Fi(\024)f Fh(j)10 b Fi(g)122 4817
y Fh(O)5 b(P)24 b(T)158 b Fg(=)133 b(min)p Fi(f)p Fh(F)24
b Fg([)p Fh(i;)29 b(m)p Fg(])40 b(+)33 b(~)-98 b Fh(a)q
Fg(\()p Fh(i;)29 b(n)p Fg(\))78 b(:)g(1)49 b Fi(\024)g
Fh(i)f Fi(\024)h Fh(n)p Fi(g)p Black 49 5127 a Fk(where)p
1 0 0 TeXcolorrgb 46 w Fh(O)5 b(P)24 b(T)p Black 71 w
Fk(is)46 b(the)f(\002nal)g(solution)g(w)n(e)h(are)g(looking)f(f)-5
b(or)d(.)p Black 3553 5372 a Fj(9)p Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black Black 1 0 0 TeXcolorrgb
0 0 1 TeXcolorrgb 573 1104 a Fk(Recall)p 1 0 0 TeXcolorrgb
159 w Fg(~)-98 b Fh(a)p Fg(\()p Fh(i;)30 b(j)10 b Fg(\))48
b(=)2026 905 y Fd(j)8 b Fa(\000)p Fc(1)2056 962 y Ff(X)1928
1297 y Fd(`)p Fc(=)p Fd(i)p Fc(+1)2628 919 y Fd(`)2554
962 y Ff(X)2420 1297 y Fd(q)d Fc(=)p Fd(i)p Fc(+1)2924
1104 y Fh(w)3050 1142 y Fd(`)3114 1104 y Fh(d)3204 1124
y Fd(q)3278 1104 y Fh(:)p Black 0 0 1 TeXcolorrgb 3 1919
a Fl(Lemma:)57 b Fk(Set)p 1 0 0 TeXcolorrgb 697 2367
a Fh(D)5 b Fg([)p Fh(j)10 b Fg(])49 b(=)1413 2168 y Fd(j)1343
2225 y Ff(X)1301 2555 y Fd(q)5 b Fc(=0)1621 2367 y Fh(d)1711
2388 y Fd(q)1786 2367 y Fh(;)194 b(W)24 b Fg([)p Fh(j)10
b Fg(])49 b(=)2760 2182 y Fd(n)2701 2225 y Ff(X)2674
2560 y Fd(`)p Fc(=)p Fd(j)2964 2367 y Fh(w)3090 2406
y Fd(`)3154 2367 y Fh(;)p 0 0 1 TeXcolorrgb 1 0 0 TeXcolorrgb
258 3105 a(X)13 b Fg([)p Fh(j)d Fg(])49 b(=)982 2906
y Fd(j)912 2963 y Ff(X)871 3293 y Fd(q)5 b Fc(=0)1278
2920 y Fd(n)1219 2963 y Ff(X)1190 3298 y Fd(`)p Fc(=)p
Fd(q)1483 3105 y Fh(w)1609 3143 y Fd(`)1673 3105 y Fh(d)1763
3125 y Fd(q)1838 3105 y Fh(;)195 b(Y)38 b Fg([)p Fh(j)10
b Fg(])49 b(=)2764 2920 y Fd(n)2704 2963 y Ff(X)2678
3298 y Fd(`)p Fc(=)p Fd(j)3083 2920 y(`)3009 2963 y Ff(X)2968
3293 y Fd(q)5 b Fc(=0)3287 3105 y Fh(w)3413 3143 y Fd(`)3477
3105 y Fh(d)3567 3125 y Fd(q)p 0 0 1 TeXcolorrgb 49 3558
a Fk(Then)p 1 0 0 TeXcolorrgb 286 3915 a Fg(~)-98 b Fh(a)p
Fg(\()p Fh(i;)29 b(j)10 b Fg(\))49 b(=)f Fh(Y)39 b Fg([0])h
Fi(\000)f Fh(Y)f Fg([)p Fh(j)10 b Fg(])39 b Fi(\000)g
Fh(X)13 b Fg([)p Fh(i)p Fg(])40 b(+)e Fh(D)5 b Fg([)p
Fh(i)p Fg(])40 b Fi(\001)e Fh(W)24 b Fg([)p Fh(j)10 b
Fg(])p Fh(:)p 0 0 1 TeXcolorrgb Black 0 0 1 TeXcolorrgb
3 4712 a Fl(Cor)m(ollar)r(y:)71 b Fk(Using)52 b(only)p
1 0 0 TeXcolorrgb 52 w Fg(\002\()p Fh(n)p Fg(\))p 0 0 1
TeXcolorrgb 53 w Fk(preprocessing)f(time)h(and)p 1 0 0
TeXcolorrgb 3 4944 a Fg(\002\()p Fh(n)p Fg(\))p 0 0 1
TeXcolorrgb 46 w Fk(space)n(,)p 1 0 0 TeXcolorrgb 39
w Fg(~)-98 b Fh(a)q Fg(\()p Fh(i;)29 b(j)10 b Fg(\))p
0 0 1 TeXcolorrgb 46 w Fk(can)45 b(be)h(calculated)e(in)p
1 0 0 TeXcolorrgb 45 w Fh(O)5 b Fg(\(1\))p 0 0 1 TeXcolorrgb
47 w Fk(time)n(.)p Black Black 3553 5372 a Fj(10)p Black
eop end
%%Page: 11 11
TeXDict begin 11 10 bop Black Black 0 0 1 TeXcolorrgb
3 32 a Fl(Lemma:)57 b Fk(If)p 1 0 0 TeXcolorrgb 45 w
Fh(i)39 b Fg(+)g(1)49 b Fi(\024)f Fh(j)p 0 0 1 TeXcolorrgb
56 w Fk(then)p 1 0 0 TeXcolorrgb -2 340 a Fg(~)-98 b
Fh(a)p Fg(\()p Fh(i;)30 b(j)10 b Fg(\))28 b(+)c(~)-98
b Fh(a)p Fg(\()p Fh(i)29 b Fg(+)f(1)p Fh(;)h(j)39 b Fg(+)28
b(1\))49 b Fi(\024)44 b Fg(~)-98 b Fh(a)p Fg(\()p Fh(i;)29
b(j)38 b Fg(+)29 b(1\))g(+)24 b(~)-99 b Fh(a)q Fg(\()p
Fh(i)28 b Fg(+)h(1)p Fh(;)g(j)10 b Fg(\))p Fh(:)p 0 0 1
TeXcolorrgb 49 608 a Fk(Fur)d(ther)t(more)n(,)44 b(let)i
Fh(M)63 b Fk(be)46 b(the)p 1 0 0 TeXcolorrgb 45 w Fh(n)39
b Fi(\002)g Fh(n)p 0 0 1 TeXcolorrgb 45 w Fk(matr)r(ix)45
b(with)h(entr)r(ies)p 1 0 0 TeXcolorrgb 908 1009 a Fh(a)1001
1043 y Fd(i;j)1212 1009 y Fg(=)1421 758 y Ff(\()1598
909 y Fg(~)-98 b Fh(a)q Fg(\()p Fh(i;)29 b(j)10 b Fg(\))178
b Fk(if)46 b Fh(i)j Fi(\024)f Fh(j)1603 1109 y Fi(1)429
b Fk(otherwise)p 0 0 1 TeXcolorrgb 49 1381 a(Then)p 1 0 0
TeXcolorrgb 46 w Fh(M)p 0 0 1 TeXcolorrgb 63 w Fk(is)45
b(Monge)n(.)p Black 0 0 1 TeXcolorrgb 3 1772 a Fl(Pr)m(oof:)p
Black 57 w Fk(Recall)g(that)p 1 0 0 TeXcolorrgb 286 2081
a Fg(~)-98 b Fh(a)p Fg(\()p Fh(i;)29 b(j)10 b Fg(\))49
b(=)f Fh(Y)39 b Fg([0])h Fi(\000)f Fh(Y)f Fg([)p Fh(j)10
b Fg(])39 b Fi(\000)g Fh(X)13 b Fg([)p Fh(i)p Fg(])40
b(+)e Fh(D)5 b Fg([)p Fh(i)p Fg(])40 b Fi(\001)e Fh(W)24
b Fg([)p Fh(j)10 b Fg(])p Fh(:)p Black 49 2348 a Fk(Then,)46
b(if)p 1 0 0 TeXcolorrgb 45 w Fh(i)39 b Fg(+)g(1)49 b
Fi(\024)f Fh(j)p Black 1 0 0 TeXcolorrgb -2 2657 a Fg(~)-98
b Fh(a)p Fg(\()p Fh(i;)30 b(j)10 b Fg(\))132 b(+)c(~)-98
b Fh(a)p Fg(\()p Fh(i)39 b Fg(+)g(1)p Fh(;)29 b(j)49
b Fg(+)39 b(1\))g Fi(\000)34 b Fg(~)-98 b Fh(a)p Fg(\()p
Fh(i;)29 b(j)49 b Fg(+)39 b(1\))g Fi(\000)34 b Fg(~)-98
b Fh(a)p Fg(\()p Fh(i)39 b Fg(+)g(1)p Fh(;)29 b(j)10
b Fg(\))608 3116 y(=)133 b Fh(D)5 b Fg([)p Fh(i)p Fg(])39
b Fi(\001)g Fh(W)24 b Fg([)p Fh(j)10 b Fg(])39 b(+)g
Fh(D)5 b Fg([)p Fh(i)39 b Fg(+)f(1])i Fi(\001)f Fh(W)24
b Fg([)p Fh(j)49 b Fg(+)38 b(1])1022 3346 y Fi(\000)p
Fh(D)5 b Fg([)p Fh(i)p Fg(])39 b Fi(\001)f Fh(W)24 b
Fg([)p Fh(j)49 b Fg(+)39 b(1])h Fi(\000)e Fh(D)5 b Fg([)p
Fh(i)39 b Fg(+)g(1])g Fi(\001)g Fh(W)24 b Fg([)p Fh(j)10
b Fg(])608 3805 y(=)902 3810 y(\()982 3805 y Fh(D)5 b
Fg([)p Fh(i)p Fg(])39 b Fi(\000)g Fh(D)5 b Fg([)p Fh(i)39
b Fg(+)g(1])2189 3810 y(\))2309 3805 y Fi(\001)2396 3810
y Fg(\()2477 3805 y Fh(W)24 b Fg([)p Fh(j)10 b Fg(])39
b Fi(\000)f Fh(W)24 b Fg([)p Fh(j)49 b Fg(+)39 b(1])3807
3810 y(\))608 4035 y(=)133 b Fi(\000)p Fh(d)1129 4074
y Fd(i)p Fc(+1)1442 4035 y Fi(\001)39 b Fh(w)1656 4074
y Fd(j)8 b Fc(+1)1996 4035 y Fh(<)48 b Fg(0)p Black 3
4693 a Fk(T)-20 b(o)49 b(see)f(that)p 1 0 0 TeXcolorrgb
49 w Fh(M)p Black 66 w Fk(is)g(Monge)g(simply)f(note)i(that)f(if)p
1 0 0 TeXcolorrgb 49 w Fh(i)41 b Fg(+)g(1)54 b Fh(>)f(j)p
Black 3 4898 a Fk(then)43 b(the)g(r)r(ight)g(hand)g(side)f(of)h(the)g
(corresponding)e(inequal-)3 5103 y(ity)k(in)p 1 0 0 TeXcolorrgb
46 w Fh(a)482 5137 y Fd(i;j)p Black 690 5103 a Fk(is)p
1 0 0 TeXcolorrgb 45 w Fi(1)p Black 46 w Fk(and)g(is)h(theref)-5
b(ore)45 b(ob)m(viously)e(correct.)p Black 3553 5372
a Fj(11)p Black eop end
%%Page: 12 12
TeXDict begin 12 11 bop Black Black 0 0 1 TeXcolorrgb
3 996 a Fl(Lemma:)56 b Fk(Let)p 1 0 0 TeXcolorrgb 45
w Fh(M)66 b Fg(=)49 b(\()p Fh(a)1586 1030 y Fd(i;j)1748
996 y Fg(\))p 0 0 1 TeXcolorrgb 46 w Fk(be)c(an)g Fh(n)36
b Fi(\002)g Fh(m)45 b Fk(Monge)g(matr)r(ix,)3 1229 y(i.e)n(.,)p
1 0 0 TeXcolorrgb 620 1544 a Fh(a)713 1578 y Fd(i;j)914
1544 y Fg(+)39 b Fh(a)1207 1583 y Fd(i)p Fc(+1)p Fd(;j)8
b Fc(+1)1857 1544 y Fi(\024)49 b Fh(a)2136 1583 y Fd(i;j)8
b Fc(+1)2557 1544 y Fg(+)38 b Fh(a)2849 1583 y Fd(i)p
Fc(+1)p Fd(;j)3231 1544 y Fh(:)p 0 0 1 TeXcolorrgb 3
2341 a Fk(Let)p 1 0 0 TeXcolorrgb 46 w Fh(F)390 2375
y Fd(i)444 2341 y Fh(;)29 b(i)49 b Fg(=)f(1)p Fh(;)29
b(:)g(:)g(:)g(;)h(n)p 0 0 1 TeXcolorrgb Fk(,)164 b(be)46
b(an)n(y)f(constants)n(.)55 b(Set)p 1 0 0 TeXcolorrgb
1264 2698 a Fh(b)1339 2732 y Fd(i;j)1550 2698 y Fg(=)48
b Fh(F)1870 2732 y Fd(i)1964 2698 y Fg(+)38 b Fh(a)p
Fg(\()p Fh(i;)30 b(j)10 b Fg(\))p 0 0 1 TeXcolorrgb 49
3014 a Fk(Then)p 1 0 0 TeXcolorrgb 46 w Fh(b)547 3048
y Fd(i;j)p 0 0 1 TeXcolorrgb 709 3014 a Fk(,)45 b(vie)m(w)n(ed)h(as)f
(a)h(matr)r(ix,)f(is)h(also)f(Monge)n(.)p Black 0 0 1
TeXcolorrgb 3 3495 a Fl(Pr)m(oof:)p Black 1 0 0 TeXcolorrgb
3 3852 a Fh(b)78 3886 y Fd(i;j)279 3852 y Fg(+)39 b Fh(b)554
3891 y Fd(i)p Fc(+1)p Fd(;j)8 b Fc(+1)1288 3852 y Fg(=)133
b Fh(F)1693 3886 y Fd(i)1786 3852 y Fg(+)39 b Fh(a)2079
3886 y Fd(i;j)2445 3852 y Fg(+)204 b Fh(F)2921 3891 y
Fd(i)p Fc(+1)3234 3852 y Fg(+)39 b Fh(a)3527 3891 y Fd(i)p
Fc(+1)p Fd(;j)8 b Fc(+1)1300 4110 y Fi(\024)145 b Fh(F)1693
4144 y Fd(i)1786 4110 y Fg(+)39 b Fh(a)2079 4148 y Fd(i;j)8
b Fc(+1)2665 4110 y Fg(+)204 b Fh(F)3141 4148 y Fd(i)p
Fc(+1)3415 4110 y Fh(a)3508 4148 y Fd(i)p Fc(+1)p Fd(;j)1288
4367 y Fg(=)133 b Fh(b)1657 4406 y Fd(i;j)8 b Fc(+1)2078
4367 y Fg(+)39 b Fh(b)2353 4406 y Fd(i)p Fc(+1)p Fd(;j)2734
4367 y Fh(:)p Black Black 3553 5372 a Fj(12)p Black eop
end
%%Page: 13 13
TeXDict begin 13 12 bop Black Black 3 651 a Fk(Our)46
b(DP)g(is)p 3 675 3993 5 v 3 2382 5 1708 v 1 0 0 TeXcolorrgb
783 949 a Fi(8)p Fh(j;)744 b(F)24 b Fg([)p Fh(j;)29 b
Fg(1])159 b(=)127 b(~)-98 b Fh(a)q Fg(\(0)p Fh(;)29 b(j)10
b Fg(\))783 1148 y Fi(8)p Fh(k)53 b(>)c Fg(0)431 b Fh(F)24
b Fg([1)p Fh(;)30 b(k)t Fg(])134 b(=)e(0)p Black 759
1419 a Fk(and)46 b(f)-5 b(or)46 b Fg(2)j Fi(\024)f Fh(j)59
b Fi(\024)48 b Fh(n)e Fk(and)f Fg(2)k Fi(\024)g Fh(k)k
Fi(\024)c Fh(m)p Fk(,)p 1 0 0 TeXcolorrgb 76 1768 a Fh(F)24
b Fg([)p Fh(j;)29 b(k)t Fg(])134 b(=)e(min)p Fi(f)p Fh(F)24
b Fg([)p Fh(i;)30 b(k)44 b Fi(\000)38 b Fg(1])i(+)33
b(~)-98 b Fh(a)q Fg(\()p Fh(i;)29 b(j)10 b Fg(\))78 b(:)g(1)49
b Fi(\024)g Fh(i)f Fi(\024)h Fh(j)10 b Fi(g)172 2025
y Fh(O)5 b(P)24 b(T)158 b Fg(=)132 b(min)p Fi(f)p Fh(F)24
b Fg([)p Fh(i;)30 b(m)p Fg(])39 b(+)34 b(~)-98 b Fh(a)p
Fg(\()p Fh(i;)29 b(n)p Fg(\))78 b(:)h(1)49 b Fi(\024)f
Fh(i)h Fi(\024)f Fh(n)p Fi(g)p Black 3991 2382 V 3 2387
3993 5 v 3 2773 a Fk(Re)m(wr)r(ite)e(this)f(as)p 3 3046
V 3 5023 5 1977 v 1 0 0 TeXcolorrgb 783 3320 a Fi(8)p
Fh(j;)744 b(F)24 b Fg([)p Fh(j;)29 b Fg(1])159 b(=)127
b(~)-98 b Fh(a)q Fg(\(0)p Fh(;)29 b(j)10 b Fg(\))783
3519 y Fi(8)p Fh(k)53 b(>)c Fg(0)431 b Fh(F)24 b Fg([1)p
Fh(;)30 b(k)t Fg(])134 b(=)e(0)p Black 588 3789 a Fk(and)46
b(f)-5 b(or)46 b Fg(2)j Fi(\024)f Fh(j)59 b Fi(\024)48
b Fh(n)e Fk(and)f Fg(2)k Fi(\024)g Fh(k)k Fi(\024)c Fh(m)39
b Fg(+)g(1)p Fk(,)p 1 0 0 TeXcolorrgb 974 4139 a Fh(b)1049
4070 y Fd(k)1049 4184 y(i;j)1344 4139 y Fg(=)132 b Fh(F)24
b Fg([)p Fh(i;)30 b(k)44 b Fi(\000)38 b Fg(1])i(+)34
b(~)-98 b Fh(a)p Fg(\()p Fh(i;)29 b(j)10 b Fg(\))714
4408 y Fh(F)24 b Fg([)p Fh(j;)30 b(k)t Fg(])134 b(=)e(min)p
Fi(f)p Fh(b)2110 4340 y Fd(k)2110 4454 y(i;j)2350 4408
y Fg(:)78 b(1)49 b Fi(\024)g Fh(i)f Fi(\024)h Fh(j)10
b Fi(g)810 4666 y Fh(O)5 b(P)24 b(T)159 b Fg(=)132 b
Fh(F)24 b Fg([)p Fh(n;)30 b(m)39 b Fg(+)g(1])p Black
3991 5023 V 3 5028 3993 5 v Black 3553 5372 a Fj(13)p
Black eop end
%%Page: 14 14
TeXDict begin 14 13 bop Black Black 3 515 a Fk(Our)46
b(DP)g(is)f(no)n(w)p 81 539 3693 5 v 81 2516 5 1977 v
1 0 0 TeXcolorrgb 710 813 a Fi(8)p Fh(j;)744 b(F)24 b
Fg([)p Fh(j;)30 b Fg(1])158 b(=)128 b(~)-98 b Fh(a)p
Fg(\(0)p Fh(;)30 b(j)10 b Fg(\))710 1012 y Fi(8)p Fh(k)54
b(>)48 b Fg(0)431 b Fh(F)24 b Fg([1)p Fh(;)30 b(k)t Fg(])134
b(=)f(0)p Black 516 1282 a Fk(and)45 b(f)-5 b(or)46 b
Fg(2)j Fi(\024)g Fh(j)58 b Fi(\024)48 b Fh(n)e Fk(and)g
Fg(2)j Fi(\024)f Fh(k)54 b Fi(\024)48 b Fh(m)39 b Fg(+)g(1)p
Fk(,)p 1 0 0 TeXcolorrgb 901 1632 a Fh(b)976 1563 y Fd(k)976
1677 y(i;j)1271 1632 y Fg(=)133 b Fh(F)24 b Fg([)p Fh(i;)29
b(k)44 b Fi(\000)39 b Fg(1])g(+)34 b(~)-98 b Fh(a)p Fg(\()p
Fh(i;)29 b(j)10 b Fg(\))642 1902 y Fh(F)24 b Fg([)p Fh(j;)29
b(k)t Fg(])134 b(=)f(min)p Fi(f)p Fh(b)2038 1833 y Fd(k)2038
1947 y(i;j)2277 1902 y Fg(:)79 b(1)49 b Fi(\024)f Fh(i)h
Fi(\024)f Fh(j)10 b Fi(g)738 2159 y Fh(O)5 b(P)24 b(T)158
b Fg(=)133 b Fh(F)24 b Fg([)p Fh(n;)29 b(m)39 b Fg(+)g(1])p
Black 3769 2516 V 81 2521 3693 5 v 3 2845 a Fk(Note)46
b(that)g(this)f(can)g(be)h(read)g(as)f(sa)-5 b(ying)45
b(that)g(w)n(e)i(ha)m(v)l(e)p 1 0 0 TeXcolorrgb 3 3050
a Fh(m)13 b Fi(\000)g Fg(1)p Black 40 w Fk(matr)r(ices)p
1 0 0 TeXcolorrgb 37 w Fh(M)1316 2992 y Fc(\(2\))1540
3050 y Fh(;)29 b(M)1805 2992 y Fc(\(3\))2028 3050 y Fh(;)g(:)g(:)g(:)g
(;)g(M)2605 2992 y Fc(\()p Fd(m)p Fc(+1\))p Black 3092
3050 a Fk(,)40 b(where)f(the)3 3256 y(entr)r(ies)46 b(of)p
1 0 0 TeXcolorrgb 45 w Fh(M)918 3198 y Fc(\()p Fd(k)t
Fc(\))p Black 1181 3256 a Fk(are)p 1 0 0 TeXcolorrgb
46 w Fh(b)1541 3198 y Fd(k)1541 3312 y(i;j)p Black 1703
3256 a Fk(.)p 1 0 0 TeXcolorrgb 3 3707 a Fh(F)24 b Fg([)p
Fh(j;)30 b(k)t Fg(])p Black 57 w Fk(are)57 b(the)p 0 0 1
TeXcolorrgb 56 w(ro)n(w-minima)p Black 55 w(of)p 1 0 0
TeXcolorrgb 57 w Fh(M)2428 3648 y Fc(\()p Fd(k)t Fc(\))p
Black 2702 3707 a Fk(and)p 1 0 0 TeXcolorrgb 56 w Fh(O)5
b(P)24 b(T)p Black 82 w Fk(is)56 b(the)p 1 0 0 TeXcolorrgb
3 3912 a Fh(n)p Black Fk('th)45 b(ro)n(w-minima)f(of)p
1 0 0 TeXcolorrgb 46 w Fh(M)1598 3854 y Fc(\()p Fd(m)p
Fc(+1\))p Black 2085 3912 a Fk(.)3 4306 y(If)e(the)p
1 0 0 TeXcolorrgb 43 w Fh(M)597 4247 y Fc(\()p Fd(k)t
Fc(\))p Black 856 4306 a Fk(w)n(ere)h(all)p 0 0 1 TeXcolorrgb
42 w(Monge)p Black 41 w(w)n(e)g(could)f(use)g(the)p 0 0 1
TeXcolorrgb 42 w(SMA)-8 b(WK)p Black 3 4511 a(algor)r(ithm)75
b(to)g(\002nd)g(each)g(of)g(their)g(ro)n(w-minima)f(in)p
1 0 0 TeXcolorrgb 76 w Fh(O)5 b Fg(\()p Fh(n)p Fg(\))p
Black 3 4716 a Fk(time)n(,)76 b(and)70 b(all)g(of)h(them)f(in)p
1 0 0 TeXcolorrgb 70 w Fh(O)5 b Fg(\()p Fh(mn)p Fg(\))p
Black 72 w Fk(time)n(.)129 b(W)-5 b(e)71 b(will)f(no)n(w)3
4922 y(sho)n(w)58 b(that)h(the)m(y)f(are)h(all)g(Monge)n(,)i
(immediately)56 b(giving)i(an)p 1 0 0 TeXcolorrgb 3 5127
a Fh(O)5 b Fg(\()p Fh(mn)p Fg(\))p Black 47 w Fk(time)45
b(algor)r(ithm)g(f)-5 b(or)46 b(calculating)p 1 0 0 TeXcolorrgb
43 w Fh(O)5 b(P)24 b(T)p Black 24 w Fk(.)p Black 3553
5372 a Fj(14)p Black eop end
%%Page: 15 15
TeXDict begin 15 14 bop Black Black 3 558 a Fk(Our)46
b(DP)g(is)f(no)n(w)p 81 582 3693 5 v 81 2559 5 1977 v
1 0 0 TeXcolorrgb 710 856 a Fi(8)p Fh(j;)744 b(F)24 b
Fg([)p Fh(j;)30 b Fg(1])158 b(=)128 b(~)-98 b Fh(a)p
Fg(\(0)p Fh(;)30 b(j)10 b Fg(\))710 1055 y Fi(8)p Fh(k)54
b(>)48 b Fg(0)431 b Fh(F)24 b Fg([1)p Fh(;)30 b(k)t Fg(])134
b(=)f(0)p Black 516 1325 a Fk(and)45 b(f)-5 b(or)46 b
Fg(2)j Fi(\024)g Fh(j)58 b Fi(\024)48 b Fh(n)e Fk(and)g
Fg(2)j Fi(\024)f Fh(k)54 b Fi(\024)48 b Fh(m)39 b Fg(+)g(1)p
Fk(,)p 1 0 0 TeXcolorrgb 901 1675 a Fh(b)976 1606 y Fd(k)976
1720 y(i;j)1271 1675 y Fg(=)133 b Fh(F)24 b Fg([)p Fh(i;)29
b(k)44 b Fi(\000)39 b Fg(1])g(+)34 b(~)-98 b Fh(a)p Fg(\()p
Fh(i;)29 b(j)10 b Fg(\))642 1944 y Fh(F)24 b Fg([)p Fh(j;)29
b(k)t Fg(])134 b(=)f(min)p Fi(f)p Fh(b)2038 1876 y Fd(k)2038
1990 y(i;j)2277 1944 y Fg(:)79 b(1)49 b Fi(\024)f Fh(i)h
Fi(\024)f Fh(j)10 b Fi(g)738 2202 y Fh(O)5 b(P)24 b(T)158
b Fg(=)133 b Fh(F)24 b Fg([)p Fh(n;)29 b(m)39 b Fg(+)g(1])p
Black 3769 2559 V 81 2564 3693 5 v 3 2993 a Fk(W)-5 b(e)46
b(ha)m(v)l(e)p 1 0 0 TeXcolorrgb 45 w Fh(m)39 b Fi(\000)g
Fg(1)p Black 46 w Fk(matr)r(ices)p 1 0 0 TeXcolorrgb
45 w Fh(M)2068 2935 y Fc(\(2\))2291 2993 y Fh(;)29 b(M)2556
2935 y Fc(\(3\))2780 2993 y Fh(;)g(:)g(:)g(:)g(;)g(M)3357
2935 y Fc(\()p Fd(m)p Fc(+1\))p Black 3844 2993 a Fk(,)3
3225 y(where)46 b(the)g(entr)r(ies)f(of)p 1 0 0 TeXcolorrgb
46 w Fh(M)1690 3167 y Fc(\()p Fd(k)t Fc(\))p Black 1953
3225 a Fk(are)p 1 0 0 TeXcolorrgb 46 w Fh(b)2313 3167
y Fd(k)2313 3281 y(i;j)p Black 2475 3225 a Fk(.)3 3707
y(W)-5 b(e)46 b(ha)m(v)l(e)f(already)g(seen)g(that)p
0 0 1 TeXcolorrgb 3 3939 a(\(I\))p 1 0 0 TeXcolorrgb
41 w Fg(~)-98 b Fh(a)p Fg(\()p Fh(i;)30 b(j)10 b Fg(\))p
0 0 1 TeXcolorrgb 45 w Fk(is)46 b(Monge)n(.)3 4172 y(\(II\))g(If)p
1 0 0 TeXcolorrgb 46 w Fh(a)p Fg(\()p Fh(i;)29 b(j)10
b Fg(\))p 0 0 1 TeXcolorrgb 46 w Fk(is)45 b(Monge)h(then,)f(f)-5
b(or)46 b(an)n(y)p 1 0 0 TeXcolorrgb 45 w Fh(F)2692 4206
y Fd(i)p 0 0 1 TeXcolorrgb 2746 4172 a Fk(,)p 1 0 0 TeXcolorrgb
183 4404 a Fh(b)258 4438 y Fd(i;j)469 4404 y Fg(=)i Fh(F)789
4438 y Fd(i)882 4404 y Fg(+)39 b Fh(a)p Fg(\()p Fh(i;)30
b(j)10 b Fg(\))p 0 0 1 TeXcolorrgb 45 w Fk(is)46 b(Monge)n(.)p
Black 3 4886 a(So)-7 b(,)47 b(b)m(y)e(induction,)f(all)h(of)h(the)p
1 0 0 TeXcolorrgb 46 w Fh(M)2119 4828 y Fc(\()p Fd(k)t
Fc(\))p Black 2382 4886 a Fk(are)g(Monge)n(,)3 5118 y(and)g(w)n(e)g
(are)g(done)n(.)p Black 3553 5372 a Fj(15)p Black eop
end
%%Page: 16 16
TeXDict begin 16 15 bop Black Black Black Black 1018
533 1865 5 v 1018 774 5 242 v 0 0 1 TeXcolorrgb 1064
697 a Fl(The)46 b(SMA)-10 b(WK)47 b(algorithm)p Black
2877 774 V 1018 779 1865 5 v 3 1178 a Fk(T)-20 b(o)54
b(\002nd)f(the)g(ro)n(w)g(maxima)f(of)i(an)p 1 0 0 TeXcolorrgb
53 w Fh(n)44 b Fi(\002)g Fh(m)30 b Fg(\()p Fh(n)62 b
Fi(\024)g Fh(m)p Fg(\))p Black 54 w Fk(totally)3 1411
y(monotone)45 b(matr)r(ix)p 1 0 0 TeXcolorrgb 45 w Fh(M)p
Black 18 w Fk(:)3 1892 y(Step)i(1:)60 b(The)47 b(algor)r(ithm)f
(reduces)p 1 0 0 TeXcolorrgb 46 w Fh(M)p Black 64 w Fk(to)h(an)p
1 0 0 TeXcolorrgb 47 w Fh(n)40 b Fi(\002)f Fh(n)p Black
47 w Fk(totally-)3 2125 y(monotone)34 b(matr)r(ix)p 1 0 0
TeXcolorrgb 35 w Fh(M)1448 2066 y Fa(0)p Black 1526 2125
a Fk(using)g(subroutine)p 0 0 1 TeXcolorrgb 33 w Fh(R)q(E)9
b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n;)29 b(m)p Fg(\))p
Black Fk(.)3 2357 y(The)62 b(ro)n(w)g(maxima)f(of)p 1 0 0
TeXcolorrgb 62 w Fh(M)1704 2299 y Fa(0)p Black 1809 2357
a Fk(will)g(be)h(the)g(same)g(as)f(the)h(ro)n(w)3 2590
y(maxima)45 b(of)g(corresponding)f(ro)n(ws)i(in)p 1 0 0
TeXcolorrgb 45 w Fh(M)p Black 18 w Fk(.)p 0 0 1 TeXcolorrgb
3 2822 a Fh(R)q(E)9 b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n;)28
b(m)p Fg(\))p Black 47 w Fk(will)45 b(use)p 1 0 0 TeXcolorrgb
46 w Fg(2)p Fh(m)39 b Fi(\000)g Fh(n)p Black 45 w Fk(compar)r(isons)n
(.)3 3304 y(Step)56 b(2:)78 b(All)56 b(the)g(odd)g(ro)n(ws)g(of)p
1 0 0 TeXcolorrgb 56 w Fh(M)2257 3245 y Fa(0)p Black
2356 3304 a Fk(are)h(then)f(e)-5 b(xtr)n(acted)55 b(to)3
3536 y(f)-5 b(or)t(m)46 b(an)p 1 0 0 TeXcolorrgb 46 w
Fh(n=)p Fg(2)38 b Fi(\002)h Fh(n)p Black 45 w Fk(matr)r(ix)p
1 0 0 TeXcolorrgb 46 w Fh(M)1959 3478 y Fa(00)p Black
2041 3536 a Fk(.)3 4018 y(Step)71 b(3:)p 0 0 1 TeXcolorrgb
108 w Fh(R)q(E)9 b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n=)p
Fg(2)p Fh(;)29 b(n)p Fg(\))p Black 71 w Fk(will)71 b(then)g(be)g
(applied)f(to)p 1 0 0 TeXcolorrgb 3 4250 a Fh(M)190 4192
y Fa(00)p Black 345 4250 a Fk(to)j(reduce)e(it)i(to)f(an)p
1 0 0 TeXcolorrgb 72 w Fh(n=)p Fg(2)58 b Fi(\002)f Fh(n=)p
Fg(2)p Black 72 w Fk(totally-monotone)3 4483 y(matr)r(ix)p
1 0 0 TeXcolorrgb 66 w Fh(M)709 4424 y Fa(000)p Black
831 4483 a Fk(,)72 b(again)66 b(without)g(without)g(changing)f(the)h
(ro)n(w)3 4715 y(maxima.)f(This)48 b(is)g(done)h(using)p
1 0 0 TeXcolorrgb 48 w Fg(2)p Fh(n)41 b Fi(\000)g Fh(n=)p
Fg(2)54 b(=)g(3)p Fh(n=)p Fg(2)p Black 49 w Fk(com-)3
4947 y(par)r(isons)n(.)p Black 3553 5372 a Fj(16)p Black
eop end
%%Page: 17 17
TeXDict begin 17 16 bop Black Black Black Black 787 1351
2326 5 v 787 1593 5 242 v 0 0 1 TeXcolorrgb 834 1515
a Fl(The)46 b(SMA)-10 b(WK)46 b(algorithm:)57 b(cont)p
Black 3108 1593 V 787 1598 2326 5 v 3 1997 a Fk(Step)65
b(4:)96 b(The)65 b(algor)r(ithm)f(is)g(then)h(recursiv)l(ely)e(applied)
h(to)p 1 0 0 TeXcolorrgb 3 2229 a Fh(M)190 2171 y Fa(000)p
Black 366 2229 a Fk(to)53 b(deter)t(mine)f(the)h(positions)e(of)i(the)g
(ro)n(w)f(maxima)g(of)p 1 0 0 TeXcolorrgb 3 2462 a Fh(M)190
2403 y Fa(000)p Black 359 2462 a Fk(and)45 b(thus)g(of)p
1 0 0 TeXcolorrgb 46 w Fh(M)1409 2403 y Fa(00)p Black
1492 2462 a Fk(.)3 2943 y(Step)d(5:)55 b(All)42 b(the)f(ro)n(ws)h(and)f
(columns)g(discarded)f(in)i(steps)f(2)3 3176 y(and)46
b(3)g(are)f(retur)t(ned,)h(to)g(yield)p 1 0 0 TeXcolorrgb
44 w Fh(M)2215 3117 y Fa(0)p Black 2258 3176 a Fk(.)3
3657 y(Step)d(6:)56 b(Giv)l(en)42 b(all)g(the)h(positions)f(of)h(maxim)
n(um)f(of)h(the)g(odd)3 3890 y(ro)n(ws)n(,)51 b(i.e)n(.,)g(those)f(of)p
1 0 0 TeXcolorrgb 50 w Fh(M)1591 3831 y Fa(00)p Black
1674 3890 a Fk(,)i(the)e(maxima)g(of)g(the)h(e)-5 b(v)l(en)49
b(ro)n(ws)3 4122 y(can)c(be)h(f)-5 b(ound)46 b(in)p 1 0 0
TeXcolorrgb 45 w Fg(3)p Fh(n=)p Fg(2)p Black 46 w Fk(compar)r(isons)n
(.)p Black 3553 5372 a Fj(17)p Black eop end
%%Page: 18 18
TeXDict begin 18 17 bop Black Black Black Black 438 4452
a @beginspecial 0 @llx 0 @lly 363 @urx 417 @ury 3630
@rwi @setspecial
%%BeginDocument: monge1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge1.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 23 18:59:15 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 363 417
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 417 moveto 0 0 lineto 363 0 lineto 363 417 lineto closepath clip newpath
-34.7 451.3 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 600 3600 m 1500 3600 l 1500 4500 l 600 4500 l
 cp gs col0 s gr 
% Polyline
n 600 3900 m
 1500 3900 l gs col0 s gr 
% Polyline
n 600 4200 m
 1500 4200 l gs col0 s gr 
% Polyline
n 600 3600 m 900 3600 l 900 3900 l 600 3900 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 600 3900 m 900 3900 l 900 4200 l 600 4200 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 1200 4200 m 1500 4200 l 1500 4500 l 1200 4500 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 2700 3600 m 3600 3600 l 3600 4500 l 2700 4500 l
 cp gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2850 4200 m
gs 1 -1 sc (M''') col0 sh gr
% Polyline
n 4800 3600 m 6600 3600 l 6600 4500 l 4800 4500 l
 cp gs col0 s gr 
/Times-Roman ff 720.00 scf sf
5400 4200 m
gs 1 -1 sc (M'') col0 sh gr
% Polyline
n 750 600 m 3150 600 l 3150 2400 l 750 2400 l
 cp gs col0 s gr 
/Times-Roman ff 720.00 scf sf
1725 1650 m
gs 1 -1 sc (M) col0 sh gr
% Polyline
n 4650 600 m 6450 600 l 6450 2400 l 4650 2400 l
 cp gs col0 s gr 
/Times-Roman ff 720.00 scf sf
5325 1650 m
gs 1 -1 sc (M') col0 sh gr
% Polyline
n 1200 5700 m 3000 5700 l 3000 7500 l 1200 7500 l
 cp gs col0 s gr 
% Polyline
n 1200 6000 m
 3000 6000 l gs col0 s gr 
% Polyline
n 1200 6300 m 3000 6300 l
 2925 6300 l gs col0 s gr 
% Polyline
n 1200 6600 m
 3000 6600 l gs col0 s gr 
% Polyline
n 1200 6900 m
 3000 6900 l gs col0 s gr 
% Polyline
n 1200 7200 m
 3000 7200 l gs col0 s gr 
% Polyline
n 1500 5700 m 1800 5700 l 1800 6000 l 1500 6000 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 1500 6300 m 1800 6300 l 1800 6600 l 1500 6600 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 2700 6900 m 3000 6900 l 3000 7200 l 2700 7200 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 4200 5700 m 6000 5700 l 6000 7500 l 4200 7500 l
 cp gs col0 s gr 
% Polyline
n 4200 6000 m
 6000 6000 l gs col0 s gr 
% Polyline
n 4200 6300 m 6000 6300 l
 5925 6300 l gs col0 s gr 
% Polyline
n 4200 6600 m
 6000 6600 l gs col0 s gr 
% Polyline
n 4200 6900 m
 6000 6900 l gs col0 s gr 
% Polyline
n 4200 7200 m
 6000 7200 l gs col0 s gr 
% Polyline
n 4500 5700 m 4800 5700 l 4800 6000 l 4500 6000 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 4500 6300 m 4800 6300 l 4800 6600 l 4500 6600 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 5700 6900 m 6000 6900 l 6000 7200 l 5700 7200 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 4500 6000 m 4800 6000 l 4800 6300 l 4500 6300 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 5100 6600 m 5400 6600 l 5400 6900 l 5100 6900 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 5700 7200 m 6000 7200 l 6000 7500 l 5700 7500 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Ellipse
n 6075 3000 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1875 5100 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3600 6075 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4200 3525 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2100 3525 300 300 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3900 975 300 300 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
4515 1560 m 4515 1440 l 4160 1440 l 4460 1500 l 4160 1560 l cp
eoclip
n 3300 1500 m
 4500 1500 l gs col0 s gr gr

% arrowhead
n 4160 1560 m 4460 1500 l 4160 1440 l 4220 1500 l 4160 1560 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
5490 3465 m 5610 3465 l 5610 3110 l 5550 3410 l 5490 3110 l cp
eoclip
n 5550 2550 m
 5550 3450 l gs col0 s gr gr

% arrowhead
n 5490 3110 m 5550 3410 l 5610 3110 l 5550 3170 l 5490 3110 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
3735 3990 m 3735 4110 l 4090 4110 l 3790 4050 l 4090 3990 l cp
eoclip
n 4650 4050 m
 3750 4050 l gs col0 s gr gr

% arrowhead
n 4090 3990 m 3790 4050 l 4090 4110 l 4030 4050 l 4090 3990 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
1635 3990 m 1635 4110 l 1990 4110 l 1690 4050 l 1990 3990 l cp
eoclip
n 2550 4050 m
 1650 4050 l gs col0 s gr gr

% arrowhead
n 1990 3990 m 1690 4050 l 1990 4110 l 1930 4050 l 1990 3990 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
1290 5565 m 1410 5565 l 1410 5210 l 1350 5510 l 1290 5210 l cp
eoclip
n 1350 4650 m
 1350 5550 l gs col0 s gr gr

% arrowhead
n 1290 5210 m 1350 5510 l 1410 5210 l 1350 5270 l 1290 5210 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
4065 6660 m 4065 6540 l 3710 6540 l 4010 6600 l 3710 6660 l cp
eoclip
n 3150 6600 m
 4050 6600 l gs col0 s gr gr

% arrowhead
n 3710 6660 m 4010 6600 l 3710 6540 l 3770 6600 l 3710 6660 l 
 cp gs col7 1.00 shd ef gr  col0 s
/Times-Roman ff 465.00 scf sf
3795 1140 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 465.00 scf sf
5970 3180 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 465.00 scf sf
4080 3705 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 465.00 scf sf
1965 3705 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 465.00 scf sf
1770 5295 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman ff 465.00 scf sf
3480 6270 m
gs 1 -1 sc (6) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial Black 3553 5372 a Fj(18)p Black eop end
%%Page: 19 19
TeXDict begin 19 18 bop Black Black Black Black 1564
355 773 5 v 1564 591 5 237 v 0 0 1 TeXcolorrgb 1610 515
a Fl(Example)p Black 2331 591 V 1564 596 773 5 v 932
993 2037 5 v 930 1192 5 200 v 998 1134 a Fg(10)p 1269
1192 V 134 w(12)p 1608 1192 V 185 w(9)p 1948 1192 V 184
w(10)p 2287 1192 V 134 w(10)p 2626 1192 V 185 w(6)p 2966
1192 V 932 1197 2037 5 v 930 1396 5 200 v 998 1338 a(10)p
1269 1396 V 134 w(13)p 1608 1396 V 133 w(10)p 1948 1396
V 133 w(11)p 2287 1396 V 134 w(11)p 2626 1396 V 185 w(8)p
2966 1396 V 932 1401 2037 5 v 930 1601 5 200 v 1050 1543
a(7)p 1269 1601 V 185 w(10)p 1608 1601 V 185 w(8)p 1948
1601 V 236 w(9)p 2287 1601 V 236 w(9)p 2626 1601 V 237
w(7)p 2966 1601 V 932 1606 2037 5 v 930 1805 5 200 v
1050 1747 a(8)p 1269 1805 V 185 w(11)p 1608 1805 V 133
w(10)p 1948 1805 V 133 w(11)p 2287 1805 V 134 w(11)p
2626 1805 V 133 w(10)p 2966 1805 V 932 1810 2037 5 v
930 2009 5 200 v 1050 1951 a(4)p 1269 2009 V 236 w(8)p
1608 2009 V 237 w(8)p 1948 2009 V 236 w(9)p 2287 2009
V 185 w(10)p 2626 2009 V 133 w(11)p 2966 2009 V 932 2014
2037 5 v 930 2213 5 200 v 1050 2155 a(1)p 1269 2213 V
236 w(5)p 1608 2213 V 237 w(5)p 1948 2213 V 236 w(6)p
2287 2213 V 236 w(7)p 2626 2213 V 237 w(9)p 2966 2213
V 932 2218 2037 5 v 983 2597 1934 5 v 981 2796 5 200
v 1050 2738 a(10)p 1320 2796 V 133 w(12)p 1660 2796 V
134 w(9)p 1896 2796 V 133 w(10)p 2235 2796 V 133 w(10)p
2575 2796 V 185 w(6)p 2914 2796 V 983 2801 1934 5 v 981
3000 5 200 v 1101 2942 a(7)p 1320 3000 V 185 w(10)p 1660
3000 V 134 w(8)p 1896 3000 V 184 w(9)p 2235 3000 V 237
w(9)p 2575 3000 V 236 w(7)p 2914 3000 V 983 3005 1934
5 v 981 3205 5 200 v 1101 3147 a(4)p 1320 3205 V 237
w(8)p 1660 3205 V 185 w(8)p 1896 3205 V 184 w(9)p 2235
3205 V 185 w(10)p 2575 3205 V 134 w(11)p 2914 3205 V
983 3210 1934 5 v 1441 3588 1019 5 v 1439 3787 5 200
v 1507 3729 a(12)p 1778 3787 V 134 w(10)p 2117 3787 V
185 w(6)p 2457 3787 V 1441 3792 1019 5 v 1439 3992 5
200 v 1507 3934 a(10)p 1778 3992 V 185 w(9)p 2117 3992
V 237 w(7)p 2457 3992 V 1441 3997 1019 5 v 1439 4196
5 200 v 1559 4138 a(8)p 1778 4196 V 185 w(10)p 2117 4196
V 133 w(11)p 2457 4196 V 1441 4201 1019 5 v 1441 4579
V 1439 4779 5 200 v 1 0 0 TeXcolorrgb 1507 4721 a(12)p
Black 1778 4779 V 134 w(10)p 2117 4779 V 185 w(6)p 2457
4779 V 1441 4784 1019 5 v 1439 4983 5 200 v 1 0 0 TeXcolorrgb
1507 4925 a(10)p Black 1778 4983 V 185 w(9)p 2117 4983
V 237 w(7)p 2457 4983 V 1441 4988 1019 5 v 1439 5187
5 200 v 1559 5129 a(8)p 1778 5187 V 185 w(10)p 2117 5187
V 1 0 0 TeXcolorrgb 133 w(11)p Black 2457 5187 V 1441
5192 1019 5 v Black 3553 5372 a Fj(19)p Black eop end
%%Page: 19 20
TeXDict begin 19 19 bop Black Black 932 1398 2037 5 v
930 1597 5 200 v 998 1539 a Fg(10)p 1269 1597 V 1 0 0
TeXcolorrgb 134 w(12)p Black 1608 1597 V 185 w(9)p 1948
1597 V 184 w(10)p 2287 1597 V 134 w(10)p 2626 1597 V
185 w(6)p 2966 1597 V 932 1602 2037 5 v 930 1802 5 200
v 998 1743 a(10)p 1269 1802 V 134 w(13)p 1608 1802 V
133 w(10)p 1948 1802 V 133 w(11)p 2287 1802 V 134 w(11)p
2626 1802 V 185 w(8)p 2966 1802 V 932 1807 2037 5 v 930
2006 5 200 v 1050 1948 a(7)p 1269 2006 V 1 0 0 TeXcolorrgb
185 w(10)p Black 1608 2006 V 185 w(8)p 1948 2006 V 236
w(9)p 2287 2006 V 236 w(9)p 2626 2006 V 237 w(7)p 2966
2006 V 932 2011 2037 5 v 930 2210 5 200 v 1050 2152 a(8)p
1269 2210 V 185 w(11)p 1608 2210 V 133 w(10)p 1948 2210
V 133 w(11)p 2287 2210 V 134 w(11)p 2626 2210 V 133 w(10)p
2966 2210 V 932 2215 2037 5 v 930 2414 5 200 v 1050 2356
a(4)p 1269 2414 V 236 w(8)p 1608 2414 V 237 w(8)p 1948
2414 V 236 w(9)p 2287 2414 V 185 w(10)p 2626 2414 V 1 0 0
TeXcolorrgb 133 w(11)p Black 2966 2414 V 932 2419 2037
5 v 930 2619 5 200 v 1050 2560 a(1)p 1269 2619 V 236
w(5)p 1608 2619 V 237 w(5)p 1948 2619 V 236 w(6)p 2287
2619 V 236 w(7)p 2626 2619 V 237 w(9)p 2966 2619 V 932
2623 2037 5 v 932 3077 V 930 3276 5 200 v 998 3218 a(10)p
1269 3276 V 1 0 0 TeXcolorrgb 134 w(12)p Black 1608 3276
V 185 w(9)p 1948 3276 V 184 w(10)p 2287 3276 V 134 w(10)p
2626 3276 V 185 w(6)p 2966 3276 V 932 3281 2037 5 v 930
3480 5 200 v 998 3422 a(10)p 1269 3480 V 1 0 0 TeXcolorrgb
134 w(13)p Black 1608 3480 V 133 w(10)p 1948 3480 V 133
w(11)p 2287 3480 V 134 w(11)p 2626 3480 V 185 w(8)p 2966
3480 V 932 3485 2037 5 v 930 3685 5 200 v 1050 3626 a(7)p
1269 3685 V 1 0 0 TeXcolorrgb 185 w(10)p Black 1608 3685
V 185 w(8)p 1948 3685 V 236 w(9)p 2287 3685 V 236 w(9)p
2626 3685 V 237 w(7)p 2966 3685 V 932 3689 2037 5 v 930
3889 5 200 v 1050 3831 a(8)p 1269 3889 V 1 0 0 TeXcolorrgb
185 w(11)p Black 1608 3889 V 133 w(10)p 1948 3889 V 133
w(11)p 2287 3889 V 134 w(11)p 2626 3889 V 133 w(10)p
2966 3889 V 932 3894 2037 5 v 930 4093 5 200 v 1050 4035
a(4)p 1269 4093 V 236 w(8)p 1608 4093 V 237 w(8)p 1948
4093 V 236 w(9)p 2287 4093 V 185 w(10)p 2626 4093 V 1 0 0
TeXcolorrgb 133 w(11)p Black 2966 4093 V 932 4098 2037
5 v 930 4297 5 200 v 1050 4239 a(1)p 1269 4297 V 236
w(5)p 1608 4297 V 237 w(5)p 1948 4297 V 236 w(6)p 2287
4297 V 236 w(7)p 2626 4297 V 1 0 0 TeXcolorrgb 237 w(9)p
Black 2966 4297 V 932 4302 2037 5 v Black Black eop end
%%Page: 20 21
TeXDict begin 20 20 bop Black Black Black Black 1488
1973 a @beginspecial 0 @llx 0 @lly 111 @urx 111 @ury
1110 @rwi @setspecial
%%BeginDocument: monge2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 23 19:03:59 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 111 111
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 111 moveto 0 0 lineto 111 0 lineto 111 111 lineto closepath clip newpath
-70.7 451.3 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 1200 5700 m 3000 5700 l 3000 7500 l 1200 7500 l
 cp gs col0 s gr 
% Polyline
n 1200 6000 m
 3000 6000 l gs col0 s gr 
% Polyline
n 1200 6300 m 3000 6300 l
 2925 6300 l gs col0 s gr 
% Polyline
n 1200 6600 m
 3000 6600 l gs col0 s gr 
% Polyline
n 1200 6900 m
 3000 6900 l gs col0 s gr 
% Polyline
n 1200 7200 m
 3000 7200 l gs col0 s gr 
% Polyline
n 1500 5700 m 1800 5700 l 1800 6000 l 1500 6000 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 1500 6300 m 1800 6300 l 1800 6600 l 1500 6600 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
n 2700 6900 m 3000 6900 l 3000 7200 l 2700 7200 l
 cp gs col7 0.50 shd ef gr gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
3015 6780 m 3015 6720 l 2931 6720 l 2991 6750 l 2931 6780 l cp
1485 6720 m 1485 6780 l 1569 6780 l 1509 6750 l 1569 6720 l cp
eoclip
n 1500 6750 m
 3000 6750 l gs col0 s gr gr

% arrowhead
n 1569 6720 m 1509 6750 l 1569 6780 l 1569 6720 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 2931 6780 m 2991 6750 l 2931 6720 l 2931 6780 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1815 6180 m 1815 6120 l 1731 6120 l 1791 6150 l 1731 6180 l cp
1485 6120 m 1485 6180 l 1569 6180 l 1509 6150 l 1569 6120 l cp
eoclip
n 1500 6150 m
 1800 6150 l gs col0 s gr gr

% arrowhead
n 1569 6120 m 1509 6150 l 1569 6180 l 1569 6120 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1731 6180 m 1791 6150 l 1731 6120 l 1731 6180 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3015 7380 m 3015 7320 l 2931 7320 l 2991 7350 l 2931 7380 l cp
2685 7320 m 2685 7380 l 2769 7380 l 2709 7350 l 2769 7320 l cp
eoclip
n 2700 7350 m
 3000 7350 l gs col0 s gr gr

% arrowhead
n 2769 7320 m 2709 7350 l 2769 7380 l 2769 7320 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 2931 7380 m 2991 7350 l 2931 7320 l 2931 7380 l  cp gs 0.00 setgray ef gr  col0 s
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 1 TeXcolorrgb 3 2454 a Fl(Stair)m(case)46
b(Lemma:)p 1 0 0 TeXcolorrgb 56 w Fh(\031)6 b Fg(\()p
Fh(i)p Fg(\))49 b Fi(\024)g Fh(\031)6 b Fg(\()p Fh(i)39
b Fg(+)f(1\))p 0 0 1 TeXcolorrgb Fk(.)p Black 0 0 1 TeXcolorrgb
3 2936 a Fl(Pr)m(oof:)p Black 57 w Fk(This)45 b(f)-5
b(ollo)n(ws)45 b(directly)f(from)i(the)f(de\002nition)g(of)p
0 0 1 TeXcolorrgb 3 3168 a Fl(totall)n(y)g(monotonicity)p
Black Fk(.)3 3650 y(This)71 b(implies)e(that,)p 1 0 0
TeXcolorrgb 78 w(giv)l(en)h(the)h(ro)n(w)g(maxima)f(in)h(the)g(odd)3
3882 y(ro)n(ws)n(,)52 b(the)g(ro)n(w)f(maxima)g(in)g(the)g(e)-5
b(v)l(en)51 b(ro)n(ws)h(can)f(be)g(f)-5 b(ound)3 4115
y(using)69 b Fe(3n/2)h Fk(compar)r(isons)p Black 69 w(\(pro)n(ving)f
(the)h(correctness)e(of)3 4347 y(Step)46 b(6\).)p Black
3553 5372 a Fj(20)p Black eop end
%%Page: 21 22
TeXDict begin 21 21 bop Black Black Black Black 935 1468
2030 5 v 935 1710 5 242 v 0 0 1 TeXcolorrgb 982 1632
a Fl(Running)46 b(time)g(of)g(SMA)-10 b(WK)p Black 2960
1710 V 935 1715 2030 5 v 3 2114 a Fk(Assume)45 b(f)-5
b(or)46 b(no)n(w)f(that)p 0 0 1 TeXcolorrgb 46 w Fh(R)q(E)9
b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(m;)29 b(n)p Fg(\))p
Black 46 w Fk(uses)p 1 0 0 TeXcolorrgb 3 2346 a Fi(\024)48
b Fg(2)p Fh(m)8 b Fi(\000)g Fh(n)p Black 38 w Fk(compar)r(isons)n(.)52
b(Let)37 b Fh(T)24 b Fg(\()p Fh(m;)30 b(n)p Fg(\))37
b Fk(denote)g(the)g(n)n(um-)3 2579 y(ber)46 b(of)g(compar)r(ison)e
(required)h(to)h(\002nd)f(all)g(the)h(ro)n(w)f(maxima)3
2811 y(of)h(an)g Fh(m)39 b Fi(\002)g Fh(n)45 b Fk(totally-monotone)f
(matr)r(ix.)56 b(Then,)352 3168 y Fh(T)24 b Fg(\()p Fh(n;)30
b(n)p Fg(\))144 b Fi(\024)h Fg(3)p Fh(n=)p Fg(2)39 b(+)f
Fh(T)24 b Fg(\()p Fh(n=)p Fg(2)p Fh(;)30 b(n=)p Fg(2\))39
b(+)g(3)p Fh(n=)p Fg(2)1075 3426 y Fi(\024)145 b Fg(6)p
Fh(n)303 3683 y(T)24 b Fg(\()p Fh(m;)31 b(n)p Fg(\))144
b Fi(\024)h Fh(T)24 b Fg(\()p Fh(n;)29 b(n)p Fg(\))39
b(+)g(2)p Fh(m)h Fi(\000)e Fh(n)1063 3940 y Fg(=)133
b(5)p Fh(n)39 b Fg(+)f(2)p Fh(m)p Black 3553 5372 a Fj(21)p
Black eop end
%%Page: 22 23
TeXDict begin 22 22 bop Black Black Black Black 1238
377 1425 5 v 1238 621 5 244 v 0 0 1 TeXcolorrgb 1284
545 a Fh(R)q(E)9 b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n;)28
b(m)p Fg(\))p Black 2657 621 V 1238 626 1425 5 v 0 0 1
TeXcolorrgb 3 1026 a Fl(Lemma:)3 1259 y(Let)68 b Fh(a)g
Fl(and)g Fh(b)g Fl(be)f(tw)m(o)g(entries)h(in)g(the)g(same)f(r)m(o)n(w)
g(of)h(a)3 1491 y(totall)n(y-monotone)45 b(matrix.)3
1973 y(\(i\))61 b(If)p 1 0 0 TeXcolorrgb 61 w Fh(a)76
b(<)f(b)p 0 0 1 TeXcolorrgb Fl(,)65 b(there)c(will)g(be)g(no)g(r)m(o)n
(w-maxim)m(um)e(belo)n(w)3 2205 y(the)46 b(entr)r(y)g(of)g
Fh(a)p Fl(.)3 2687 y(\(ii\))57 b(If)p 1 0 0 TeXcolorrgb
56 w Fh(a)68 b Fi(\025)f Fh(b)p 0 0 1 TeXcolorrgb Fl(,)59
b(there)d(will)g(be)g(no)h(r)m(o)n(w-maxim)m(um)e(abo)m(ve)3
2919 y(the)46 b(entr)r(y)g(of)g Fh(b)p Fl(.)p Black 3
3401 a Fk(Proof:)82 b(If)59 b(this)e(is)h(not)g(tr)r(ue)n(,)k(then)c
(the)g(totally-monotonicty)3 3633 y(proper)7 b(ty)45
b(will)g(be)h(violated.)p Black Black 644 5134 a @beginspecial
0 @llx 0 @lly 93 @urx 93 @ury 1440 @rwi @setspecial
%%BeginDocument: monge3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge3.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 23 19:09:26 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 93 93
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 93 moveto 0 0 lineto 93 0 lineto 93 93 lineto closepath clip newpath
-34.7 127.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 600 600 m 2100 600 l 2100 2100 l 600 2100 l
 cp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 900 1200 m 1200 1200 l 1200 2100 l 900 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
n 600 1200 m 2100 1200 l 2100 1500 l 600 1500 l
 cp gs col0 s gr 
/Times-Roman ff 300.00 scf sf
975 1425 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
1275 1425 m
gs 1 -1 sc (<) col0 sh gr
/Times-Roman ff 300.00 scf sf
1575 1425 m
gs 1 -1 sc (b) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 1412 w @beginspecial 0 @llx 0 @lly 93 @urx
93 @ury 1440 @rwi @setspecial
%%BeginDocument: monge4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge4.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Nov 29 22:17:26 2004
%%For: golin@rabbit.cs.ust.hk (Mordecai J. Golin,,=EXP.2005.08.31=FACULTY=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 93 93
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 93 moveto 0 0 lineto 93 0 lineto 93 93 lineto closepath clip newpath
-34.7 127.3 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 600 600 m 2100 600 l 2100 2100 l 600 2100 l
 cp gs col0 s gr 
% Polyline
n 900 1200 m 1200 1200 l 1200 1500 l 900 1500 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1500 600 m 1800 600 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
n 600 1200 m 2100 1200 l 2100 1500 l 600 1500 l
 cp gs col0 s gr 
/Times-Roman ff 300.00 scf sf
975 1425 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
1575 1425 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 180.00 scf sf
1275 1425 m
gs 1 -1 sc (>=) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial Black 3553 5372 a Fj(22)p Black eop end
%%Page: 23 24
TeXDict begin 23 23 bop Black Black Black Black 1238
347 1425 5 v 1238 591 5 244 v 0 0 1 TeXcolorrgb 1284
515 a Fh(R)q(E)9 b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n;)28
b(m)p Fg(\))p Black 2657 591 V 1238 596 1425 5 v 3 929
a Fk(Star)7 b(t)46 b(with)g(the)f(\002rst)g(tw)n(o)i(elements)p
1 0 0 TeXcolorrgb 44 w Fh(a;)30 b(b)p Black 46 w Fk(in)45
b(the)h(top)g(ro)n(w)-10 b(.)3 1141 y(Algor)r(ithm)45
b(is:)3 1555 y(If)p 1 0 0 TeXcolorrgb 50 w Fh(a)57 b(<)g(b)p
Black Fk(,)51 b(eliminate)e(the)p 0 0 1 TeXcolorrgb 50
w(entire)h(column)p Black 49 w(of)p 1 0 0 TeXcolorrgb
50 w Fh(a)p Black Fk(.)71 b(Set)50 b(the)g(old)p 1 0 0
TeXcolorrgb 3 1767 a Fh(b)p Black 43 w Fk(to)43 b(be)g(the)g(ne)m(w)p
1 0 0 TeXcolorrgb 43 w Fh(a)p Black 43 w Fk(and)g(the)f(element)g(to)h
(its)f(r)r(ight)h(to)g(be)g(the)3 1978 y(ne)m(w)p 1 0 0
TeXcolorrgb 46 w Fh(b)p Black Fk(;)j(repeat.)3 2393 y(If)p
1 0 0 TeXcolorrgb 56 w Fh(a)67 b Fi(\025)f Fh(b)p Black
Fk(,)58 b(eliminate)p 1 0 0 TeXcolorrgb 54 w Fh(b)p Black
56 w Fk(and)e(all)f(the)h(entr)r(ies)p 0 0 1 TeXcolorrgb
55 w(abo)n(v)l(e)f(it)p Black(.)86 b(Set)3 2604 y(the)56
b(element)f(belo)n(w)g(the)h(old)f Fh(b)h Fk(to)g(be)g(the)f(ne)m(w)h
Fh(a)g Fk(and)g(the)3 2816 y(element)45 b(to)h(its)f(r)r(ight)h(to)g
(be)f(the)h(ne)m(w)g Fh(b)p Fk(;)g(go)f(to)h(ne)-5 b(xt)46
b(page)n(.)3 3230 y(Note)d(that,)h(b)m(y)e(pre)-5 b(vious)42
b(slide)n(,)g(eliminated-items)p 1 0 0 TeXcolorrgb 41
w Fl(can)h(not)p Black 3 3442 a Fk(be)j(ro)n(w-maxima.)p
Black Black 1200 5164 a @beginspecial 0 @llx 0 @lly 74
@urx 74 @ury 1800 @rwi @setspecial
%%BeginDocument: monge5.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge5.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 23 19:17:19 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 74 74
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 74 moveto 0 0 lineto 74 0 lineto 74 74 lineto closepath clip newpath
-35.3 108.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 1800 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 1800 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 1800 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 1800 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 300.00 scf sf
675 825 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
975 1125 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
1275 1125 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 300.00 scf sf
975 825 m
gs 1 -1 sc (b) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial Black 3553 5372 a Fj(23)p Black eop end
%%Page: 24 25
TeXDict begin 24 24 bop Black Black Black Black 1238
-111 1425 5 v 1238 133 5 244 v 0 0 1 TeXcolorrgb 1284
57 a Fh(R)q(E)9 b(D)c(U)18 b(C)12 b(E)d Fg(\()p Fh(n;)28
b(m)p Fg(\))p Black 2657 133 V 1238 138 1425 5 v 3 440
a Fk(In)45 b(step)p 1 0 0 TeXcolorrgb 45 w Fh(k)p Black
4 w Fk(,)i(assume)d(w)n(e)i(ha)m(v)l(e)e(an)p 1 0 0 TeXcolorrgb
45 w Fh(i)37 b Fi(\002)g Fh(i)p Black 45 w Fk(staircase)44
b(of)h(elimi-)3 642 y(nated)h(entr)r(ies)f(\()p 1 0 0
TeXcolorrgb Fh(i)k Fi(\024)f Fh(n)p Black Fk(\).)56 b(Compare)p
1 0 0 TeXcolorrgb 46 w Fh(a)p Black 46 w Fk(and)p 1 0 0
TeXcolorrgb 46 w Fh(b)p Black 46 w Fk(where)p 1 0 0 TeXcolorrgb
358 844 a Fh(a)50 b Fg(=)e(\()p Fh(i)39 b Fg(+)g(1)p
Fh(;)29 b(i)39 b Fg(+)g(1\))p Black 46 w Fk(and)p 1 0 0
TeXcolorrgb 46 w Fh(b)49 b Fg(=)f(\()p Fh(i)39 b Fg(+)g(1)p
Fh(;)29 b(i)39 b Fg(+)g(2\))p Black Fk(.)p Black Black
1200 2465 a @beginspecial 0 @llx 0 @lly 163 @urx 151
@ury 1800 @rwi @setspecial
%%BeginDocument: monge6.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge6.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Nov 23 19:22:13 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 163 151
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 151 moveto 0 0 lineto 163 0 lineto 163 151 lineto closepath clip newpath
-18.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 3000 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 3000 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 3000 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 3000 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1800 m
 3000 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2100 m
 3000 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2400 m
 3000 2400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m
 1800 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m
 2100 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m
 2400 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 600 m
 2700 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m 1800 600 l 1800 900 l 1500 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m 2100 600 l 2100 900 l 1800 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m 2400 600 l 2400 900 l 2100 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m 2700 600 l 2700 900 l 2400 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 900 m 1800 900 l 1800 1200 l 1500 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 900 m 2100 900 l 2100 1200 l 1800 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 900 m 2400 900 l 2400 1200 l 2100 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 900 m 2700 900 l 2700 1200 l 2400 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1200 m 2100 1200 l 2100 1500 l 1800 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1200 m 2400 1200 l 2400 1500 l 2100 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1200 m 2700 1200 l 2700 1500 l 2400 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1500 m 2100 1500 l 2100 1800 l 1800 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1500 m 2400 1500 l 2400 1800 l 2100 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1500 m 2700 1500 l 2700 1800 l 2400 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1800 m 2400 1800 l 2400 2100 l 2100 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1800 m 2700 1800 l 2700 2100 l 2400 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
420 2115 m 480 2115 l 480 1964 l 450 2084 l 420 1964 l cp
480 585 m 420 585 l 420 736 l 450 616 l 480 736 l cp
eoclip
n 450 600 m
 450 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 480 736 m 450 616 l 420 736 l 480 736 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 420 1964 m 450 2084 l 480 1964 l 420 1964 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2415 480 m 2415 420 l 2264 420 l 2384 450 l 2264 480 l cp
885 420 m 885 480 l 1036 480 l 916 450 l 1036 420 l cp
eoclip
n 900 450 m
 2400 450 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 1036 420 m 916 450 l 1036 480 l 1036 420 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 2264 480 m 2384 450 l 2264 420 l 2264 480 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 300.00 scf sf
2175 2325 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 2325 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 240.00 scf sf
1575 375 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 240.00 scf sf
300 1500 m
gs 1 -1 sc (i) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 3 2847 a(There)46 b(are)g(tw)n(o)g(cases:)p
0 0 1 TeXcolorrgb 55 w(\(I\))p 1 0 0 TeXcolorrgb 46 w
Fh(a)j(<)g(b)p 0 0 1 TeXcolorrgb 46 w Fk(and)d(\(II\))p
1 0 0 TeXcolorrgb 45 w Fh(a)j Fi(\025)g Fh(b)p 0 0 1
TeXcolorrgb Fk(.)3 3049 y(W)-5 b(e)46 b(will)f(see)n(,)g(that)h(after)f
(both)h(cases)n(,)e(w)n(e)j(will)e(ha)m(v)l(e)g(a)3 3251
y(staircase)f(of)p 1 0 0 TeXcolorrgb 46 w Fh(i)954 3193
y Fa(0)p 0 0 1 TeXcolorrgb 1044 3251 a Fk(eliminated)g(entr)r(ies)h
(such)g(that)3 3453 y(\(I\))p 1 0 0 TeXcolorrgb 41 w
Fh(a)p 0 0 1 TeXcolorrgb Fk(')-8 b(s)41 b(complete)f(column)f(is)i
(eliminated)e(and)p 1 0 0 TeXcolorrgb 41 w Fh(i)3063
3395 y Fa(0)3156 3453 y Fg(=)48 b Fh(i)22 b Fi(\000)g
Fg(1)p 0 0 1 TeXcolorrgb 41 w Fk(or)3 3655 y(\(IIa\))p
1 0 0 TeXcolorrgb 46 w Fh(b)p 0 0 1 TeXcolorrgb Fk(')-8
b(s)45 b(complete)f(column)h(is)g(eliminated)f(and)p
1 0 0 TeXcolorrgb 46 w Fh(i)3216 3597 y Fa(0)3308 3655
y Fg(=)49 b Fh(i)p 0 0 1 TeXcolorrgb 46 w Fk(or)3 3857
y(\(IIb\))p 1 0 0 TeXcolorrgb 40 w Fh(i)397 3799 y Fa(0)489
3857 y Fg(=)f Fh(i)16 b Fg(+)g(1)50 b Fi(\024)e Fh(n)p
0 0 1 TeXcolorrgb 39 w Fk(and)p 1 0 0 TeXcolorrgb 39
w Fh(b)p 0 0 1 TeXcolorrgb 40 w Fk(and)39 b(items)g(abo)n(v)l(e)f
(eliminated.)p Black 3 4322 a(Since)k(only)p 1 0 0 TeXcolorrgb
42 w Fh(m)29 b Fi(\000)f Fh(n)p Black 42 w Fk(columns)41
b(are)i(eliminated,)f(\(I\))g(and)h(\(IIa\))3 4524 y(together)h(occur)g
(e)-5 b(xactly)p 1 0 0 TeXcolorrgb 42 w Fh(m)34 b Fi(\000)g
Fh(n)p Black 44 w Fk(times)n(.)54 b(\(IIb\))45 b(can)e(occur)h(at)3
4726 y(most)p 1 0 0 TeXcolorrgb 57 w Fh(n)p Black 57
w Fk(times)57 b(more)g(than)g(the)g(n)n(umber)h(of)f(columns)f(that)3
4928 y(are)h(eliminated.)89 b(So)-7 b(,)60 b(the)d(total)g(n)n(umber)g
(of)g(compar)r(isons)3 5130 y(perf)-5 b(or)t(med)41 b(is)p
1 0 0 TeXcolorrgb 41 w Fi(\024)49 b Fg(\()p Fh(m)24 b
Fi(\000)g Fh(n)p Fg(\))g(+)g(\()p Fh(n)g Fg(+)g(\()p
Fh(m)g Fi(\000)g Fh(n)p Fg(\)\))49 b(=)f(2)p Fh(m)24
b Fi(\000)g Fh(n)p Black Fk(.)p Black 3553 5372 a Fj(24)p
Black eop end
%%Page: 25 26
TeXDict begin 25 25 bop Black Black Black Black 1601
352 698 5 v 1601 591 5 239 v 0 0 1 TeXcolorrgb 1648 515
a Fk(\(I\))46 b Fh(a)j(<)f(b)p Black 2294 591 V 1601
596 698 5 v 3 966 a Fk(In)d(step)p 1 0 0 TeXcolorrgb
45 w Fh(k)p Black 4 w Fk(,)i(assume)d(w)n(e)i(ha)m(v)l(e)e(an)p
1 0 0 TeXcolorrgb 45 w Fh(i)37 b Fi(\002)g Fh(i)p Black
45 w Fk(staircase)44 b(of)h(elimi-)3 1189 y(nated)h(entr)r(ies)f(\()p
1 0 0 TeXcolorrgb Fh(i)k Fi(\024)f Fh(k)p Black 4 w Fk(\).)58
b(Compare)p 1 0 0 TeXcolorrgb 45 w Fh(a)p Black 46 w
Fk(and)p 1 0 0 TeXcolorrgb 46 w Fh(b)p Black 46 w Fk(where)p
1 0 0 TeXcolorrgb 381 1412 a Fh(a)49 b Fg(=)g(\()p Fh(i)39
b Fg(+)g(1)p Fh(;)29 b(i)39 b Fg(+)g(1\))p Black 46 w
Fk(and)p 1 0 0 TeXcolorrgb 46 w Fh(b)49 b Fg(=)f(\()p
Fh(i)39 b Fg(+)g(1)p Fh(;)29 b(i)39 b Fg(+)g(2\))p Black
Fk(.)3 1863 y(There)46 b(are)g(tw)n(o)g(cases:)55 b(\(I\))p
1 0 0 TeXcolorrgb 46 w Fh(a)49 b(<)g(b)p Black 46 w Fk(and)d(\(II\))p
1 0 0 TeXcolorrgb 45 w Fh(a)j Fi(\025)g Fh(b)p Black
Fk(.)3 2313 y(\(I\))57 b(If)p 1 0 0 TeXcolorrgb 56 w
Fh(a)68 b(<)f(b)p Black Fk(,)59 b(eliminate)p 1 0 0 TeXcolorrgb
54 w Fh(a)p Black 57 w Fk(and)d(all)g(items)f(belo)n(w)h(it.)88
b(Since)3 2536 y(items)57 b(abo)n(v)l(e)p 1 0 0 TeXcolorrgb
56 w Fh(a)p Black 58 w Fk(pre)-5 b(viously)56 b(eliminated,)j
(eliminate)p 0 0 1 TeXcolorrgb 56 w(entire)3 2759 y(column)p
Black 1 0 0 TeXcolorrgb 41 w Fh(i)27 b Fg(+)g(1)p Black
Fk(.)56 b(This)42 b(giv)l(es)g(a)p 1 0 0 TeXcolorrgb
42 w Fg(\()p Fh(i)27 b Fi(\000)g Fg(1\))g Fi(\002)g Fg(\()p
Fh(i)g Fi(\000)g Fg(1\))p Black 45 w Fk(staircase)3 2983
y(of)41 b(eliminated)f(entr)r(ies)n(.)54 b(Ne)m(w)p 1 0 0
TeXcolorrgb 42 w Fh(a)p Black 42 w Fk(is)41 b(highest)f(non-eliminated)
3 3206 y(entr)5 b(y)45 b(in)h(column)p 1 0 0 TeXcolorrgb
45 w Fh(i)p Black Fk(.)82 5088 y @beginspecial 0 @llx
0 @lly 163 @urx 141 @ury 1800 @rwi @setspecial
%%BeginDocument: monge7.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge7.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Nov 29 15:45:50 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 163 141
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 141 moveto 0 0 lineto 163 0 lineto 163 141 lineto closepath clip newpath
-18.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 3000 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 3000 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 3000 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 3000 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1800 m
 3000 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2100 m
 3000 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2400 m
 3000 2400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m
 1800 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m
 2100 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m
 2400 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 600 m
 2700 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m 1800 600 l 1800 900 l 1500 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m 2100 600 l 2100 900 l 1800 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m 2400 600 l 2400 900 l 2100 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 900 m 1800 900 l 1800 1200 l 1500 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 900 m 2100 900 l 2100 1200 l 1800 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 900 m 2400 900 l 2400 1200 l 2100 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1200 m 2100 1200 l 2100 1500 l 1800 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1200 m 2400 1200 l 2400 1500 l 2100 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1500 m 2100 1500 l 2100 1800 l 1800 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1500 m 2400 1500 l 2400 1800 l 2100 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1800 m 2400 1800 l 2400 2100 l 2100 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
420 2115 m 480 2115 l 480 1964 l 450 2084 l 420 1964 l cp
480 585 m 420 585 l 420 736 l 450 616 l 480 736 l cp
eoclip
n 450 600 m
 450 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 480 736 m 450 616 l 420 736 l 480 736 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 420 1964 m 450 2084 l 480 1964 l 420 1964 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 300.00 scf sf
2175 2325 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 2325 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 240.00 scf sf
300 1500 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 300.00 scf sf
1875 525 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman ff 300.00 scf sf
2175 525 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 525 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 300.00 scf sf
2775 525 m
gs 1 -1 sc (z) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 1714 w Fg(=)-29 b Fi(\))214 b @beginspecial
0 @llx 0 @lly 163 @urx 141 @ury 1800 @rwi @setspecial
%%BeginDocument: monge8.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge8.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Nov 29 15:47:21 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 163 141
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 141 moveto 0 0 lineto 163 0 lineto 163 141 lineto closepath clip newpath
-18.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 3000 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 3000 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 3000 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 3000 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1800 m
 3000 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2100 m
 3000 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2400 m
 3000 2400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m
 1800 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m
 2100 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m
 2400 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 600 m
 2700 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m 1800 600 l 1800 900 l 1500 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m 2100 600 l 2100 900 l 1800 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 900 m 1800 900 l 1800 1200 l 1500 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 900 m 2100 900 l 2100 1200 l 1800 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1200 m 2100 1200 l 2100 1500 l 1800 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1500 m 2100 1500 l 2100 1800 l 1800 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
420 2115 m 480 2115 l 480 1964 l 450 2084 l 420 1964 l cp
480 585 m 420 585 l 420 736 l 450 616 l 480 736 l cp
eoclip
n 450 600 m
 450 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 480 736 m 450 616 l 420 736 l 480 736 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 420 1964 m 450 2084 l 480 1964 l 420 1964 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 240.00 scf sf
300 1500 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 300.00 scf sf
1875 525 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman ff 300.00 scf sf
1875 2025 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
2175 2025 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 300.00 scf sf
2175 525 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 525 m
gs 1 -1 sc (z) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial Black 3553 5372 a Fj(25)p Black eop end
%%Page: 26 27
TeXDict begin 26 26 bop Black Black Black Black 1578
-92 744 5 v 1578 147 5 239 v 0 0 1 TeXcolorrgb 1625 71
a Fk(\(II\))46 b Fh(a)j Fi(\025)f Fh(b)p Black 2317 147
V 1578 152 744 5 v 3 466 a Fk(In)d(step)p 1 0 0 TeXcolorrgb
45 w Fh(k)p Black 4 w Fk(,)i(assume)d(w)n(e)i(ha)m(v)l(e)e(an)p
1 0 0 TeXcolorrgb 45 w Fh(i)37 b Fi(\002)g Fh(i)p Black
45 w Fk(staircase)44 b(of)h(elimi-)3 672 y(nated)h(entr)r(ies)f(\()p
1 0 0 TeXcolorrgb Fh(i)k Fi(\024)f Fh(k)p Black 4 w Fk(\).)58
b(Compare)p 1 0 0 TeXcolorrgb 45 w Fh(a)p Black 46 w
Fk(and)p 1 0 0 TeXcolorrgb 46 w Fh(b)p Black 46 w Fk(where)p
1 0 0 TeXcolorrgb 381 879 a Fh(a)49 b Fg(=)g(\()p Fh(i)39
b Fg(+)g(1)p Fh(;)29 b(i)39 b Fg(+)g(1\))p Black 46 w
Fk(and)p 1 0 0 TeXcolorrgb 46 w Fh(b)49 b Fg(=)f(\()p
Fh(i)39 b Fg(+)g(1)p Fh(;)29 b(i)39 b Fg(+)g(2\))p Black
Fk(.)3 1274 y(There)46 b(are)g(tw)n(o)g(cases:)55 b(\(I\))p
1 0 0 TeXcolorrgb 46 w Fh(a)49 b(<)g(b)p Black 46 w Fk(and)d(\(II\))p
1 0 0 TeXcolorrgb 45 w Fh(a)j Fi(\025)g Fh(b)p Black
Fk(.)3 1670 y(\(II\))d(If)p 1 0 0 TeXcolorrgb 46 w Fh(a)j
Fi(\025)f Fh(b)p Black Fk(,)e(eliminate)p 1 0 0 TeXcolorrgb
44 w Fh(b)p Black 47 w Fk(and)f(all)g(the)h(entr)r(ies)p
0 0 1 TeXcolorrgb 45 w(abo)n(v)l(e)f(it)p Black(.)3 2066
y(Either)67 b(\(a\))p 1 0 0 TeXcolorrgb 67 w Fh(i)85
b Fg(=)h Fh(n)p Black Fk(,)72 b(in)66 b(which)h(case)p
1 0 0 TeXcolorrgb 66 w Fh(b)p Black 67 w Fk(is)f(bottom)g(item)g(in)3
2272 y(column)48 b(so)h(w)n(e)h(eliminate)p 0 0 1 TeXcolorrgb
48 w(entire)f(column)p Black 1 0 0 TeXcolorrgb 48 w Fh(i)41
b Fg(+)h(2)p Black Fk(,)50 b(set)f(ne)m(w)p 1 0 0 TeXcolorrgb
3 2478 a Fh(a)p Black 46 w Fk(to)d(be)g(old)p 1 0 0 TeXcolorrgb
45 w Fh(a)p Black 46 w Fk(and)g(the)g(staircase)e(remains)p
1 0 0 TeXcolorrgb 45 w Fh(i)38 b Fi(\002)h Fh(i)p Black
Fk(,)3 2874 y(or)k(\(b\))p 1 0 0 TeXcolorrgb 43 w Fh(i)49
b(<)f(n)p Black 43 w Fk(and)42 b(w)n(e)i(will)f(ha)m(v)l(e)e(increased)
h(the)h(siz)n(e)e(of)i(the)3 3080 y(staircase)e(to)p
1 0 0 TeXcolorrgb 43 w Fg(\()p Fh(i)29 b Fg(+)f(1\))h
Fi(\002)f Fg(\()p Fh(i)h Fg(+)f(1\))p Black 44 w Fk(and)42
b(set)h(ne)m(w)p 1 0 0 TeXcolorrgb 43 w Fh(a)p Black
43 w Fk(to)g(be)f(old)p 1 0 0 TeXcolorrgb 3 3286 a Fh(b)p
Black Fk(.)82 5101 y @beginspecial 0 @llx 0 @lly 163
@urx 141 @ury 1800 @rwi @setspecial
%%BeginDocument: monge7.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge7.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Nov 29 15:45:50 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 163 141
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 141 moveto 0 0 lineto 163 0 lineto 163 141 lineto closepath clip newpath
-18.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 3000 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 3000 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 3000 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 3000 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1800 m
 3000 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2100 m
 3000 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2400 m
 3000 2400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m
 1800 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m
 2100 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m
 2400 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 600 m
 2700 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m 1800 600 l 1800 900 l 1500 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m 2100 600 l 2100 900 l 1800 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m 2400 600 l 2400 900 l 2100 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 900 m 1800 900 l 1800 1200 l 1500 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 900 m 2100 900 l 2100 1200 l 1800 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 900 m 2400 900 l 2400 1200 l 2100 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1200 m 2100 1200 l 2100 1500 l 1800 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1200 m 2400 1200 l 2400 1500 l 2100 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1500 m 2100 1500 l 2100 1800 l 1800 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1500 m 2400 1500 l 2400 1800 l 2100 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1800 m 2400 1800 l 2400 2100 l 2100 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
420 2115 m 480 2115 l 480 1964 l 450 2084 l 420 1964 l cp
480 585 m 420 585 l 420 736 l 450 616 l 480 736 l cp
eoclip
n 450 600 m
 450 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 480 736 m 450 616 l 420 736 l 480 736 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 420 1964 m 450 2084 l 480 1964 l 420 1964 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 300.00 scf sf
2175 2325 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 2325 m
gs 1 -1 sc (b) col0 sh gr
/Times-Roman ff 240.00 scf sf
300 1500 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 300.00 scf sf
1875 525 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman ff 300.00 scf sf
2175 525 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 525 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 300.00 scf sf
2775 525 m
gs 1 -1 sc (z) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 1714 w Fg(=)-29 b Fi(\))214 b @beginspecial
0 @llx 0 @lly 163 @urx 141 @ury 1800 @rwi @setspecial
%%BeginDocument: monge9.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: monge9.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Mon Nov 29 15:49:46 2004
%%For: cscho@cssu100.cs.ust.hk (LEUNG Yiu Cho,dialin,=PG02=EXP.2005.08.31=PC.yes=RMACCESS.yes)
%%BoundingBox: 0 0 163 141
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 141 moveto 0 0 lineto 163 0 lineto 163 141 lineto closepath clip newpath
-18.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 600 600 m
 3000 600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 900 m
 3000 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1200 m
 3000 1200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1500 m
 3000 1500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 1800 m
 3000 1800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2100 m
 3000 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 2400 m
 3000 2400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m
 600 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m
 900 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m
 1200 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m
 1500 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m
 1800 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m
 2100 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 600 m
 2400 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2700 600 m
 2700 2700 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 180.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 600 m 1200 600 l 1200 900 l 900 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 60.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1500 600 l 1500 900 l 1200 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 600 m 1800 600 l 1800 900 l 1500 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 600 m 2100 600 l 2100 900 l 1800 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 600 m 2400 600 l 2400 900 l 2100 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 900 m 1500 900 l 1500 1200 l 1200 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 900 m 1800 900 l 1800 1200 l 1500 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 900 m 2100 900 l 2100 1200 l 1800 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 900 m 2400 900 l 2400 1200 l 2100 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1500 1200 m 1800 1200 l 1800 1500 l 1500 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1200 m 2100 1200 l 2100 1500 l 1800 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1200 m 2400 1200 l 2400 1500 l 2100 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 1500 m 2100 1500 l 2100 1800 l 1800 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1500 m 2400 1500 l 2400 1800 l 2100 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 1800 m 2400 1800 l 2400 2100 l 2100 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 140.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
420 2115 m 480 2115 l 480 1964 l 450 2084 l 420 1964 l cp
480 585 m 420 585 l 420 736 l 450 616 l 480 736 l cp
eoclip
n 450 600 m
 450 2100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 480 736 m 450 616 l 420 736 l 480 736 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 420 1964 m 450 2084 l 480 1964 l 420 1964 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2400 600 m 2700 600 l 2700 900 l 2400 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 900 m 2700 900 l 2700 1200 l 2400 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 60.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1200 m 2700 1200 l 2700 1500 l 2400 1500 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1500 m 2700 1500 l 2700 1800 l 2400 1800 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 1800 m 2700 1800 l 2700 2100 l 2400 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 2100 m 2700 2100 l 2700 2400 l 2400 2400 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 240.00 scf sf
300 1500 m
gs 1 -1 sc (i) col0 sh gr
/Times-Roman ff 300.00 scf sf
1875 525 m
gs 1 -1 sc (w) col0 sh gr
/Times-Roman ff 300.00 scf sf
2175 525 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 525 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 300.00 scf sf
2775 525 m
gs 1 -1 sc (z) col0 sh gr
/Times-Roman ff 300.00 scf sf
2475 2625 m
gs 1 -1 sc (a) col0 sh gr
/Times-Roman ff 300.00 scf sf
2775 2625 m
gs 1 -1 sc (b) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial Black 3553 5372 a Fj(26)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
